; ************************************
; Cinematic Loader (C2/6800 - C2/686B)
; ************************************

C2/6800:	4C 13 68   	JMP $6813      ; If we have to have this here, why is it not a BRA?

C2/6803:	4C 0C 68   	JMP $680C      ; Or this one?

C2/6806:	4C 1A 68   	JMP $681A      ; Or this one?

C2/6809:	4C 21 68   	JMP $6821      ; Or this one?

; These four function decompress, and then run, the code for showing a special cutscene, one that requires its own event code and doesn't show maps or sprites

; This is for showing the world gets torn asunder.
C2/680C:	20 28 68   	JSR $6828
C2/680F:	5C 00 50 7E	JMP $7E5000

; This is for the intro cutscene of the three Magitek soldiers approaching Narshe with the opening credits.
C2/6813:	20 28 68   	JSR $6828
C2/6816:	5C 03 50 7E	JMP $7E5003

; This is for the Floating Continent rising into the sky.
C2/681A:	20 28 68   	JSR $6828
C2/681D:	5C 06 50 7E	JMP $7E5006

; This is for the title screen.
C2/6821:	20 28 68   	JSR $6828
C2/6824:	5C 09 50 7E	JMP $7E5009

C2/6828:	08         	PHP
C2/6829:	C2 30      	REP #$30       ; 16-bit A, X, Y
C2/682B:	48         	PHA
C2/682C:	DA         	PHX
C2/682D:	5A         	PHY
C2/682E:	8B         	PHB
C2/682F:	0B         	PHD
C2/6830:	C2 10      	REP #$10       ; Um, X and Y are already 16-bit...
C2/6832:	E2 20      	SEP #$20       ; 8-bit A
C2/6834:	A9 00      	LDA #$00
C2/6836:	48         	PHA
C2/6837:	AB         	PLB            ; Data bank register now points to bank $00
C2/6838:	A2 00 00   	LDX #$0000     ; 0
C2/683B:	DA         	PHX
C2/683C:	2B         	PLD            ; Direct page register now points to bank $00, page $00
C2/683D:	A2 00 00   	LDX #$0000     ; X = 0 already...
C2/6840:	86 00      	STX $00
C2/6842:	A9 7E      	LDA #$7E       ; 126
C2/6844:	8D 83 21   	STA $2183
C2/6847:	A0 6C 68   	LDY #$686C     ; 26,732
C2/684A:	84 F3      	STY $F3
C2/684C:	A9 C2      	LDA #$C2       ; -62
C2/684E:	85 F5      	STA $F5
C2/6850:	A0 00 50   	LDY #$5000     ; 20,480
C2/6853:	84 F6      	STY $F6
C2/6855:	A9 7E      	LDA #$7E       ; 126
C2/6857:	85 F8      	STA $F8
C2/6859:	8B         	PHB
C2/685A:	A9 7E      	LDA #$7E       ; A = #$7E already...
C2/685C:	48         	PHA
C2/685D:	AB         	PLB            ; Data bank register now points to bank $7E
C2/685E:	22 6D FF C2	JSL $C2FF6D    ; Decompression function
C2/6862:	AB         	PLB
C2/6863:	C2 30      	REP #$30
C2/6865:	2B         	PLD
C2/6866:	AB         	PLB
C2/6867:	7A         	PLY
C2/6868:	FA         	PLX
C2/6869:	68         	PLA
C2/686A:	28         	PLP
C2/686B:	60         	RTS


;*****************************************************************************************
; Title, Intro, Floating Island, & World Cinematic Program (compressed)(C2/686C - C2/8A6F)
;*****************************************************************************************

C2/686C:	F421                       ; Length of data block (8692 bytes)

C2/686E:	FF 4C0C504CF3574CC4        ; Control byte, then 8-byte data block
C2/6877:	FF 694CF26C08C23048
C2/6880:	FF DA5A8B0B202F5020
C2/6889:	FF 7F5020F75020A850
C2/6892:	FF 204350204E50C230
C2/689B:	FF 2BAB7AFA68286BE2
C2/68A4:	FF 20A97E48ABA20000
C2/68AD:	FB DA2B130086002062
C2/68B6:	50 FF60A9F08F001300
C2/68BF:	22 FF0400C560A98F8F
C2/68C8:	00 FF21007B8F004200
C2/68D1:	8F FD0B35000C420060
C2/68DA:	A9 5CFF8D00158D0415
C2/68E3:	A2 33FF728E0115A264
C2/68EC:	72 8EFF0515A97E8D03
C2/68F5:	15 8DFF071560201177
C2/68FE:	7B 20FF935020157820
C2/6907:	4F 78FF20857420FA78
C2/6910:	60 8FDF021300A91023
C2/6919:	08 A902FB8F0125207B
C2/6922:	A5 193018FF0AAAFCDF
C2/692B:	50 A50689FF80D00820
C2/6934:	0F 7520FDFF7180E8A9
C2/693D:	FF 8D0002FFA00F0084
C2/6946:	15 A900A0FFA05520DC
C2/694F:	74 A415F0FE9528F460
C2/6958:	AE 51805297FF52A652
C2/6961:	E0 52EC523FFF537753
C2/696A:	8A 539C53B5D753BC53
C2/6973:	86 080D8B003151FA96
C2/697C:	20 EEA3B07BA8851984
C2/6985:	F7 2584276A084E5060
C2/698E:	55 FF51A55100006310
C2/6997:	BD DF770000FF7F1B99
C2/69A0:	20 06FF53A20030A065
C2/69A9:	74 20AF2473A2203831
C2/69B2:	31 423943BF7BA90120
C2/69BB:	3A 73360945D9745719
C2/69C4:	40 0135515711A000FF
C2/69CD:	01 8425A02C018415FF
C2/69D6:	E6 19A90F853260A4FF
C2/69DF:	15 D004A9FF85196016
C2/69E8:	48 09637B3C09405309
C2/69F1:	3C 09374955C39111C0
C2/69FA:	38 29403829603829E5
C2/6A03:	E0 3829A03829B10103
C2/6A0C:	7C A909045909BA0123
C2/6A15:	E2 21C301EC29CC01D9
C2/6A1E:	43 E221D501E37BE311
C2/6A27:	A9 011BA039AC08A03C
C2/6A30:	A5 007C191402FDC8AC
C2/6A39:	08 C220A940309D5301
C2/6A42:	37 0D00283A603372C0
C2/6A4B:	33 1A7E820912E619A0
C2/6A54:	43 04A60097FF8F0573
C2/6A5D:	00 FF610082090A9F20
C2/6A66:	97 78A01E1E12820935
C2/6A6F:	66 A800C553AD00A800
C2/6A78:	31 548D1A79AF940A36
C2/6A81:	09 837BA90264214DA3
C2/6A8A:	56 19A04A7911820907
C2/6A93:	62 02F1F0A50082097B
C2/6A9C:	01 A0C00384D1153309
C2/6AA5:	52 19E40960A800DB76
C2/6AAE:	BE 2C1A5C7A9D00350D
C2/6AB7:	00 40FF9D0133A9A09D
C2/6AC0:	01 344AE4425FF02290
C2/6AC9:	F8 2A82093362020E73
C2/6AD2:	01 15A2008E09A6222A
C2/6ADB:	13 E411C437012C0308
C2/6AE4:	64 21422382090EA9EB
C2/6AED:	40 04200B01A50020BD
C2/6AF6:	5C FE82090DE6196431
C2/6AFF:	A9 80CF8533A0A0D202
C2/6B08:	82 0908A0FDE0B81AA5
C2/6B11:	18 2903D0062FC220E6
C2/6B1A:	27 5B1A0281028709FD
C2/6B23:	7B A00060AA7CC953CD
C2/6B2C:	FF 53D553A61DFE003A
C2/6B35:	FF 9E0137A5333056A6
C2/6B3E:	FF 1D7BA89E0138A61D
C2/6B47:	FF BD0137187D013820
C2/6B50:	FF A55448AF12420029
C2/6B59:	7F 40F0F8A9088F1B30
C2/6B62:	08 BED603688F1C2100
C2/6B6B:	DF 0BA6FF1DC220AF35
C2/6B74:	21 0099EF8041E220BE
C2/6B7D:	0B 381869DF049D0138
C2/6B86:	C8 FF03C0C0FF00D0B6
C2/6B8F:	FE 01373860FD18A203
C2/6B98:	35 5439544154D6AB1B
C2/6BA1:	00 39B3035BB70BA910
C2/6BAA:	F4 FC03BE9B0AD5C300
C2/6BB3:	45 9902F545F293B308
C2/6BBC:	24 186940EBFFA500EB
C2/6BC5:	AA BF6DFEC2BEA203B3
C2/6BCE:	54 B754C1161CA9FB01
C2/6BD7:	9D 1D04182901F00FDE
C2/6BE0:	BE 030039C940B200DA
C2/6BE9:	54 F7FE00390B0CA940
C2/6BF2:	8F 05DD423100044200
C2/6BFB:	A7 048F06F74200EACA
C2/6C04:	0C 64F2A0FCFF0064E2
C2/6C0D:	64 E964EAAF7F154200
C2/6C16:	85 E8AF14DC04FDE7A7
C2/6C1F:	04 C5E290028007FE2F
C2/6C28:	02 0001800C7BA5EAFF
C2/6C31:	38 E5E2C22049FFFFFF
C2/6C3A:	1A 99FA3DA5E71865FF
C2/6C43:	E9 85E9E220E6E288F6
C2/6C4C:	10 05D0D0A2033D5541
C2/6C55:	55 FF5955A0FFFF8410
C2/6C5E:	A0 FF4000840EA97F85
C2/6C67:	14 F25F0B27AB138613
C2/6C70:	36 C220A5FF27C91F01
C2/6C79:	F0 2FC900FF01B02429
C2/6C82:	07 00D01FFFA52738E9
C2/6C8B:	08 0029F8FFFF0A0A0A
C2/6C94:	18 69C023DB85125045
C2/6C9D:	85 108E0B3860F3E220
C2/6CA6:	1F 150D0CA455A8554B
C2/6CAF:	B2 55951C0FF802B000
C2/6CB8:	0C BE0BFF338532DE01
C2/6CC1:	33 3860FA7003320D0C
C2/6CCA:	CC 55D255EB735520B6
C2/6CD3:	03 970C809D003C05F7
C2/6CDC:	A9 3E56F112205F7538
C2/6CE5:	FD 60A50C36F017C901
C2/6CEE:	F0 BF07A61DDE00369E
C2/6CF7:	05 02F7A0F956AD00E6
C2/6D00:	36 80ED7FBD013BC9FE
C2/6D09:	D0 03AD03ABC220C003
C2/6D12:	AA C20575C60520F8B5
C2/6D1B:	0B B7059A0C3A4CDC55
C2/6D24:	7B FFE634A518186534
C2/6D2D:	AA FFBF00FDC060237C
C2/6D36:	01 DF595602D9561E26
C2/6D3F:	79 56FF02995603B956
C2/6D48:	04 D9FF56FE6310DE66
C2/6D51:	5B 56FFB4452E350831
C2/6D5A:	E8 2CFFC728A624A51C
C2/6D63:	84 18FF64146310BB21
C2/6D6C:	36 11FF7F7300003952
C2/6D75:	D7 45DF5139EC2CE744
C2/6D7E:	16 8520EF841884144D
C2/6D87:	2E 7B5A00FF00943D53
C2/6D90:	35 EE2CAA1B24A56606
C2/6D99:	64 1C4D0E891E510EFF
C2/6DA2:	D6 450000AA20A720CF
C2/6DAB:	85 1C4318892E894ECC
C2/6DB4:	24 F81309B99E510E63
C2/6DBD:	10 AA7CFD9F56015736
C2/6DC6:	57 AB13FE05295F03F0
C2/6DCF:	37 0AAAF10546DE062E
C2/6DD8:	F1 12E220DAFE05FAF8
C2/6DE1:	02 FB1677297F692804
C2/6DEA:	34 A61DC405BCBE0BE9
C2/6DF3:	05 F005208DC60518FF
C2/6DFC:	60 00004E5766574EFF
C2/6E05:	57 7F57017E5701846A
C2/6E0E:	2D 17912D179E2D0FFE
C2/6E17:	AB 2D17D5B02D17BD2D
C2/6E20:	17 CA3F170001DF0800
C2/6E29:	4C 350324073510FF00
C2/6E32:	60 350810623503F708
C2/6E3B:	00 646A0766350820D5
C2/6E44:	68 6E0F6A6A076C7707
C2/6E4D:	6E 35FE5D0F75031000
C2/6E56:	4E 7508970060756B07
C2/6E5F:	75 6F0F960766A97578
C2/6E68:	07 9A0F6A96076CA307
C2/6E71:	6E FF7540A84070B048
C2/6E7A:	68 FFA8706860A880D0
C2/6E83:	88 FF5890A898885058
C2/6E8C:	70 FF609060107808C2
C2/6E95:	30 FF48DA5A8B0B202F
C2/6E9E:	50 FF20135820725820
C2/6EA7:	43 FD500B01C2302BAB
C2/6EB0:	7A FA7768286B5D0020
C2/6EB9:	3C 586902F27238047D
C2/6EC2:	28 6438FF61608BFFA9
C2/6ECB:	00 48ABA9038D01FF21
C2/6ED4:	A6 008E0221A907FF8D
C2/6EDD:	05 21A9788D0721FFA9
C2/6EE6:	7C 8D0821A9748DFF09
C2/6EEF:	21 8D0A21A9228DFF0B
C2/6EF8:	21 A9778D0C217B6F8D
C2/6F01:	1A 21AB8530AD5890F8
C2/6F0A:	FE B238220C00EE60B5
C2/6F13:	58 FF4C5A665A705A20
C2/6F1C:	70 EF5C205D5B1A1022
C2/6F25:	09 00FFEE220300EEAB
C2/6F2E:	20 45515C0801280B43
C2/6F37:	61 604A29804A29F1A0
C2/6F40:	4A 293779BAB9A96885
C2/6F49:	39 FFA948853AA97885
C2/6F52:	3B EFA9C0853C70033D
C2/6F5B:	A9 90FF853E6429642A
C2/6F64:	A0 387F00842B643764
C2/6F6D:	38 72007BC05F77007B
C2/6F76:	20 085BB10232360102
C2/6F7F:	35 01330B9064B112BF
C2/6F88:	08 404601A712C90046
C2/6F91:	01 051A4411063B13BF
C2/6F9A:	31 A07064A903A82210
C2/6FA3:	24 5221ED00305221C3
C2/6FAC:	01 505221FF39B27200
C2/6FB5:	27 30097200ED5A8D1A
C2/6FBE:	92 DEB1097B9D01399A
C2/6FC7:	0C 36A9F95A9C042F02
C2/6FD0:	A0 FF9D003850F402B6
C2/6FD9:	21 9A04BF010A030E28
C2/6FE2:	C8 195560CF6102BE09
C2/6FEB:	07 030E2DC819FD80CF
C2/6FF4:	19 E619A90185327663
C2/6FFD:	00 A0CA6F080F85325D
C2/7006:	2A 9BE40C7010E25C77
C2/700F:	00 640320E3795A9223
C2/7018:	40 0A9A33A53F8FDF1F
C2/7021:	21 00A5405912418FE5
C2/702A:	20 5B0242650AA50596
C2/7033:	5A 9CDF5AAF5AC65AAB
C2/703C:	13 7BBDBF0139A8B93C
C2/7045:	00 FD029E19000E07CB
C2/704E:	05 D00BAD03A704B705
C2/7057:	D3 3860D615C91D1EF1
C2/7060:	05 0034FF187D00389D
C2/7069:	00 34E2FD207F12BD01
C2/7072:	34 993C00FAD6151885
C2/707B:	1B 08C220C641F9C68F
C2/7084:	03 86033FD005A42B7F
C2/708D:	C8 842B386085F45905
C2/7096:	5F 85F3A4005ADB057E
C2/709F:	30 09EBA5F49C0CF3BE
C2/70A8:	01 7AC220B7B9455BBF
C2/70B1:	15 C8C8050B01FD370E
C2/70BA:	1B 38C8C01800D07FCD
C2/70C3:	60 316004F8542307FF
C2/70CC:	21 61FDE09061FBE09F
C2/70D5:	7F 600408D034031A18
C2/70DE:	17 FF8D2C21A9028D2D
C2/70E7:	21 FFA9E08D32219C20
C2/70F0:	43 FFA9328D2143A023
C2/70F9:	5C FF8C2243A97E8D24
C2/7102:	43 FF8D27439C3043A9
C2/710B:	05 FF8D3143A0405C8C
C2/7114:	32 FE5C0B34438D3743
C2/711D:	A9 01FF8D4043A9308D
C2/7126:	41 43DFA00E5C8C425C
C2/712F:	0B 4443FF8D47438D54
C2/7138:	43 8D57FD4345035043
C2/7141:	A9 118D51FF43A0015C
C2/714A:	8C 5243A9FF438D6043
C2/7153:	A9 1B8D61BF43A0155C
C2/715C:	8C 625C0B64F7438D67
C2/7165:	A8 0B7043A91DFF8D71
C2/716E:	43 A01C5C8C72FE5C0B
C2/7177:	74 438D7743A9FCFF04
C2/7180:	31 AB6027000010FEE0
C2/7189:	2B 00548204018081FF
C2/7192:	00 E4A03CFB303E00FF
C2/719B:	E4 2040FBB0410054FF
C2/71A4:	E0 01ED01EB01EA02FF
C2/71AD:	E9 03E804E705E606FF
C2/71B6:	E5 07E408E30CE20FFF
C2/71BF:	E1 1EE00054090107EF
C2/71C8:	00 7BAAA8AB0A039900
C2/71D1:	FF 3DBD8006998040C8
C2/71DA:	6F C8BDC0042B0C4008
C2/71E3:	31 14FFE8E8E0C001D0
C2/71EC:	DD E2FF2060A0000184
C2/71F5:	3F A0FF800084418425
C2/71FE:	7B A8FF842764726473
C2/7207:	64 74FFA0E0008487A0
C2/7210:	00 407F848BA0000084
C2/7219:	8D 1F0D7F8F20B15CA0
C2/7222:	40 742205BF00448412
C2/722B:	A9 7E2B0580FF02840E
C2/7234:	60 7BAA9E00FF44E8E0
C2/723D:	80 02D0F760727200C6
C2/7246:	39 0ACA0A01D00B9A19
C2/724F:	B6 CE0080099A099864
C2/7258:	CE 00387EA505E65CEA
C2/7261:	5C FC5C7A1286BA0547
C2/726A:	5D BF2D141FA70CDB00
C2/7273:	00 944719141F20E11C
C2/727C:	65 DC01EB34FEFFF018
C2/7285:	20 9375E210BDFB003B
C2/728E:	25 04B1EB85E7C2ED10
C2/7297:	C2 058B5EC70A986501
C2/72A0:	FF A5658B195E01BC65
C2/72A9:	FB 01C92915ED650101
C2/72B2:	66 5E2A0D216601363B
C2/72BB:	2D 5D3B15EF7E660188
C2/72C4:	3B 159A6601BDAD3B15
C2/72CD:	C1 6601D43B15F7AF66
C2/72D6:	01 096769252E711554
C2/72DF:	F7 67016671158D6701
C2/72E8:	A3 DE7115C46701DA71
C2/72F1:	15 F067F70105682A0D
C2/72FA:	15 6801315E9E154668
C2/7303:	01 61A72D94A72D7DCA
C2/730C:	9E 15F5680112692A0D
C2/7315:	EF 25690141CB155569
C2/731E:	01 BD68CB157A69018D
C2/7327:	CB 15A5F76901B4CB15
C2/7330:	19 5EFE468B4401F9BD
C2/7339:	FE F9FD1BFE316600FF
C2/7342:	A6 009BC220B2E785FF
C2/734B:	EB E6E7E6E7E220B1FF
C2/7354:	E7 8543C87BB1E7C87F
C2/735D:	20 DF5EB1E7F0171907
C2/7366:	FF 14C9FFF0195A9B91
C2/736F:	DF EBE89BA54392067A
C2/7378:	C8 FF80E560C221A980
C2/7381:	00 AF85E08007A00640
C2/738A:	A4 06A5DFEB65E085EB
C2/7393:	B7 02AAC8FF80C7DA5A
C2/739C:	0A 0AAABDFF075F49FF
C2/73A5:	8D 025CBDBD08C40E05
C2/73AE:	5C BD09C40E08F75CBD
C2/73B7:	0A C40E0B5C7AFA0423
C2/73C0:	07 E50E04EA06E816E9
C2/73C9:	06 EB06ED06FCEB16EB
C2/73D2:	06 A51FC977B03F6FA9
C2/73DB:	40 14337200DB76BA09
C2/73E4:	76 CB02070A2504B96E
C2/73ED:	5F 0813FFDA203056FA
C2/73F6:	9D 0133A7290F1A1903
C2/73FF:	28 2734120229FD0332
C2/7408:	07 379D00373860FFB4
C2/7411:	63 B763BA63BD63DFC0
C2/741A:	63 C363C64F07AA7C3F
C2/7423:	82 5F865F985F7A12D7
C2/742C:	04 FE8002187D013B9D
C2/7435:	01 3B77A61D7B9702A8
C2/743E:	A5 376F07BF37BB7539
C2/7447:	A6 1D2D07A5BD386F07
C2/7450:	38 BB753C860F34F720
C2/7459:	8D 75BE0CC45FC85FD9
C2/7462:	DF 631FCB0127600813
C2/746B:	A9 087673079E007507
C2/7474:	20 EF5F7807BB3BA816
C2/747D:	05 383860AB0A35DCB4
C2/7486:	0E F00CFFD008BA0720
C2/748F:	1B 276080F1F004920A
C2/7498:	3B EA07E00FDFE1DE01
C2/74A1:	3B 60C217C8B1FDEB73
C2/74AA:	07 600104020801FEEB
C2/74B3:	0E FF406004456010EF
C2/74BC:	4A 60044F1308FF0190
C2/74C5:	BF 2784300190262108
C2/74CE:	27 FB84702308705D60
C2/74D7:	14 6EFE3308FF049008
C2/74E0:	6C 30A0FF086E309018
C2/74E9:	80 30A0FF1882300498
C2/74F2:	08 6C70FF88086E7098
C2/74FB:	18 8070FF881882709A
C2/7504:	60 08A3FF6004AC6004
C2/750D:	B5 6004EFBE6008C761
C2/7516:	28 B560FFFF02800860
C2/751F:	30 801862AF30028009
C2/7528:	7B 00197F1064AA8500
C2/7531:	66 8000088D00189110
C2/753A:	68 F27C006A80089F00
C2/7543:	19 6A300FFF61081861
C2/754C:	04 FD6004FF066104EB
C2/7555:	60 08F460FEB3200661
C2/755E:	FF 02A00860FF70A018
C2/7567:	62 7002A009AACC0019
C2/7570:	D0 1064D60066D10008
C2/7579:	2A DE0018E21068CD00
C2/7582:	6A D108F000FF196A70
C2/758B:	3F 61044861FF045161
C2/7594:	04 5A610463FF61046C
C2/759D:	61 08756104EF7E6104
C2/75A6:	87 1509FF0290FF3F40
C2/75AF:	30 904F4230026B903D
C2/75B8:	20 014D24093F442101
C2/75C1:	D5 4625013E32014E36
C2/75CA:	09 3D48D22A014A3709
C2/75D3:	44 014E48093D4C522A
C2/75DC:	01 4E2E0956014F5A09
C2/75E5:	41 5601FF514E30AE61
C2/75EE:	08 B761FF04C06104C9
C2/75F7:	61 04D2FF6104DB6104
C2/7600:	E4 6104CFED6104F684
C2/7609:	09 C8003E48EF70A04E
C2/7612:	4A D1003D4C7057A04D
C2/761B:	4E D1003F98014F9C09
C2/7624:	55 419801519C1140A2
C2/762D:	01 4294095AB3014DB7
C2/7636:	09 3F44A20146D100D5
C2/763F:	3E C5014EC9093D8F01
C2/7648:	4D 4AFF7020A87AC221
C2/7651:	AF 66BFDADF6900DB85
C2/765A:	75 06AFFD68E401DF85
C2/7663:	E9 A00098FF84EBA97F
C2/766C:	85 EDA000BF0884EF20
C2/7675:	CC 62E0015DAAE409E3
C2/767E:	E9 115FEF29A0F87160
C2/7687:	EA E43962EF29A8F859
C2/7690:	64 E464FFE5A98085ED
C2/7699:	A2 0098FFA97F204863
C2/76A2:	20 DD62DFA000B884E7
C2/76AB:	FA 01E964D7ED64EE69
C2/76B4:	0C EB6E042018BF7AA2
C2/76BD:	80 0086E4561AA8F25D
C2/76C6:	CA 207A02CC07A400B7
C2/76CF:	E7 FF97EBC8C8C4EFD0
C2/76D8:	F6 F64B047BAACD07FB
C2/76E1:	62 A8E8BDE8BF0285E7
C2/76EA:	E8 E8260F1B7F63FAE0
C2/76F3:	20 00D0E5E41EEB0440
C2/76FC:	E9 0380E906C00000FF
C2/7705:	08 0020000C402000FB
C2/770E:	08 80EC02C0208BA97F
C2/7717:	EE 3E032085E0FE02E1
C2/7720:	A6 E7BFB9C00B9D00B8
C2/7729:	43 04C6FFE1D0F3C221
C2/7732:	A5 E769FB0001E909C6
C2/773B:	E0 D0DEABDF6085E986
C2/7744:	E7 F9127BAAFFA90885
C2/774D:	E6 C220A010FF00A7E7
C2/7756:	85 F1B7E785FFEF7BE2
C2/775F:	20 A008007BFF06F02A
C2/7768:	06 EF2A06F2FF2A06F1
C2/7771:	2A 290FF012FF85E0DA
C2/777A:	A6 E4BFB864F77EFA0A
C2/7783:	63 03293005E0FF9D01
C2/778C:	B8 E8E888D0D5FFA4E7
C2/7795:	C8 C884E7C6E6FFD0B8
C2/779E:	C2 20E6E4A5E7BF1869
C2/77A7:	10 0085E74203C6FFED
C2/77B0:	D0 A1AB60C963FEFFCE
C2/77B9:	63 FED363FED863FFFE
C2/77C2:	DD 63FEEE63FEF77F63
C2/77CB:	FE 0100008672A703DB
C2/77D4:	87 76A7038878A70389
C2/77DD:	7A DF0408088772A803
C2/77E6:	36 00FF108678200086
C2/77EF:	32 02BEB70376100889
C2/77F8:	76 CC0386FF7A300886
C2/7801:	38 0000FFFF7FF662E6
C2/780A:	20 00009CFF73514E83
C2/7813:	14 00000BFF46CA3D48
C2/781C:	29 692D49DF296A3508
C2/7825:	20 FC1BCD35FFAB3170
C2/782E:	56 6F564E52FEEE1B27
C2/7837:	25 C6140D4AE7FD1C08
C2/7840:	1C AC39692D2725FE08
C2/7849:	2C 8A356A31692D489B
C2/7852:	29 49F5030D4AFC2BFC
C2/785B:	0B 6FFE09040000EF41
C2/7864:	8C 3128FF2D0725E71C
C2/786D:	C6 188BFF416939062D
C2/7876:	C5 248AF73D2631FC1B
C2/787F:	00 00D262FB905A0C0C
C2/7888:	76 152E0042FF0C4108
C2/7891:	CD 456A3D28FF352825
C2/789A:	E7 2CE624C5FF20C518
C2/78A3:	A3 18831463AF100001
C2/78AC:	02 311E029F14031702
C2/78B5:	03 039F1C02981CA92C
C2/78BE:	AE FC74DFFCEC4C050E
C2/78C7:	25 0303031415401B2D
C2/78D0:	0C 1D1C4DA80C2D753B
C2/78D9:	1D 04ECDCFD009F0458
C2/78E2:	44 24002C2EFF2B2031
C2/78EB:	1F 212E00CEFF442000
C2/78F4:	09 0A13100FFF100316
C2/78FD:	01 14020C02BF081604
C2/7906:	09 0A00760501FF2025
C2/790F:	2E 211F302B2EFF00D0
C2/7918:	44 20011A1014FF090A
C2/7921:	0F 10130A010C7F0A15
C2/792A:	02 1406FE01870DFF1A
C2/7933:	16 0C0A010A1510FF16
C2/793C:	00 50442402291DF725
C2/7945:	2A 017A05232E1D29DD
C2/794E:	29 8005D2442098040C
C2/7957:	06 DF0F010F0213B605
C2/7960:	FE 0CA90AAB15AA1D0A
C2/7969:	CA 0D03D7052CE72425
C2/7972:	1F 9D3D83050315067F
C2/797B:	15 14161A0201159105
C2/7984:	F3 0902AD054C060C02
C2/798D:	1B 16970C1001AD0503
C2/7996:	1C 06DE0D00FEBC0505
C2/799F:	06 10010E0A0FFAA404
C2/79A8:	FE 182E0F100E1613F7
C2/79B1:	02 005A770529312F25
C2/79BA:	F9 1F3A168B0D100116
C2/79C3:	06 0EED021A06005200
C2/79CC:	06 25291DFF23210120
C2/79D5:	21 2F2523C92A8005A7
C2/79DE:	05 03AB15200E0102EF
C2/79E7:	0E 020F10770E041E1D
C2/79F0:	FF 30302821012C281D
C2/79F9:	1D 2A8726041A021B06
C2/7A02:	C2 0D2406EB0603BA05
C2/7A0B:	02 F02D101015FD0277
C2/7A14:	0E 052225212820B4A9
C2/7A1D:	36 830505AB15090A30
C2/7A26:	06 0E3F02060C021802
C2/7A2F:	29 06E30D3EB6050106
C2/7A38:	15 1009820D980C7F14
C2/7A41:	02 15101316011A0669
C2/7A4A:	0B 2806400E15F3150C
C2/7A53:	06 2E067ED316062132
C2/7A5C:	21 2A30DE4EFB060119
C2/7A65:	0F 0C0214020159071C
C2/7A6E:	07 ED0D060A4B0706F4
C2/7A77:	06 D61A06090259064E
C2/7A80:	33 0F222204A105D365
C2/7A89:	06 870DF40D660FED05
C2/7A92:	13 0F12CC160890076A
C2/7A9B:	0F 05A32ED53DE70E8C
C2/7AA4:	C7 06870D011A990694
C2/7AAD:	1D FF0D2F272B312ADD
C2/7AB6:	06 D53DD4150646061C
C2/7ABF:	16 0F9105100048CC05
C2/7AC8:	6F 2703368A83460287
C2/7AD1:	0D 0C730E8F0590050A
C2/7ADA:	23 004AA006D91EFE8F
C2/7AE3:	03 201E1707DA721610
C2/7AEC:	29 061A165C170F02E3
C2/7AF5:	10 13FB068B0DC11D0C
C2/7AFE:	06 05F502820D074807
C2/7B07:	10 0E1006C50147061B
C2/7B10:	F9 26EF07B205150235
C2/7B19:	0F 9105FE200E0E0A96
C2/7B22:	05 323671CCA805AD0D
C2/7B2B:	9B 08131016BE06210E
C2/7B34:	1E 08FB0EC736BA0016
C2/7B3D:	6F 00F307FF00292B2A
C2/7B46:	2F 30212EA0FD7F3B0E
C2/7B4F:	92 06F3151D2046D606
C2/7B58:	2B C31E26FA97E70E2C
C2/7B61:	0E BF171009F8F80E77
C2/7B6A:	16 D21F212A23252A7D
C2/7B73:	21 DC1D03060A0B0AE8
C2/7B7C:	05 F89800580E780E2E
C2/7B85:	21 291D27BAA83ED615
C2/7B8E:	06 18060A460601C50D
C2/7B97:	28 0602F10EC605990D
C2/7BA0:	03 303F2E1D2A2F281D
C2/7BA9:	A3 0D6B09FF15060501
C2/7BB2:	18 10100DFF14061A00
C2/7BBB:	08 C23048FFDA5A8B0B
C2/7BC4:	20 2F5020FFE1692010
C2/7BCD:	6A 204E50FFC2302BAB
C2/7BD6:	7A FA6828FF6B201177
C2/7BDF:	20 F46920FF1578204F
C2/7BE8:	78 2085747F20E56B60
C2/7BF1:	8B A900FC02FF038D01
C2/7BFA:	21 A6008E02FF21A907
C2/7C03:	8D 05217BA9FF808D1A
C2/7C0C:	21 AB607BA5FF19300D
C2/7C15:	0A AAFC3C6AFF200F75
C2/7C1E:	20 FD7180EEFFA00F00
C2/7C27:	84 15A900A0FFA05520
C2/7C30:	DC 74A415F0FD08F821
C2/7C39:	F4 60486A876AFF9E6A
C2/7C42:	AD 6ABC6AC66AFF20C3
C2/7C4B:	6B A20031A0657F7420
C2/7C54:	24 73A200302C2AFF31
C2/7C5D:	A0 D26CA902203AD831
C2/7C66:	12 3F2205028C6B0A02
C2/7C6F:	E6 19EFA90F85323703
C2/7C78:	84 1560FFA415D00FE6
C2/7C81:	19 A058750203121855
C2/7C8A:	0A 20CF6A640AA50769
C2/7C93:	02 3C0202784201843A
C2/7C9C:	02 FBE619780AA9FF85
C2/7CA5:	19 7BFF8D000260A53F
C2/7CAE:	8F 1FEF2100A540AF12
C2/7CB7:	41 8F20BAB10242BB12
C2/7CC0:	44 8F1BB10245AEC712
C2/7CC9:	46 8F1CB10247D31248
C2/7CD2:	EB 8F1DB10249DF124A
C2/7CDB:	8F 1EFAB1024BEB0A60
C2/7CE4:	AA 7C1C6BFF206B516B
C2/7CED:	A6 1DFE00FF3AA9808F
C2/7CF6:	30 2100A977578F3107
C2/7CFF:	03 178F2C0D13FD2D07
C2/7D08:	03 889D0133A920FF9D
C2/7D11:	02 33A9429D0134FE20
C2/7D1A:	03 0036A61DBD0036FF
C2/7D23:	D0 2FBD0133C997B0FF
C2/7D2C:	07 8F322100FE0133DF
C2/7D35:	BD 0233C98F3B230233
C2/7D3E:	9F BD0134C9913B2B29
C2/7D47:	1B DEFF00363860209D
C2/7D50:	6B A5FF182907D006C2
C2/7D59:	20 E6FF27E2203860A5
C2/7D62:	19 C97F03F00AC904F0
C2/7D6B:	0F 6D03F701D0087303
C2/7D74:	44 E64AE2E320608B13
C2/7D7D:	8E 038F13A04000FF84
C2/7D86:	3F A020008441A0FFA0
C2/7D8F:	FF 8425A0C0FF847F27
C2/7D98:	7B A884468448910AFF
C2/7DA1:	44 844A60A0964E84FF
C2/7DAA:	F3 A9D985F5A00000FF
C2/7DB3:	84 F6A97F85F8226DEB
C2/7DBC:	FF C2CC0BE7D103E9A0
C2/7DC5:	00 F79884EBD103EDA0
C2/7DCE:	C0 07FF84EF20CC62A9
C2/7DD7:	40 85FFEDA20098A97F
C2/7DE0:	20 7A7F6C203D6CA000
C2/7DE9:	B8 DC1BFF64ED64EEA0
C2/7DF2:	00 2084DDEBCC032018
C2/7DFB:	7A D1017F48FFAB7BAA
C2/7E04:	9D 00B8E8E8DFE00020
C2/7E0D:	D0 F6B503E7A9FF0A85
C2/7E16:	E0 A92085E1A6EFE7B9
C2/7E1F:	C0 072204C8E8E8FFC6
C2/7E28:	E1 D0F3C221A5E7FF69
C2/7E31:	00 0185E7E220C6FFE0
C2/7E3A:	D0 DEAB6085E986FDE7
C2/7E43:	1B 24A90885E6C220FE
C2/7E4C:	5F 02A7E785F1B7E785
C2/7E55:	FF EF7BE220A008007B
C2/7E5E:	FF 06F02A06EF2A06F2
C2/7E67:	FF 2A06F12A290FF000
C2/7E70:	FB 9D01240488D0E7A4
C2/7E79:	E7 FFC8C884E7C6E6D0
C2/7E82:	CA FFC220A5E7186910
C2/7E8B:	00 FB85E77404C6EDD0
C2/7E94:	B5 ABFF602F5E763E8E
C2/7E9D:	29 0AFF21C81C861464
C2/7EA6:	14 43BF10230C220400
C2/7EAF:	C4 34A47D18A2490F6D
C2/7EB8:	20 476DB369DB226DC5
C2/7EC1:	39 FB6FD141A982FF8D
C2/7ECA:	30 21A9508D3121FFA9
C2/7ED3:	17 8D2C21A9018DBF2D
C2/7EDC:	21 A9E08D32EB4173FD
C2/7EE5:	6D F8F97D6D276E416E
C2/7EEE:	FF 746E816E6434A980
C2/7EF7:	AB 8535323A802B2AA0
C2/7F00:	2B 427D2771A904430A
C2/7F09:	6B 05BD812574057DDD
C2/7F12:	81 1DA902A0FD6E5602
C2/7F1B:	FF C220A97A709D0035
C2/7F24:	FF A9FCFF9D0038A904
C2/7F2D:	7F 009D0037A968012C
C2/7F36:	03 2FE220A9721D0B80
C2/7F3F:	27 0B9E3D39A6A915B4
C2/7F48:	0D 38A9FEAF05B83DA5
C2/7F51:	50 1D0BA027035922B4
C2/7F5A:	61 4238F50403128AA1
C2/7F63:	0D 20976F208B4C6F64
C2/7F6C:	0A 286902000E321AA9
C2/7F75:	01 0884252E2E741530
C2/7F7E:	16 183E9D0A191EFEA4
C2/7F87:	32 AA7C8E6E926E97F9
C2/7F90:	6E FE122F1B39BC0039
C2/7F99:	5A D60502DB7656027A
C2/7FA2:	A5 051971BEAA05E220
C2/7FAB:	B9 E96E1D03C8FE9316
C2/7FB4:	34 C8C01400F016FFA6
C2/7FBD:	1D C220989D003962BF
C2/7FC6:	05 102C1365136A0D9D
C2/7FCF:	71 7005FF1860709D74
C2/7FD8:	A0 789EFF7C9D809C84
C2/7FE1:	9F 88A0FF8C9F90A494
C2/7FEA:	A5 AA7CBF016F056F15
C2/7FF3:	6F FE1220DB5F75A505
C2/7FFC:	94 02AB06A61DEE7C06
C2/8005:	F0 2BBC320317C221FF
C2/800E:	BD 00337D00379D00FF
C2/8017:	33 BD0034187D0038FF
C2/8020:	9D 0034E220C220DEDB
C2/8029:	00 393103F0036503E2
C2/8032:	20 F7208D756803836F
C2/803B:	29 1F5BD02705025A70
C2/8044:	A2 1DF6A90DF7E220DA
C2/804D:	2A 0F030AA8FAB7B97B
C2/8056:	6F 1D03B97C4E0734FF
C2/805F:	60 729A7A9262AA52FF
C2/8068:	BA 7BE634A534AABFDF
C2/8071:	00 FDC0853566176535
C2/807A:	AE 291707D02A3147DA
C2/8083:	3D 3FFA4F293F69681D
C2/808C:	03 8E2F98550F4A2A0F
C2/8095:	0F 7A57428D1E8E1F1F
C2/809E:	95 475D1FA11FA000E9
C2/80A7:	C6 03ECCAAB160B14E0
C2/80B0:	0F 120C301704FC0F06
C2/80B9:	44 5D07122CA0E016F2
C2/80C2:	4F 0D120CFD60170CAA
C2/80CB:	7C 5E706270F36A70E3
C2/80D4:	2E 2F03013BC9FEFBF0
C2/80DD:	05 251718607D70FEFF
C2/80E6:	0A 90001238A00014FF
C2/80EF:	38 B0001638801030FF
C2/80F8:	38 90103238A01034FF
C2/8101:	38 B0103638802050FF
C2/810A:	38 90205238A02054FF
C2/8113:	38 A970FE0C801810AF
C2/811C:	38 9000185F001A6300
C2/8125:	1C AF38C0001E6B0038
C2/812E:	6F 003ABE73003C38C0
C2/8137:	10 3E7F005AFF38B020
C2/8140:	5C 38C0205EFF38E770
C2/8149:	08 EC7008F17F7008E6
C2/8152:	70 FE0001C404F53AC5
C2/815B:	00 01C908023A0271DF
C2/8164:	08 0771080CD808FE01
C2/816D:	FF 0404033A01020204
C2/8176:	FF 3A030000053A0800
C2/817F:	FF 063A0008073A2E71
C2/8188:	FF 083371083871083D
C2/8191:	5C FB10FA002E71FFC5
C2/819A:	00 08C908F509C9080A
C2/81A3:	C9 080B3A5171FF0856
C2/81AC:	71 085F71086CBA2709
C2/81B5:	FE C5000C3A02300908
C2/81BE:	73 000DE90837191000
C2/81C7:	0E 3C59FF18000F3AE7
C2/81D0:	1C BD7BFF7A77587717
C2/81D9:	73 D46EFF8F664D62E8
C2/81E2:	59 864DFF253DE330A3
C2/81EB:	24 821CFF6218421000
C2/81F4:	00 BF26FFFF01954232
C2/81FD:	36 1132FFF02DCF29AE
C2/8206:	21 8D1DFF4B190915C8
C2/820F:	10 A60C875901B2C404
C2/8218:	89 098199890900C700
C2/8221:	7F 477D099719C679A9
C2/822A:	81 FF8F004200851758
C2/8233:	A5 FF17D0FC78A5328F
C2/823C:	00 FEB102318F0C4200
C2/8245:	20 1BFD729303A50849
C2/824E:	FF FF25FF048506A404
C2/8257:	84 08AFE518DF010491
C2/8260:	03 D02CE220ADFB1042
C2/8269:	01 0DA20000DA2B7FA5
C2/8272:	17 F00C2065724405FF
C2/827B:	03 888415E6186417FE
C2/8284:	E4 2C40409C0C429C0B
C2/828D:	FF 42A5258D0D21A526
C2/8296:	7E 4B0A278D0E21A528
C2/829F:	55 0ABF298D0F21A52A
C2/82A8:	5F 0A2BDF8D1021A52C
C2/82B1:	69 0A2D8DEF1121A52E
C2/82BA:	73 0A2F8D12F721A530
C2/82C3:	7D 0220B07220FFFE72
C2/82CC:	4C D572A6008EFF0221
C2/82D5:	8A 8D0443A902FF8D00
C2/82DE:	43 A9048D0143FFA000
C2/82E7:	03 8C0243A020EF028C
C2/82F0:	05 4319050B4260FFA4
C2/82F9:	10 C0FFFFF0218C6916
C2/8302:	18 0D9A02189E02A412
C2/830B:	A4 02DBA5149402A40E
C2/8314:	AA 32A500578D212197
C2/831D:	1A 229E1230A402DBA9
C2/8326:	7E 9402A000A93A86E7
C2/832F:	FF 84EBA400C220B1EB
C2/8338:	7D 919404C02000D0F5
C2/8341:	91 034948020B310F73
C2/834A:	36 079607399D0CE607
C2/8353:	07 A5EB111737087362
C2/835C:	73 BF7173A61DA91FB2
C2/8365:	06 9EDB013672063860
C2/836E:	75 0E39D06F2BBD0139
C2/8377:	AB 06C2200107DB85E0
C2/8380:	0A 0785E31B0785F1FF
C2/8389:	20 A873E220AE1D007A
C2/8392:	1B 0F05B706D0021860
C2/839B:	18 07FEBA061000A400
C2/83A4:	B1 E085FFE7B1E385E9
C2/83AD:	20 C273FFA5E791E0C8
C2/83B6:	C8 CAD0FFEC60A5E729
C2/83BF:	1F 0085F7EBA5E9A203
C2/83C8:	38 E5EBF0FF0C9008C5
C2/83D1:	F1 9006E6DFEB8002C6
C2/83DA:	EB A003E003FB85EDA7
C2/83E3:	03 E00338E5EDFFF01C
C2/83EC:	90 120A0A0AEBFEB303
C2/83F5:	12 18A5ED692000FF85
C2/83FE:	ED 8008A5ED38E9BCDC
C2/8407:	0B A003007C85EFA703
C2/8410:	00 FF7C38E5EFF01F90
C2/8419:	15 7FE220EB4A4AC220
C2/8422:	D4 1BBFEF69000485EF
C2/842B:	E0 03EFFB38E90C0CA5
C2/8434:	EB 05ED05FFEF85E760
C2/843D:	00 00FF7FF825CCC691
C2/8446:	C6 41A600861D86FF1F
C2/844F:	C2 2020B774E210FF7B
C2/8458:	AA 9E00329E003AFF9E
C2/8461:	00 3C9E00339E00FF34
C2/846A:	9E 00379E00389EFF00
C2/8473:	39 E8E8E000D0E2FE14
C2/847C:	07 10607BAAA901E07F
C2/8485:	9D 0003E8E8A901DD05
C2/848E:	DE 9C04E00002D00503
C2/8497:	98 99FB00050E1BF660
C2/84A0:	20 E974FFE220A51D9D
C2/84A9:	01 3CE6EB1F601C03EB
C2/84B2:	D0 030A0AC27F20AABD
C2/84BB:	00 32D005AA06FB3260
C2/84C4:	8A 0C01D0EFCACAFED8
C2/84CD:	0C 80FE60A2000386FF
C2/84D6:	0A A20005860CA903FF
C2/84DF:	85 236424A2800086F3
C2/84E8:	21 A60703D304F02286
C2/84F1:	1D FFDA851BE2207BBD
C2/84FA:	00 EF3A0A205CEA06FA
C2/8503:	B0 0EEE724439C61FDD
C2/850C:	1C D2208FFD7635036C
C2/8515:	1B 007B9D00FD3B5C0B
C2/851E:	35 85EBE220A0FF0200
C2/8527:	B1 EB9D013B60FFDA20
C2/8530:	93 75E210BD00FB3BA8
C2/8539:	08 0BC210A8E22035FA
C2/8542:	C2 066054054CDA4700
C2/854B:	06 0BFC43254A1822C9
C2/8554:	FF D0089E7F003B20CA
C2/855D:	75 80ED4A003BD00E59
C2/8566:	05 1869033E058C0D33
C2/856F:	DA DE5005571DC8C84D
C2/8578:	15 9204F2573D850D03
C2/8581:	90 0CA400A521FFF06A
C2/858A:	B1 E785E6F064FDC8D0
C2/8593:	05 E010127BA523FFAA
C2/859C:	BD 8B7618652485FF24
C2/85A5:	92 0CA61D8004A5DEE8
C2/85AE:	05 A5E0297F6103013A
C2/85B7:	BF 8901F00D64E1F901
C2/85C0:	E0 DF38E52585E02307
C2/85C9:	5D 76EFC623100AF71C
C2/85D2:	C2 20E6DD0C020E920A
C2/85DB:	E6 2306A5E2FE221EE2
C2/85E4:	20 C621F004C6FFE6D0
C2/85ED:	9D 60A5E0187D710160
C2/85F6:	03 D6053D063485E1D6
C2/85FF:	0D FBE2C8F90D02F006
C2/8608:	B1 E7EF09408002440E
C2/8611:	00 3C85FFE3C8608020
C2/861A:	08 02A4BF21F010A2FC
C2/8623:	01 971CCAE27A0688B7
C2/862C:	04 71FD9395AA7CDFDF
C2/8635:	76 E376EB76E32EA533
C2/863E:	3F 8940D01EA61DFFA6
C2/8647:	51 20FD8B1E0A7BA88C
C2/8650:	81 218CEF02218D04FB
C2/8659:	16 06218DA30C42AF02
C2/8662:	4B 020B0F0E10170FAA
C2/866B:	16 17101C1711221712
C2/8674:	28 1713F22E1714340F
C2/867D:	BA 028C18218DDB1A21
C2/8686:	DE 028D2246172321FF
C2/868F:	8D 24218D25218D26FF
C2/8698:	21 8D28218D27218DFF
C2/86A1:	29 218D2A218D2B21FF
C2/86AA:	8D 2E218D2F218D33FF
C2/86B3:	21 8D00428D02428DEF
C2/86BC:	03 428D04791705428D
C2/86C5:	EF 06428D0785170842
C2/86CE:	8D F5098E170A07170C
C2/86D7:	42 A963E38D01010590
C2/86E0:	02 D6020521A9FF038D
C2/86E9:	07 21A9118D08FF21A9
C2/86F2:	19 8D09218D0ABF21A9
C2/86FB:	23 8D0B21E6020CFF21
C2/8704:	A9 808D1521A9FFF78D
C2/870D:	01 42F1028321A91FD7
C2/8716:	8D 2C219C022DE00A30
C2/871F:	21 FFA9428D3121A9E0
C2/8728:	8D FF3221AB607BA884
C2/8731:	25 FF84278429842B84
C2/873A:	2D FF842F8415840484
C2/8743:	06 FF84088533851885
C2/874C:	19 FF851A8517853185
C2/8755:	32 FF85368412840EA9
C2/875E:	7E FF8514A0FFFF8410
C2/8767:	20 DF6478207078F801
C2/8770:	7B 8FFF162100A88F18
C2/8779:	21 003FC8C00080D0F6
C2/8782:	35 03700C7F3DE8E080
C2/878B:	0A D0F72C08FFAAA91F
C2/8794:	01 9D023DE8BE5800E0
C2/879D:	80 03D0F4950400F701
C2/87A6:	9D FC57180401D0F4FC
C2/87AF:	35 03EF16A9438D2043
C2/87B8:	8D EF30438D40F00A24
C2/87C1:	43 8DEF34438D44F00A
C2/87CA:	27 438DFF37438D4743
C2/87D3:	A9 0D8DFF2143A0E478
C2/87DC:	8C 2243FFA90F8D3143
C2/87E5:	A0 EB78F78C3243B207
C2/87EE:	41 43A0F2FF788C4243
C2/87F7:	A9 1C0431FFAB60E400
C2/8800:	3D FB903EFF00E48040
C2/8809:	FB 104200FFE40044FB
C2/8812:	90 450068FF20017AA0
C2/881B:	30 7984E7EFA97F85E9
C2/8824:	F6 0284EBA0FF001484
C2/882D:	ED A0001920F518DA00
C2/8836:	7B DE20B00684EB7F64
C2/883F:	ED 64EEA00020F1085B
C2/8848:	E0 81DE488000EC0811
C2/8851:	F1 08ABC01BDE281800
C2/885A:	29 00221133EADE2842
C2/8863:	00 2940F1007BAAC2FF
C2/886C:	20 BFE1DADF186900BF
C2/8875:	DB 85E7E8E8E2581169
C2/887E:	55 DFE2082000293009
C2/8887:	11 83DE28B508002928
C2/8890:	F1 0020330B018B56DE
C2/8899:	48 7707EC080509118D
C2/88A2:	DE 20DB101100217067
C2/88AB:	F1 08F09ED6DE20B80F
C2/88B4:	E7 0870C70160A0FF00
C2/88BD:	F0 84F3A9D885F5F637
C2/88C6:	01 84F6E000F8226DFF
C2/88CF:	F5 C24D009830087BA8
C2/88D8:	B7 E7F71865ED3510C8
C2/88E1:	C4 EBD07DF13503C220
C2/88EA:	A9 000430083F204C7A
C2/88F3:	A9 000C16223F08AFA8
C2/88FC:	A9 7707352004B70462
C2/8905:	BF 7AFE977AFE0D6004
C2/890E:	33 FF10000233200004
C2/8917:	33 FF30000633400008
C2/8920:	33 FF58002A3368002C
C2/8929:	33 FF78002E33001020
C2/8932:	33 FF10102233201024
C2/893B:	33 FF30102633401028
C2/8944:	33 AF04001040640242
C2/894D:	68 0244B66C024633D8
C2/8956:	08 4009DE28B0F61B03
C2/895F:	7F 85ED000484EF2043
C2/8968:	CC 62E809DF188A0201
C2/8971:	21 6422117553DE2822
C2/897A:	49 49A0C0238141F46F
C2/8983:	09 ED007C93092A7BA0
C2/898C:	C0 8D75DE2070030029
C2/8995:	DA 11110A7C7E3008A2
C2/899E:	20 02A9873E3508E7CA
C2/89A7:	D0 F97200580CE82486
C2/89B0:	FF 206310BD775C4BFA
C2/89B9:	FF 2A00007626D421B2
C2/89C2:	FF 150000EB0C881063
C2/89CB:	FE 3EFB109F6F5F57FF
C2/89D4:	46 FF7E361E261932BB
C2/89DD:	21 FF9B15761D3611F1
C2/89E6:	10 7FB008AD088B0850
C2/89EF:	60 04FC290B580C1E26
C2/89F8:	9B 15F110E64E6C0821
C2/8A01:	41 1B89AB0000C6FF1C
C2/8A0A:	A5 1C851C841864F914
C2/8A13:	A7 0BA73B5B56B4452E
C2/8A1C:	DF 350000DE66DB1B08
C2/8A25:	31 7FE82CC728A624A5
C2/8A2E:	C8 23BFBB2136117F73
C2/8A37:	E1 BB7FFD731B0C0000
C2/8A40:	7E 363611FF420C4108
C2/8A49:	CD 456A3DFF28352825
C2/8A52:	E7 2CE6247FC520C518
C2/8A5B:	A3 1883CC03

; Unused space
C2/8A60:	FFFFFFFF
			FFFFFFFF
			FFFFFFFF
			FFFFFFFF


; *****************************************
; Ending Cinematic Data (C2/8A70 - C2/953B)
; *****************************************

; Mode 7 animation script for aerial-view airship scene
C2/8A70:	8004 3C 	; x60 : Scroll up, zoom in
C2/8A73:	9004 3C 	; x60 : Scroll up, rotate CW, zoom in
C2/8A76:	9004 3C 	; x60 : Scroll up, rotate CW, zoom in
C2/8A79:	1004 1E 	; x30 : Scroll up, rotate CW
C2/8A7C:	5004 1E 	; x30 : Scroll up, rotate CW and FWD
C2/8A7F:	4004 1E 	; x30 : Scroll up, rotate FWD
C2/8A82:	C004 3C 	; x60 : Scroll up, rotate FWD, zoom in
C2/8A85:	4004 3C 	; x60 : Scroll up, rotate FWD
C2/8A88:	0004 3C 	; x60 : Scroll up
C2/8A8B:	0084 1E 	; x30 : Scroll up, zoom out
C2/8A8E:	1084 1E 	; x30 : Scroll up, rotate CW, zoom out
C2/8A91:	1004 78 	; x120: Scroll up, rotate CW
C2/8A94:	0004 1E 	; x30 : Scroll up
C2/8A97:	0084 3C 	; x60 : Scroll up, zoom out
C2/8A9A:	0004 B4 	; x180: Scroll up
C2/8A9D:	0004 B4 	; x180: Scroll up
C2/8AA0:	0004 B4 	; x180: Scroll up
C2/8AA3:	0004 B4 	; x180: Scroll up
C2/8AA6:	0004 B4 	; x180: Scroll up
C2/8AA9:	0004 B4 	; x180: Scroll up
C2/8AAC:	0044 1E 	; x30 : Scroll up, rotate BWD
C2/8AAF:	00C4 3C 	; x60 : Scroll up, rotate BWD, zoom out
C2/8AB2:	0044 3C 	; x60 : Scroll up, rotate BWD
C2/8AB5:	0004 3C 	; x60 : Scroll up
C2/8AB8:	0005 3C 	; x60 : Scroll NW
C2/8ABB:	2004 78 	; x120: Scroll up, rotate CCW
C2/8ABE:	8004 3C 	; x60 : Scroll up, zoom in
C2/8AC1:	0004 B4 	; ...
C2/8AC4:	0004 FE 	; Inf.: Scroll up

; Unused Mode 7 animation script
C2/8AC7:	9000 B4 	; x180: Rotate CW, zoom in
C2/8ACA:	1004 B4 	; x180: Scroll up, rotate CW
C2/8ACD:	5004 1E 	; x30 : Scroll up, rotate CW and FWD
C2/8AD0:	4004 B4 	; x180: Scroll up, rotate FWD
C2/8AD3:	0004 B4 	; ...
C2/8AD6:	0004 FE 	; Inf.: Scroll up

; Mode 7 animation script for boat scene
C2/8AD9:	C008 3C 	; x60 : Scroll down, rotate FWD, zoom in
C2/8ADC:	C008 3C 	; x60 : Scroll down, rotate FWD, zoom in
C2/8ADF:	0008 B4 	; x180: Scroll down
C2/8AE2:	0008 B4 	; x180: Scroll down
C2/8AE5:	0008 B4 	; x180: Scroll down
C2/8AE8:	2000 1E 	; x30 : Rotate CCW
C2/8AEB:	4004 1E 	; x30 : Scroll up, rotate FWD
C2/8AEE:	8004 3C 	; x60 : Scroll up, zoom in
C2/8AF1:	2002 61 	; x97 : Scroll right, rotate CCW
C2/8AF4:	0082 46 	; x70 : Scroll right, zoom out
C2/8AF7:	0002 FE 	; Inf.: Scroll right

; Mode 7 animation script for aerial-view plains scene
C2/8AFA:	0008 B4 	; x180: Scroll down
C2/8AFD:	0008 B4 	; x180: Scroll down
C2/8B00:	0008 B4 	; x180: Scroll down
C2/8B03:	0008 0A 	; x10 : Scroll down
C2/8B06:	0008 78 	; x120: Scroll down
C2/8B09:	C008 5A 	; x90 : Scroll down, rotate FWD, zoom in
C2/8B0C:	4008 14 	; x20 : Scroll down, rotate FWD
C2/8B0F:	0008 B4 	; x180: Scroll down
C2/8B12:	0008 B4 	; x180: Scroll down
C2/8B15:	0008 B4 	; x180: Scroll down
C2/8B18:	0008 B4 	; x180: Scroll down
C2/8B1B:	1008 1E 	; x30 : Scroll down, rotate CW
C2/8B1E:	0008 B4 	; x180: Scroll down
C2/8B21:	0008 B4 	; x180: Scroll down
C2/8B24:	0008 B4 	; x180: Scroll down
C2/8B27:	0008 B4 	; x180: Scroll down
C2/8B2A:	0008 B4 	; x180: Scroll down
C2/8B2D:	2008 0A 	; x10 : Scroll down, rotate CCW
C2/8B30:	6008 1E 	; x30 : Scroll down, rotate CCW and FWD
C2/8B33:	0008 FE 	; Inf.: Scroll down

; Mode 7 animation script for skimming airship scene
C2/8B36:	0001 FE 	; Inf.: Scroll left

; Mode 7 animation script for frontview airship scene
C2/8B39:	0004 FE 	; Inf.: Scroll up

; Mode 7 animation script for panning clouds scene
C2/8B3C:	0008 B4 	; ...
C2/8B3F:	0008 FE 	; Inf.: Scroll down

; Mode 7 animation script for spining clouds scene
C2/8B42:	9008 FE 	; Inf.: Scroll down, rotate CW, zoom in

; Animation script for last book
C2/8B45:	898B    	; Frame B
C2/8B47:	08      	; Wait: 8
C2/8B48:	918B    	; Frame C
C2/8B4A:	08      	; Wait: 8
C2/8B4B:	998B    	; Frame D
C2/8B4D:	08      	; Wait: 8
C2/8B4E:	A18B    	; Frame E
C2/8B50:	08      	; Wait: 8
C2/8B51:	A18B    	; Bogus...
C2/8B53:	FF      	; Loop

; Animation script for stopping book
C2/8B54:	898B    	; Frame B
C2/8B56:	08      	; Wait: 8
C2/8B57:	918B    	; Frame C
C2/8B59:	08      	; Wait: 8
C2/8B5A:	998B    	; Frame D
C2/8B5C:	08      	; Wait: 8
C2/8B5D:	A98B    	; Frame F
C2/8B5F:	08      	; Wait: 8
C2/8B60:	818B    	; Frame A
C2/8B62:	FE      	; Freeze

; Animation script for first book
C2/8B63:	898B    	; Frame B
C2/8B65:	08      	; Wait: 8
C2/8B66:	918B    	; Frame C
C2/8B68:	08      	; Wait: 8
C2/8B69:	998B    	; Frame D
C2/8B6B:	08      	; Wait: 8
C2/8B6C:	A18B    	; Frame E
C2/8B6E:	08      	; Wait: 8
C2/8B6F:	A18B    	; Bogus...
C2/8B71:	FF      	; Loop

; Animation script for Strago's book
C2/8B72:	898B    	; Frame B
C2/8B74:	08      	; Wait: 8
C2/8B75:	918B    	; Frame C
C2/8B77:	08      	; Wait: 8
C2/8B78:	998B    	; Frame D
C2/8B7A:	08      	; Wait: 8
C2/8B7B:	A18B    	; Frame E
C2/8B7D:	08      	; Wait: 8
C2/8B7E:	A18B    	; Bogus...
C2/8B80:	FF      	; Loop

; Book frame A
C2/8B81:	1C00    	; Width: 14
C2/8B83:	0600    	; Height: 6
C2/8B85:	C80B    	; Src: 7F/0BC8
C2/8B87:	D93A    	; Dst: 7E/3AD9

; Book frame B
C2/8B89:	1C00    	; Width: 14
C2/8B8B:	0600    	; Height: 6
C2/8B8D:	E40B    	; Src: 7F/0BE4
C2/8B8F:	D93A    	; Dst: 7E/3AD9

; Book frame C
C2/8B91:	1C00    	; Width: 14
C2/8B93:	0600    	; Height: 6
C2/8B95:	480D    	; Src: 7F/0D48
C2/8B97:	D93A    	; Dst: 7E/3AD9

; Book frame D
C2/8B99:	1C00    	; Width: 14
C2/8B9B:	0600    	; Height: 6
C2/8B9D:	640D    	; Src: 7F/0D64
C2/8B9F:	D93A    	; Dst: 7E/3AD9

; Book frame E
C2/8BA1:	1C00    	; Width: 14
C2/8BA3:	0600    	; Height: 6
C2/8BA5:	C80E    	; Src: 7F/0EC8
C2/8BA7:	D93A    	; Dst: 7E/3AD9

; Book frame F
C2/8BA9:	1C00    	; Width: 14
C2/8BAB:	0600    	; Height: 6
C2/8BAD:	E40E    	; Src: 7F/0EE4
C2/8BAF:	D93A    	; Dst: 7E/3AD9

; Animation script for skimming airship
C2/8BB1:	BA8B    	; Frame 1
C2/8BB3:	02      	; Wait: 2
C2/8BB4:	D38B    	; Frame 2
C2/8BB6:	02      	; Wait: 2
C2/8BB7:	D38B    	; Bogus...
C2/8BB9:	FF      	; Loop

; OAM for skimming airship, frame 1
C2/8BBA:	06      	; Tiles: 6
C2/8BBB:	80000C32	; Tile 1
C2/8BBF:	90000E32	; Tile 2
C2/8BC3:	80102032	; Tile 3
C2/8BC7:	90102232	; Tile 4
C2/8BCB:	08186C32	; Tile 5
C2/8BCF:	18187C32	; Tile 6

; OAM for skimming airship, frame 2
C2/8BD3:	06      	; Tiles: 6
C2/8BD4:	80000C32	; Tile 1
C2/8BD8:	90000E32	; Tile 2
C2/8BDC:	80102032	; Tile 3
C2/8BE0:	90102232	; Tile 4
C2/8BE4:	08186D32	; Tile 5
C2/8BE8:	18187D32	; Tile 6

; Animation script for skimming airship's shadow
C2/8BEC:	018C    	; Frame 1
C2/8BEE:	2B      	; Wait: 43
C2/8BEF:	0A8C    	; Frame 2
C2/8BF1:	2B      	; Wait: 43
C2/8BF2:	138C    	; Frame 3
C2/8BF4:	2B      	; Wait: 43
C2/8BF5:	1C8C    	; Frame 4
C2/8BF7:	2B      	; Wait: 43
C2/8BF8:	138C    	; Frame 5
C2/8BFA:	2B      	; Wait: 43
C2/8BFB:	0A8C    	; Frame 6
C2/8BFD:	2B      	; Wait: 43
C2/8BFE:	018C    	; Bogus...
C2/8C00:	FF      	; Loop

; OAM for skimming airship's shadow, frame 1
C2/8C01:	02      	; Tiles: 2
C2/8C02:	00007032	; Tile 1
C2/8C06:	08007132	; Tile 2

; OAM for skimming airship's shadow, frame 2
C2/8C0A:	02      	; Tiles: 2
C2/8C0B:	00007232	; Tile 1
C2/8C0F:	08007332	; Tile 2

; OAM for skimming airship's shadow, frame 3
C2/8C13:	02      	; Tiles: 2
C2/8C14:	00007432	; Tile 1
C2/8C18:	08007532	; Tile 2

; OAM for skimming airship's shadow, frame 4
C2/8C1C:	02      	; Tiles: 2
C2/8C1D:	00007632	; Tile 1
C2/8C21:	08007732	; Tile 2

; Animation script for frontview airship
C2/8C25:	2E8C    	; Frame 1
C2/8C27:	02      	; Wait: 2
C2/8C28:	478C    	; Frame 2
C2/8C2A:	02      	; Wait: 2
C2/8C2B:	478C    	; Bogus...
C2/8C2D:	FF      	; Loop

; OAM for frontview airship, frame 1
C2/8C2E:	06      	; Tiles: 6
C2/8C2F:	90000C72	; Tile 1
C2/8C33:	80000E72	; Tile 2
C2/8C37:	90102072	; Tile 3
C2/8C3B:	80102272	; Tile 4
C2/8C3F:	10186C72	; Tile 5
C2/8C43:	00187C72	; Tile 6

; OAM for frontview airship, frame 2
C2/8C47:	06      	; Tiles: 6
C2/8C48:	90000C72	; Tile 1
C2/8C4C:	80000E72	; Tile 2
C2/8C50:	90102072	; Tile 3
C2/8C54:	80102272	; Tile 4
C2/8C58:	10186D72	; Tile 5
C2/8C5C:	00187D72	; Tile 6

; Animation script for rearview airship
C2/8C60:	638C    	; Frame 1
C2/8C62:	FE      	; Freeze

; OAM for rearview airship
C2/8C63:	1E      	; Tiles: 30
C2/8C64:	B0380036	; Tile 1
C2/8C68:	B0480236	; Tile 2
C2/8C6C:	B0580436	; Tile 3
C2/8C70:	C0380076	; Tile 4
C2/8C74:	C0480276	; Tile 5
C2/8C78:	C0580476	; Tile 6
C2/8C7C:	B000C070	; Tile 7
C2/8C80:	A000C270	; Tile 8
C2/8C84:	9000C470	; Tile 9
C2/8C88:	B010C670	; Tile 10
C2/8C8C:	A010C870	; Tile 11
C2/8C90:	9010CA70	; Tile 12
C2/8C94:	B020CC70	; Tile 13
C2/8C98:	A020CE70	; Tile 14
C2/8C9C:	B030E070	; Tile 15
C2/8CA0:	2830E270	; Tile 16
C2/8CA4:	9020E370	; Tile 17
C2/8CA8:	8828E670	; Tile 18
C2/8CAC:	C000C030	; Tile 19
C2/8CB0:	D000C230	; Tile 20
C2/8CB4:	E000C430	; Tile 21
C2/8CB8:	C010C630	; Tile 22
C2/8CBC:	D010C830	; Tile 23
C2/8CC0:	E010CA30	; Tile 24
C2/8CC4:	C020CC30	; Tile 25
C2/8CC8:	D020CE30	; Tile 26
C2/8CCC:	C030E030	; Tile 27
C2/8CD0:	5030E230	; Tile 28
C2/8CD4:	E020E330	; Tile 29
C2/8CD8:	E828E630	; Tile 30

; Animation script for aerial-view airship
C2/8CDC:	DF8C    	; Frame 1
C2/8CDE:	FE      	; Freeze

; OAM for aerial-view airship
C2/8CDF:	04      	; Tiles: 4
C2/8CE0:	00000832	; Tile 1
C2/8CE4:	08000932	; Tile 2
C2/8CE8:	00081832	; Tile 3
C2/8CEC:	08081932	; Tile 4

; Animation script for aerial-view airship's shadow
C2/8CF0:	F98C    	; Show shadow
C2/8CF2:	01      	; Wait: 1
C2/8CF3:	0A8D    	; Hide shadow
C2/8CF5:	01      	; Wait: 1
C2/8CF6:	0A8D    	; Bogus...
C2/8CF8:	FF      	; Loop

; OAM for aerial-view airship's shadow
C2/8CF9:	04      	; Tiles: 4
C2/8CFA:	00000A32	; Tile 1
C2/8CFE:	08000B32	; Tile 2
C2/8D02:	00081A32	; Tile 3
C2/8D06:	08081B32	; Tile 4

; Blank sprite A
C2/8D0A:	00      	; Tiles: 0

; Animation script for water spray
C2/8D0B:	1A8D    	; Frame 1
C2/8D0D:	06      	; Wait: 6
C2/8D0E:	238D    	; Frame 2
C2/8D10:	06      	; Wait: 6
C2/8D11:	2C8D    	; Frame 3
C2/8D13:	06      	; Wait: 6
C2/8D14:	358D    	; Frame 4
C2/8D16:	06      	; Wait: 6
C2/8D17:	0A8D    	; Hide
C2/8D19:	FE      	; Freeze

; OAM for water spray, frame 1
C2/8D1A:	02      	; Tiles: 2
C2/8D1B:	8000403E	; Tile 1
C2/8D1F:	9000423E	; Tile 2

; OAM for water spray, frame 2
C2/8D23:	02      	; Tiles: 2
C2/8D24:	8000443E	; Tile 1
C2/8D28:	9000463E	; Tile 2

; OAM for water spray, frame 3
C2/8D2C:	02      	; Tiles: 2
C2/8D2D:	8000483E	; Tile 1
C2/8D31:	90004A3E	; Tile 2

; OAM for water spray, frame 4
C2/8D35:	02      	; Tiles: 2
C2/8D36:	80004C3E	; Tile 1
C2/8D3A:	90004E3E	; Tile 2

; Animation script for west airship rotor
C2/8D3E:	4D8D    	; Frame 1
C2/8D40:	01      	; Wait: 1
C2/8D41:	5E8D    	; Frame 2
C2/8D43:	01      	; Wait: 1
C2/8D44:	6F8D    	; Frame 3
C2/8D46:	01      	; Wait: 1
C2/8D47:	808D    	; Frame 4
C2/8D49:	01      	; Wait: 1
C2/8D4A:	808D    	; Bogus...
C2/8D4C:	FF      	; Loop

; OAM for west airship rotor, frame 1
C2/8D4D:	04      	; Tiles: 4
C2/8D4E:	80008030	; Tile 1
C2/8D52:	90008230	; Tile 2
C2/8D56:	8010A030	; Tile 3
C2/8D5A:	9010A230	; Tile 4

; OAM for west airship rotor, frame 2
C2/8D5E:	04      	; Tiles: 4
C2/8D5F:	80008430	; Tile 1
C2/8D63:	90008630	; Tile 2
C2/8D67:	8010A430	; Tile 3
C2/8D6B:	9010A630	; Tile 4

; OAM for west airship rotor, frame 3
C2/8D6F:	04      	; Tiles: 4
C2/8D70:	80008830	; Tile 1
C2/8D74:	90008A30	; Tile 2
C2/8D78:	8010A830	; Tile 3
C2/8D7C:	9010AA30	; Tile 4

; OAM for west airship rotor, frame 4
C2/8D80:	04      	; Tiles: 4
C2/8D81:	80008C30	; Tile 1
C2/8D85:	90008E30	; Tile 2
C2/8D89:	8010AC30	; Tile 3
C2/8D8D:	9010AE30	; Tile 4

; Animation script for east airship rotor
C2/8D91:	A08D    	; Frame 1
C2/8D93:	01      	; Wait: 1
C2/8D94:	B18D    	; Frame 2
C2/8D96:	01      	; Wait: 1
C2/8D97:	C28D    	; Frame 3
C2/8D99:	01      	; Wait: 1
C2/8D9A:	D38D    	; Frame 4
C2/8D9C:	01      	; Wait: 1
C2/8D9D:	D38D    	; Bogus...
C2/8D9F:	FF      	; Loop

; OAM for east airship rotor, frame 1
C2/8DA0:	04      	; Tiles: 4
C2/8DA1:	90008070	; Tile 1
C2/8DA5:	80008270	; Tile 2
C2/8DA9:	9010A070	; Tile 3
C2/8DAD:	8010A270	; Tile 4

; OAM for east airship rotor, frame 2
C2/8DB1:	04      	; Tiles: 4
C2/8DB2:	90008470	; Tile 1
C2/8DB6:	80008670	; Tile 2
C2/8DBA:	9010A470	; Tile 3
C2/8DBE:	8010A670	; Tile 4

; OAM for east airship rotor, frame 3
C2/8DC2:	04      	; Tiles: 4
C2/8DC3:	90008870	; Tile 1
C2/8DC7:	80008A70	; Tile 2
C2/8DCB:	9010A870	; Tile 3
C2/8DCF:	8010AA70	; Tile 4

; OAM for east airship rotor, frame 4
C2/8DD3:	04      	; Tiles: 4
C2/8DD4:	90008C70	; Tile 1
C2/8DD8:	80008E70	; Tile 2
C2/8DDC:	9010AC70	; Tile 3
C2/8DE0:	8010AE70	; Tile 4

; Pointers and positions for "Terra Branford"
C2/8DE4:	3B8E    	; Terra Branford
C2/8DE6:	40      	; X: 64
C2/8DE7:	3E8E    	; Blank
C2/8DE9:	00      	; X: 0

; Pointers and positions for "Locke Cole"
C2/8DEA:	418E    	; Locke Cole
C2/8DEC:	4C      	; X: 76
C2/8DED:	448E    	; Blank
C2/8DEF:	8C      	; X: 140

; Pointers and positions for "Cyan Garamonde"
C2/8DF0:	478E    	; Cyan
C2/8DF2:	38      	; X: 56
C2/8DF3:	4A8E    	; Garamonde
C2/8DF5:	68      	; X: 104

; Pointers and positions for "Shadow"
C2/8DF6:	4D8E    	; Shadow
C2/8DF8:	60      	; X: 96
C2/8DF9:	508E    	; Blank
C2/8DFB:	00      	; X: 0

; Pointers and positions for "Edgar Roni Figaro"
C2/8DFC:	538E    	; Edgar Roni
C2/8DFE:	30      	; X: 48
C2/8DFF:	568E    	; Figaro
C2/8E01:	98      	; X: 152

; Pointers and positions for "Sabin Rene Figaro"
C2/8E02:	598E    	; Sabin Rene
C2/8E04:	2C      	; X: 44
C2/8E05:	5C8E    	; Figaro
C2/8E07:	90      	; X: 144

; Pointers and positions for "Celes Chere"
C2/8E08:	5F8E    	; Celes Chere
C2/8E0A:	48      	; X: 72
C2/8E0B:	628E    	; Blank
C2/8E0D:	00      	; X: 0

; Pointers and positions for "Strago Magus"
C2/8E0E:	658E    	; Strago Magus
C2/8E10:	48      	; X: 72
C2/8E11:	688E    	; Blank
C2/8E13:	00      	; X: 0

; Pointers and positions for "Relm Arrowny"
C2/8E14:	6B8E    	; Relm Arrowny
C2/8E16:	48      	; X: 72
C2/8E17:	6E8E    	; Blank
C2/8E19:	00      	; X: 0

; Pointers and positions for "Setzer Gabbiani"
C2/8E1A:	718E    	; Setzer
C2/8E1C:	38      	; X: 56
C2/8E1D:	748E    	; Gabbiani
C2/8E1F:	78      	; X: 120

; Pointers and positions for "Mog"
C2/8E20:	778E    	; Mog
C2/8E22:	6C      	; X: 108
C2/8E23:	7A8E    	; Blank
C2/8E25:	00      	; X: 0

; Pointers and positions for "Gau"
C2/8E26:	7D8E    	; Gau
C2/8E28:	6C      	; X: 108
C2/8E29:	808E    	; Blank
C2/8E2B:	00      	; X: 0

; Pointers and positions for "Gogo"
C2/8E2C:	838E    	; Gogo
C2/8E2E:	68      	; X: 104
C2/8E2F:	868E    	; Blank
C2/8E31:	00      	; X: 0

; Pointers and positions for "Umaro"
C2/8E32:	898E    	; Umaro
C2/8E34:	64      	; X: 100
C2/8E35:	8C8E    	; Blank
C2/8E37:	00      	; X: 0

; Animation table for "as"
C2/8E38:	8F8E    	; Frame 1
C2/8E3A:	FE      	; Freeze

; Animation tables for "Terra Branford"
C2/8E3B:	988E    	; Terra Branford
C2/8E3D:	FE      	; Freeze
C2/8E3E:	5A8F    	; Blank
C2/8E40:	FE      	; Freeze

; Animation tables for "Locke Cole"
C2/8E41:	098F    	; Locke Cole
C2/8E43:	FE      	; Freeze
C2/8E44:	5A8F    	; Blank
C2/8E46:	FE      	; Freeze

; Animation tables for "Cyan Garamonde"
C2/8E47:	5B8F    	; Cyan
C2/8E49:	FE      	; Freeze
C2/8E4A:	808F    	; Garamonde
C2/8E4C:	FE      	; Freeze

; Animation tables for "Shadow"
C2/8E4D:	CD8F    	; Shadow
C2/8E4F:	FE      	; Freeze
C2/8E50:	5A8F    	; Blank
C2/8E52:	FE      	; Freeze

; Animation tables for "Edgar Roni Figaro"
C2/8E53:	0290    	; Edgar Roni
C2/8E55:	FE      	; Freeze
C2/8E56:	5390    	; Figaro
C2/8E58:	FE      	; Freeze

; Animation tables for "Sabin Rene Figaro"
C2/8E59:	8890    	; Sabin Rene
C2/8E5B:	FE      	; Freeze
C2/8E5C:	5390    	; Figaro
C2/8E5E:	FE      	; Freeze

; Animation tables for "Celes Chere"
C2/8E5F:	D990    	; Celes Chere
C2/8E61:	FE      	; Freeze
C2/8E62:	5A8F    	; Blank
C2/8E64:	FE      	; Freeze

; Animation tables for "Strago Magus"
C2/8E65:	3291    	; Strago Magus
C2/8E67:	FE      	; Freeze
C2/8E68:	5A8F    	; Blank
C2/8E6A:	FE      	; Freeze

; Animation tables for "Relm Arrowny"
C2/8E6B:	9391    	; Relm Arrowny
C2/8E6D:	FE      	; Freeze
C2/8E6E:	5A8F    	; Blank
C2/8E70:	FE      	; Freeze

; Animation tables for "Setzer Gabbiani"
C2/8E71:	F491    	; Setzer
C2/8E73:	FE      	; Freeze
C2/8E74:	2992    	; Gabbiani
C2/8E76:	FE      	; Freeze

; Animation tables for "Mog"
C2/8E77:	6E92    	; Mog
C2/8E79:	FE      	; Freeze
C2/8E7A:	5A8F    	; Blank
C2/8E7C:	FE      	; Freeze

; Animation tables for "Gau"
C2/8E7D:	8B92    	; Gau
C2/8E7F:	FE      	; Freeze
C2/8E80:	5A8F    	; Blank
C2/8E82:	FE      	; Freeze

; Animation tables for "Gogo"
C2/8E83:	A892    	; Gogo
C2/8E85:	FE      	; Freeze
C2/8E86:	5A8F    	; Blank
C2/8E88:	FE      	; Freeze

; Animation tables for "Umaro"
C2/8E89:	CD92    	; Umaro
C2/8E8B:	FE      	; Freeze
C2/8E8C:	5A8F    	; Blank
C2/8E8E:	FE      	; Freeze

; OAM for "as"
C2/8E8F:	02      	; Tiles: 2
C2/8E90:	00002A33	; "a" (X+0, Y+0, tile 298, pal 1, prio 3, 8x8)
C2/8E94:	08002B33	; "s" (X+8, Y+0, tile 299, pal 1, prio 3, 8x8)

; OAM for "Terra Branford"
C2/8E98:	1C      	; Tiles: 28
C2/8E99:	80007631	; "T" part A (X+0,   Y+0,  tile 374, pal 0, prio 3, 16x16)
C2/8E9D:	00102C31	; "T" part B (X+0,   Y+16, tile 300, pal 0, prio 3, 8x8)
C2/8EA1:	08102D31	; "T" part C (X+8,   Y+16, tile 301, pal 0, prio 3, 8x8)
C2/8EA5:	10080431	; "e" part A (X+16,  Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/8EA9:	10101431	; "e" part B (X+16,  Y+16, tile 276, pal 0, prio 3, 8x8)
C2/8EAD:	18082131	; "r" part A (X+24,  Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/8EB1:	18103131	; "r" part B (X+24,  Y+16, tile 305, pal 0, prio 3, 8x8)
C2/8EB5:	20082131	; "r" part A (X+32,  Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/8EB9:	20103131	; "r" part B (X+32,  Y+16, tile 305, pal 0, prio 3, 8x8)
C2/8EBD:	28080031	; "a" part A (X+40,  Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/8EC1:	28101031	; "a" part B (X+40,  Y+16, tile 272, pal 0, prio 3, 8x8)
C2/8EC5:	B8004231	; "B" part A (X+56,  Y+0,  tile 322, pal 0, prio 3, 16x16)
C2/8EC9:	38106231	; "B" part B (X+56,  Y+16, tile 354, pal 0, prio 3, 8x8)
C2/8ECD:	40106331	; "B" part C (X+64,  Y+16, tile 355, pal 0, prio 3, 8x8)
C2/8ED1:	48082131	; "r" part A (X+72,  Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/8ED5:	48103131	; "r" part B (X+72,  Y+16, tile 305, pal 0, prio 3, 8x8)
C2/8ED9:	50080031	; "a" part A (X+80,  Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/8EDD:	50101031	; "a" part B (X+80,  Y+16, tile 272, pal 0, prio 3, 8x8)
C2/8EE1:	58080D31	; "n" part A (X+88,  Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/8EE5:	58101D31	; "n" part B (X+88,  Y+16, tile 285, pal 0, prio 3, 8x8)
C2/8EE9:	60080531	; "f" part A (X+96,  Y+8,  tile 261, pal 0, prio 3, 8x8)
C2/8EED:	60101531	; "f" part B (X+96,  Y+16, tile 277, pal 0, prio 3, 8x8)
C2/8EF1:	68080E31	; "o" part A (X+104, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/8EF5:	68101E31	; "o" part B (X+104, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/8EF9:	70082131	; "r" part A (X+112, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/8EFD:	70103131	; "r" part B (X+112, Y+16, tile 305, pal 0, prio 3, 8x8)
C2/8F01:	78080331	; "d" part A (X+120, Y+8,  tile 259, pal 0, prio 3, 8x8)
C2/8F05:	78101331	; "d" part B (X+120, Y+16, tile 275, pal 0, prio 3, 8x8)

; OAM for "Locke Cole"
C2/8F09:	14      	; Tiles: 20
C2/8F0A:	80004E31	; "L" part A (X+0,  Y+0,  tile 334, pal 0, prio 3, 16x16)
C2/8F0E:	00106E31	; "L" part B (X+0,  Y+16, tile 366, pal 0, prio 3, 8x8)
C2/8F12:	08106F31	; "L" part C (X+8,  Y+16, tile 367, pal 0, prio 3, 8x8)
C2/8F16:	10080E31	; "o" part A (X+16, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/8F1A:	10101E31	; "o" part B (X+16, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/8F1E:	18080231	; "c" part A (X+24, Y+8,  tile 258, pal 0, prio 3, 8x8)
C2/8F22:	18101231	; "c" part B (X+24, Y+16, tile 274, pal 0, prio 3, 8x8)
C2/8F26:	20080A31	; "k" part A (X+32, Y+8,  tile 266, pal 0, prio 3, 8x8)
C2/8F2A:	20101A31	; "k" part B (X+32, Y+16, tile 282, pal 0, prio 3, 8x8)
C2/8F2E:	28080431	; "e" part A (X+40, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/8F32:	28101431	; "e" part B (X+40, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/8F36:	B8004431	; "C" part A (X+56, Y+0,  tile 324, pal 0, prio 3, 16x16)
C2/8F3A:	38106431	; "C" part B (X+56, Y+16, tile 356, pal 0, prio 3, 8x8)
C2/8F3E:	40106531	; "C" part C (X+64, Y+16, tile 357, pal 0, prio 3, 8x8)
C2/8F42:	48080E31	; "o" part A (X+72, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/8F46:	48101E31	; "o" part B (X+72, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/8F4A:	50080B31	; "l" part A (X+80, Y+8,  tile 267, pal 0, prio 3, 8x8)
C2/8F4E:	50101B31	; "l" part B (X+80, Y+16, tile 283, pal 0, prio 3, 8x8)
C2/8F52:	58080431	; "e" part A (X+88, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/8F56:	58101431	; "e" part B (X+88, Y+16, tile 276, pal 0, prio 3, 8x8)

; Blank sprite B
C2/8F5A:	00      	; Tiles: 0

; OAM for "Cyan"
C2/8F5B:	09      	; Tiles: 9
C2/8F5C:	80004431	; "C" part A (X+0,  Y+0,  tile 324, pal 0, prio 3, 16x16)
C2/8F60:	00106431	; "C" part B (X+0,  Y+16, tile 356, pal 0, prio 3, 8x8)
C2/8F64:	08106531	; "C" part C (X+8,  Y+16, tile 357, pal 0, prio 3, 8x8)
C2/8F68:	10082831	; "y" part A (X+16, Y+8,  tile 296, pal 0, prio 3, 8x8)
C2/8F6C:	10103831	; "y" part B (X+16, Y+16, tile 312, pal 0, prio 3, 8x8)
C2/8F70:	18080031	; "a" part A (X+24, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/8F74:	18101031	; "a" part B (X+24, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/8F78:	20080D31	; "n" part A (X+32, Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/8F7C:	20101D31	; "n" part B (X+32, Y+16, tile 285, pal 0, prio 3, 8x8)

; OAM for "Garamonde"
C2/8F80:	13      	; Tiles: 19
C2/8F81:	80004C31	; "G" part A (X+0,  Y+0,  tile 332, pal 0, prio 3, 16x16)
C2/8F85:	00106C31	; "G" part B (X+0,  Y+16, tile 364, pal 0, prio 3, 8x8)
C2/8F89:	08106D31	; "G" part C (X+8,  Y+16, tile 365, pal 0, prio 3, 8x8)
C2/8F8D:	10080031	; "a" part A (X+16, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/8F91:	10101031	; "a" part B (X+16, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/8F95:	18082131	; "r" part A (X+24, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/8F99:	18103131	; "r" part B (X+24, Y+16, tile 305, pal 0, prio 3, 8x8)
C2/8F9D:	20080031	; "a" part A (X+32, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/8FA1:	20101031	; "a" part B (X+32, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/8FA5:	28080C31	; "m" part A (X+40, Y+8,  tile 268, pal 0, prio 3, 8x8)
C2/8FA9:	28101C31	; "m" part B (X+40, Y+16, tile 284, pal 0, prio 3, 8x8)
C2/8FAD:	30080E31	; "o" part A (X+48, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/8FB1:	30101E31	; "o" part B (X+48, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/8FB5:	38080D31	; "n" part A (X+56, Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/8FB9:	38101D31	; "n" part B (X+56, Y+16, tile 285, pal 0, prio 3, 8x8)
C2/8FBD:	40080331	; "d" part A (X+64, Y+8,  tile 259, pal 0, prio 3, 8x8)
C2/8FC1:	40101331	; "d" part B (X+64, Y+16, tile 275, pal 0, prio 3, 8x8)
C2/8FC5:	48080431	; "e" part A (X+72, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/8FC9:	48101431	; "e" part B (X+72, Y+16, tile 276, pal 0, prio 3, 8x8)

; OAM for "Shadow"
C2/8FCD:	0D      	; Tiles: 13
C2/8FCE:	80007431	; "S" part A (X+0,  Y+0,  tile 372, pal 0, prio 3, 16x16)
C2/8FD2:	00103E31	; "S" part B (X+0,  Y+16, tile 318, pal 0, prio 3, 8x8)
C2/8FD6:	08103F31	; "S" part C (X+8,  Y+16, tile 319, pal 0, prio 3, 8x8)
C2/8FDA:	10080731	; "h" part A (X+16, Y+8,  tile 263, pal 0, prio 3, 8x8)
C2/8FDE:	10101731	; "h" part B (X+16, Y+16, tile 279, pal 0, prio 3, 8x8)
C2/8FE2:	18080031	; "a" part A (X+24, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/8FE6:	18101031	; "a" part B (X+24, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/8FEA:	20080331	; "d" part A (X+32, Y+8,  tile 259, pal 0, prio 3, 8x8)
C2/8FEE:	20101331	; "d" part B (X+32, Y+16, tile 275, pal 0, prio 3, 8x8)
C2/8FF2:	28080E31	; "o" part A (X+40, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/8FF6:	28101E31	; "o" part B (X+40, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/8FFA:	30082631	; "w" part A (X+48, Y+8,  tile 294, pal 0, prio 3, 8x8)
C2/8FFE:	30103631	; "w" part B (X+48, Y+16, tile 310, pal 0, prio 3, 8x8)

; OAM for "Edgar Roni"
C2/9002:	14      	; Tiles: 20
C2/9003:	80004831	; "E" part A (X+0,  Y+0,  tile 328, pal 0, prio 3, 16x16)
C2/9007:	00106831	; "E" part B (X+0,  Y+16, tile 360, pal 0, prio 3, 8x8)
C2/900B:	08106931	; "E" part C (X+8,  Y+16, tile 361, pal 0, prio 3, 8x8)
C2/900F:	10080331	; "d" part A (X+16, Y+8,  tile 259, pal 0, prio 3, 8x8)
C2/9013:	10101331	; "d" part B (X+16, Y+16, tile 275, pal 0, prio 3, 8x8)
C2/9017:	18080631	; "g" part A (X+24, Y+8,  tile 262, pal 0, prio 3, 8x8)
C2/901B:	18101631	; "g" part B (X+24, Y+16, tile 278, pal 0, prio 3, 8x8)
C2/901F:	20080031	; "a" part A (X+32, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/9023:	20101031	; "a" part B (X+32, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/9027:	28082131	; "r" part A (X+40, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/902B:	28103131	; "r" part B (X+40, Y+16, tile 305, pal 0, prio 3, 8x8)
C2/902F:	B8007231	; "R" part A (X+56, Y+0,  tile 370, pal 0, prio 3, 16x16)
C2/9033:	38103C31	; "R" part B (X+56, Y+16, tile 316, pal 0, prio 3, 8x8)
C2/9037:	40103D31	; "R" part C (X+64, Y+16, tile 317, pal 0, prio 3, 8x8)
C2/903B:	48080E31	; "o" part A (X+72, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/903F:	48101E31	; "o" part B (X+72, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/9043:	50080D31	; "n" part A (X+80, Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/9047:	50101D31	; "n" part B (X+80, Y+16, tile 285, pal 0, prio 3, 8x8)
C2/904B:	58080831	; "i" part A (X+88, Y+8,  tile 264, pal 0, prio 3, 8x8)
C2/904F:	58101831	; "i" part B (X+88, Y+16, tile 280, pal 0, prio 3, 8x8)

; OAM for "Figaro"
C2/9053:	0D      	; Tiles: 13
C2/9054:	80004A31	; "F" part A (X+0,  Y+0,  tile 330, pal 0, prio 3, 16x16)
C2/9058:	00106A31	; "F" part B (X+0,  Y+16, tile 362, pal 0, prio 3, 8x8)
C2/905C:	08106B31	; "F" part C (X+8,  Y+16, tile 363, pal 0, prio 3, 8x8)
C2/9060:	10080831	; "i" part A (X+16, Y+8,  tile 264, pal 0, prio 3, 8x8)
C2/9064:	10101831	; "i" part B (X+16, Y+16, tile 280, pal 0, prio 3, 8x8)
C2/9068:	18080631	; "g" part A (X+24, Y+8,  tile 262, pal 0, prio 3, 8x8)
C2/906C:	18101631	; "g" part B (X+24, Y+16, tile 278, pal 0, prio 3, 8x8)
C2/9070:	20080031	; "a" part A (X+32, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/9074:	20101031	; "a" part B (X+32, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/9078:	28082131	; "r" part A (X+40, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/907C:	28103131	; "r" part B (X+40, Y+16, tile 305, pal 0, prio 3, 8x8)
C2/9080:	30080E31	; "o" part A (X+48, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/9084:	30101E31	; "o" part B (X+48, Y+16, tile 286, pal 0, prio 3, 8x8)

; OAM for "Sabin Rene"
C2/9088:	14      	; Tiles: 20
C2/9089:	80007431	; "S" part A (X+0,  Y+0,  tile 372, pal 0, prio 3, 16x16)
C2/908D:	00103E31	; "S" part B (X+0,  Y+16, tile 318, pal 0, prio 3, 8x8)
C2/9091:	08103F31	; "S" part C (X+8,  Y+16, tile 319, pal 0, prio 3, 8x8)
C2/9095:	10080031	; "a" part A (X+16, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/9099:	10101031	; "a" part B (X+16, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/909D:	18080131	; "b" part A (X+24, Y+8,  tile 257, pal 0, prio 3, 8x8)
C2/90A1:	18101131	; "b" part B (X+24, Y+16, tile 273, pal 0, prio 3, 8x8)
C2/90A5:	20080831	; "i" part A (X+32, Y+8,  tile 264, pal 0, prio 3, 8x8)
C2/90A9:	20101831	; "i" part B (X+32, Y+16, tile 280, pal 0, prio 3, 8x8)
C2/90AD:	28080D31	; "n" part A (X+40, Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/90B1:	28101D31	; "n" part B (X+40, Y+16, tile 285, pal 0, prio 3, 8x8)
C2/90B5:	B8007231	; "R" part A (X+56, Y+0,  tile 370, pal 0, prio 3, 16x16)
C2/90B9:	38103C31	; "R" part B (X+56, Y+16, tile 316, pal 0, prio 3, 8x8)
C2/90BD:	40103D31	; "R" part C (X+64, Y+16, tile 317, pal 0, prio 3, 8x8)
C2/90C1:	48080431	; "e" part A (X+72, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/90C5:	48101431	; "e" part B (X+72, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/90C9:	50080D31	; "n" part A (X+80, Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/90CD:	50101D31	; "n" part B (X+80, Y+16, tile 285, pal 0, prio 3, 8x8)
C2/90D1:	58080431	; "e" part A (X+88, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/90D5:	58101431	; "e" part B (X+88, Y+16, tile 276, pal 0, prio 3, 8x8)

; OAM for "Celes Chere"
C2/90D9:	16      	; Tiles: 22
C2/90DA:	80004431	; "C" part A (X+0,  Y+0,  tile 324, pal 0, prio 3, 16x16)
C2/90DE:	00106431	; "C" part B (X+0,  Y+16, tile 356, pal 0, prio 3, 8x8)
C2/90E2:	08106531	; "C" part C (X+8,  Y+16, tile 357, pal 0, prio 3, 8x8)
C2/90E6:	10080431	; "e" part A (X+16, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/90EA:	10101431	; "e" part B (X+16, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/90EE:	18080B31	; "l" part A (X+24, Y+8,  tile 267, pal 0, prio 3, 8x8)
C2/90F2:	18101B31	; "l" part B (X+24, Y+16, tile 283, pal 0, prio 3, 8x8)
C2/90F6:	20080431	; "e" part A (X+32, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/90FA:	20101431	; "e" part B (X+32, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/90FE:	28082231	; "s" part A (X+40, Y+8,  tile 290, pal 0, prio 3, 8x8)
C2/9102:	28103231	; "s" part B (X+40, Y+16, tile 306, pal 0, prio 3, 8x8)
C2/9106:	B8004431	; "C" part A (X+56, Y+0,  tile 324, pal 0, prio 3, 16x16)
C2/910A:	38106431	; "C" part B (X+56, Y+16, tile 356, pal 0, prio 3, 8x8)
C2/910E:	40106531	; "C" part C (X+64, Y+16, tile 357, pal 0, prio 3, 8x8)
C2/9112:	48080731	; "h" part A (X+72, Y+8,  tile 263, pal 0, prio 3, 8x8)
C2/9116:	48101731	; "h" part B (X+72, Y+16, tile 279, pal 0, prio 3, 8x8)
C2/911A:	50080431	; "e" part A (X+80, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/911E:	50101431	; "e" part B (X+80, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/9122:	58082131	; "r" part A (X+88, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/9126:	58103131	; "r" part B (X+88, Y+16, tile 305, pal 0, prio 3, 8x8)
C2/912A:	60080431	; "e" part A (X+96, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/912E:	60101431	; "e" part B (X+96, Y+16, tile 276, pal 0, prio 3, 8x8)

; OAM for "Strago Magus"
C2/9132:	18      	; Tiles: 24
C2/9133:	80007431	; "S" part A (X+0,   Y+0,  tile 372, pal 0, prio 3, 16x16)
C2/9137:	00103E31	; "S" part B (X+0,   Y+16, tile 318, pal 0, prio 3, 8x8)
C2/913B:	08103F31	; "S" part C (X+8,   Y+16, tile 319, pal 0, prio 3, 8x8)
C2/913F:	10082331	; "t" part A (X+16,  Y+8,  tile 291, pal 0, prio 3, 8x8)
C2/9143:	10103331	; "t" part B (X+16,  Y+16, tile 307, pal 0, prio 3, 8x8)
C2/9147:	18082131	; "r" part A (X+24,  Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/914B:	18103131	; "r" part B (X+24,  Y+16, tile 305, pal 0, prio 3, 8x8)
C2/914F:	20080031	; "a" part A (X+32,  Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/9153:	20101031	; "a" part B (X+32,  Y+16, tile 272, pal 0, prio 3, 8x8)
C2/9157:	28080631	; "g" part A (X+40,  Y+8,  tile 262, pal 0, prio 3, 8x8)
C2/915B:	28101631	; "g" part B (X+40,  Y+16, tile 278, pal 0, prio 3, 8x8)
C2/915F:	30080E31	; "o" part A (X+48,  Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/9163:	30101E31	; "o" part B (X+48,  Y+16, tile 286, pal 0, prio 3, 8x8)
C2/9167:	C0007031	; "M" part A (X+64,  Y+0,  tile 368, pal 0, prio 3, 16x16)
C2/916B:	40103A31	; "M" part B (X+64,  Y+16, tile 314, pal 0, prio 3, 8x8)
C2/916F:	48103B31	; "M" part C (X+72,  Y+16, tile 315, pal 0, prio 3, 8x8)
C2/9173:	50080031	; "a" part A (X+80,  Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/9177:	50101031	; "a" part B (X+80,  Y+16, tile 272, pal 0, prio 3, 8x8)
C2/917B:	58080631	; "g" part A (X+88,  Y+8,  tile 262, pal 0, prio 3, 8x8)
C2/917F:	58101631	; "g" part B (X+88,  Y+16, tile 278, pal 0, prio 3, 8x8)
C2/9183:	60082431	; "u" part A (X+96,  Y+8,  tile 292, pal 0, prio 3, 8x8)
C2/9187:	60103431	; "u" part B (X+96,  Y+16, tile 308, pal 0, prio 3, 8x8)
C2/918B:	68082231	; "s" part A (X+104, Y+8,  tile 290, pal 0, prio 3, 8x8)
C2/918F:	68103231	; "s" part B (X+104, Y+16, tile 306, pal 0, prio 3, 8x8)

; OAM for "Relm Arrowny"
C2/9193:	18      	; Tiles: 24
C2/9194:	80007231	; "R" part A (X+0,   Y+0,  tile 370, pal 0, prio 3, 16x16)
C2/9198:	00103C31	; "R" part B (X+0,   Y+16, tile 316, pal 0, prio 3, 8x8)
C2/919C:	08103D31	; "R" part C (X+8,   Y+16, tile 317, pal 0, prio 3, 8x8)
C2/91A0:	10080431	; "e" part A (X+16,  Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/91A4:	10101431	; "e" part B (X+16,  Y+16, tile 276, pal 0, prio 3, 8x8)
C2/91A8:	18080B31	; "l" part A (X+24,  Y+8,  tile 267, pal 0, prio 3, 8x8)
C2/91AC:	18101B31	; "l" part B (X+24,  Y+16, tile 283, pal 0, prio 3, 8x8)
C2/91B0:	20080C31	; "m" part A (X+32,  Y+8,  tile 268, pal 0, prio 3, 8x8)
C2/91B4:	20101C31	; "m" part B (X+32,  Y+16, tile 284, pal 0, prio 3, 8x8)
C2/91B8:	B0004031	; "A" part A (X+48,  Y+0,  tile 260, pal 0, prio 3, 16x16)
C2/91BC:	30106031	; "A" part B (X+48,  Y+16, tile 262, pal 0, prio 3, 8x8)
C2/91C0:	38106131	; "A" part C (X+56,  Y+16, tile 263, pal 0, prio 3, 8x8)
C2/91C4:	40082131	; "r" part A (X+64,  Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/91C8:	40103131	; "r" part B (X+64,  Y+16, tile 305, pal 0, prio 3, 8x8)
C2/91CC:	48082131	; "r" part A (X+72,  Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/91D0:	48103131	; "r" part B (X+72,  Y+16, tile 305, pal 0, prio 3, 8x8)
C2/91D4:	50080E31	; "o" part A (X+80,  Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/91D8:	50101E31	; "o" part B (X+80,  Y+16, tile 286, pal 0, prio 3, 8x8)
C2/91DC:	58082631	; "w" part A (X+88,  Y+8,  tile 294, pal 0, prio 3, 8x8)
C2/91E0:	58103631	; "w" part B (X+88,  Y+16, tile 310, pal 0, prio 3, 8x8)
C2/91E4:	60080D31	; "n" part A (X+96,  Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/91E8:	60101D31	; "n" part B (X+96,  Y+16, tile 285, pal 0, prio 3, 8x8)
C2/91EC:	68082831	; "y" part A (X+104, Y+8,  tile 296, pal 0, prio 3, 8x8)
C2/91F0:	68103831	; "y" part B (X+104, Y+16, tile 312, pal 0, prio 3, 8x8)

; OAM for "Setzer"
C2/91F4:	0D      	; Tiles: 13
C2/91F5:	80007431	; "S" part A (X+0,  Y+0,  tile 372, pal 0, prio 3, 16x16)
C2/91F9:	00103E31	; "S" part B (X+0,  Y+16, tile 318, pal 0, prio 3, 8x8)
C2/91FD:	08103F31	; "S" part C (X+8,  Y+16, tile 319, pal 0, prio 3, 8x8)
C2/9201:	10080431	; "e" part A (X+16, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/9205:	10101431	; "e" part B (X+16, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/9209:	18082331	; "t" part A (X+24, Y+8,  tile 291, pal 0, prio 3, 8x8)
C2/920D:	18103331	; "t" part B (X+24, Y+16, tile 307, pal 0, prio 3, 8x8)
C2/9211:	20082931	; "z" part A (X+32, Y+8,  tile 297, pal 0, prio 3, 8x8)
C2/9215:	20103931	; "z" part B (X+32, Y+16, tile 313, pal 0, prio 3, 8x8)
C2/9219:	28080431	; "e" part A (X+40, Y+8,  tile 260, pal 0, prio 3, 8x8)
C2/921D:	28101431	; "e" part B (X+40, Y+16, tile 276, pal 0, prio 3, 8x8)
C2/9221:	30082131	; "r" part A (X+48, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/9225:	30103131	; "r" part B (X+48, Y+16, tile 305, pal 0, prio 3, 8x8)

; OAM for "Gabbiani"
C2/9229:	11      	; Tiles: 17
C2/922A:	80004C31	; "G" part A (X+0,  Y+0,  tile 332, pal 0, prio 3, 16x16)
C2/922E:	00106C31	; "G" part B (X+0,  Y+16, tile 364, pal 0, prio 3, 8x8)
C2/9232:	08106D31	; "G" part C (X+8,  Y+16, tile 365, pal 0, prio 3, 8x8)
C2/9236:	10080031	; "a" part A (X+16, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/923A:	10101031	; "a" part B (X+16, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/923E:	18080131	; "b" part A (X+24, Y+8,  tile 257, pal 0, prio 3, 8x8)
C2/9242:	18101131	; "b" part B (X+24, Y+16, tile 273, pal 0, prio 3, 8x8)
C2/9246:	20080131	; "b" part A (X+32, Y+8,  tile 257, pal 0, prio 3, 8x8)
C2/924A:	20101131	; "b" part B (X+32, Y+16, tile 273, pal 0, prio 3, 8x8)
C2/924E:	28080831	; "i" part A (X+40, Y+8,  tile 264, pal 0, prio 3, 8x8)
C2/9252:	28101831	; "i" part B (X+40, Y+16, tile 280, pal 0, prio 3, 8x8)
C2/9256:	30080031	; "a" part A (X+48, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/925A:	30101031	; "a" part B (X+48, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/925E:	38080D31	; "n" part A (X+56, Y+8,  tile 269, pal 0, prio 3, 8x8)
C2/9262:	38101D31	; "n" part B (X+56, Y+16, tile 285, pal 0, prio 3, 8x8)
C2/9266:	40080831	; "i" part A (X+64, Y+8,  tile 264, pal 0, prio 3, 8x8)
C2/926A:	40101831	; "i" part B (X+64, Y+16, tile 280, pal 0, prio 3, 8x8)

; OAM for "Mog"
C2/926E:	07      	; Tiles: 7
C2/926F:	80007031	; "M" part A (X+0,  Y+0,  tile 368, pal 0, prio 3, 16x16)
C2/9273:	00103A31	; "M" part B (X+0,  Y+16, tile 314, pal 0, prio 3, 8x8)
C2/9277:	08103B31	; "M" part C (X+8,  Y+16, tile 315, pal 0, prio 3, 8x8)
C2/927B:	10080E31	; "o" part A (X+16, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/927F:	10101E31	; "o" part B (X+16, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/9283:	18080631	; "g" part A (X+24, Y+8,  tile 262, pal 0, prio 3, 8x8)
C2/9287:	18101631	; "g" part B (X+24, Y16+, tile 278, pal 0, prio 3, 8x8)

; OAM for "Gau"
C2/928B:	07      	; Tiles: 7
C2/928C:	80004C31	; "G" part A (X+0,  Y+0,  tile 332, pal 0, prio 3, 16x16)
C2/9290:	00106C31	; "G" part B (X+0,  Y+16, tile 364, pal 0, prio 3, 8x8)
C2/9294:	08106D31	; "G" part C (X+8,  Y+16, tile 365, pal 0, prio 3, 8x8)
C2/9298:	10080031	; "a" part A (X+16, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/929C:	10101031	; "a" part B (X+16, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/92A0:	18082431	; "u" part A (X+24, Y+8,  tile 292, pal 0, prio 3, 8x8)
C2/92A4:	18103431	; "u" part B (X+24, Y+16, tile 308, pal 0, prio 3, 8x8)

; OAM for "Gogo"
C2/92A8:	09      	; Tiles: 9
C2/92A9:	80004C31	; "G" part A (X+0,  Y+0,  tile 332, pal 0, prio 3, 16x16)
C2/92AD:	00106C31	; "G" part B (X+0,  Y+16, tile 364, pal 0, prio 3, 8x8)
C2/92B1:	08106D31	; "G" part C (X+8,  Y+16, tile 365, pal 0, prio 3, 8x8)
C2/92B5:	10080E31	; "o" part A (X+16, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/92B9:	10101E31	; "o" part B (X+16, Y+16, tile 286, pal 0, prio 3, 8x8)
C2/92BD:	18080631	; "g" part A (X+24, Y+8,  tile 262, pal 0, prio 3, 8x8)
C2/92C1:	18101631	; "g" part B (X+24, Y+16, tile 278, pal 0, prio 3, 8x8)
C2/92C5:	20080E31	; "o" part A (X+32, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/92C9:	20101E31	; "o" part B (X+32, Y+16, tile 286, pal 0, prio 3, 8x8)

; OAM for "Umaro"
C2/92CD:	0B      	; Tiles: 11
C2/92CE:	80007831	; "U" part A (X+0,  Y+0,  tile 376, pal 0, prio 3, 16x16)
C2/92D2:	00102E31	; "U" part B (X+0,  Y+16, tile 302, pal 0, prio 3, 8x8)
C2/92D6:	08102F31	; "U" part C (X+8,  Y+16, tile 303, pal 0, prio 3, 8x8)
C2/92DA:	10080C31	; "m" part A (X+16, Y+8,  tile 268, pal 0, prio 3, 8x8)
C2/92DE:	10101C31	; "m" part B (X+16, Y+16, tile 284, pal 0, prio 3, 8x8)
C2/92E2:	18080031	; "a" part A (X+24, Y+8,  tile 256, pal 0, prio 3, 8x8)
C2/92E6:	18101031	; "a" part B (X+24, Y+16, tile 272, pal 0, prio 3, 8x8)
C2/92EA:	20082131	; "r" part A (X+32, Y+8,  tile 289, pal 0, prio 3, 8x8)
C2/92EE:	20103131	; "r" part B (X+32, Y+16, tile 305, pal 0, prio 3, 8x8)
C2/92F2:	28080E31	; "o" part A (X+40, Y+8,  tile 270, pal 0, prio 3, 8x8)
C2/92F6:	28101E31	; "o" part B (X+40, Y+16, tile 286, pal 0, prio 3, 8x8)

; Animation script for playing card
C2/92FA:	F793    	; Frame 5
C2/92FC:	06      	; Wait: 6
C2/92FD:	8294    	; Frame 8
C2/92FF:	06      	; Wait: 6
C2/9300:	C693    	; Frame 4
C2/9302:	06      	; Wait: 6
C2/9303:	8D93    	; Frame 3
C2/9305:	06      	; Wait: 6
C2/9306:	5493    	; Frame 2
C2/9308:	06      	; Wait: 6
C2/9309:	2793    	; Frame 1
C2/930B:	06      	; Wait: 6
C2/930C:	5493    	; Frame 2
C2/930E:	06      	; Wait: 6
C2/930F:	8D93    	; Frame 3
C2/9311:	06      	; Wait: 6
C2/9312:	C693    	; Frame 4
C2/9314:	06      	; Wait: 6
C2/9315:	8294    	; Frame 8
C2/9317:	06      	; Wait: 6
C2/9318:	F793    	; Frame 5
C2/931A:	06      	; Wait: 6
C2/931B:	2094    	; Frame 6
C2/931D:	06      	; Wait: 6
C2/931E:	6194    	; Frame 7
C2/9320:	0C      	; Wait: 12
C2/9321:	2094    	; Frame 6
C2/9323:	06      	; Wait: 6
C2/9324:	2094    	; Bogus...
C2/9326:	FF      	; Loop

; OAM for playing card, frame 1
C2/9327:	0B      	; Tiles: 11
C2/9328:	10000234	; Tile 1
C2/932C:	98000334	; Tile 2
C2/9330:	88081134	; Tile 3
C2/9334:	98102334	; Tile 4
C2/9338:	28081534	; Tile 5
C2/933C:	00183034	; Tile 6
C2/9340:	08183134	; Tile 7
C2/9344:	10183234	; Tile 8
C2/9348:	08200134	; Tile 9
C2/934C:	10200534	; Tile 10
C2/9350:	18200634	; Tile 11

; OAM for playing card, frame 2
C2/9354:	0E      	; Tiles: 14
C2/9355:	10000734	; Tile 1
C2/9359:	08081634	; Tile 2
C2/935D:	10081734	; Tile 3
C2/9361:	88102634	; Tile 4
C2/9365:	00183534	; Tile 5
C2/9369:	08200934	; Tile 6
C2/936D:	10200C34	; Tile 7
C2/9371:	182007F4	; Tile 8
C2/9375:	201816F4	; Tile 9
C2/9379:	181817F4	; Tile 10
C2/937D:	980826F4	; Tile 11
C2/9381:	280835F4	; Tile 12
C2/9385:	200009F4	; Tile 13
C2/9389:	18000CF4	; Tile 14

; OAM for playing card, frame 3
C2/938D:	0E      	; Tiles: 14
C2/938E:	18000834	; Tile 1
C2/9392:	18081834	; Tile 2
C2/9396:	20081934	; Tile 3
C2/939A:	18102834	; Tile 4
C2/939E:	20102934	; Tile 5
C2/93A2:	18183834	; Tile 6
C2/93A6:	18202034	; Tile 7
C2/93AA:	102008F4	; Tile 8
C2/93AE:	101818F4	; Tile 9
C2/93B2:	081819F4	; Tile 10
C2/93B6:	101028F4	; Tile 11
C2/93BA:	081029F4	; Tile 12
C2/93BE:	100838F4	; Tile 13
C2/93C2:	100020F4	; Tile 14

; OAM for playing card, frame 4
C2/93C6:	0C      	; Tiles: 12
C2/93C7:	10000A34	; Tile 1
C2/93CB:	10081A34	; Tile 2
C2/93CF:	10102A34	; Tile 3
C2/93D3:	08183934	; Tile 4
C2/93D7:	10183A34	; Tile 5
C2/93DB:	10202534	; Tile 6
C2/93DF:	18200AF4	; Tile 7
C2/93E3:	18181AF4	; Tile 8
C2/93E7:	18102AF4	; Tile 9
C2/93EB:	200839F4	; Tile 10
C2/93EF:	18083AF4	; Tile 11
C2/93F3:	180025F4	; Tile 12

; OAM for playing card, frame 5
C2/93F7:	0A      	; Tiles: 10
C2/93F8:	18000B34	; Tile 1
C2/93FC:	18081B34	; Tile 2
C2/9400:	18102B34	; Tile 3
C2/9404:	18183B34	; Tile 4
C2/9408:	18201C34	; Tile 5
C2/940C:	10200BF4	; Tile 6
C2/9410:	10181BF4	; Tile 7
C2/9414:	10102BF4	; Tile 8
C2/9418:	10083BF4	; Tile 9
C2/941C:	10001CF4	; Tile 10

; OAM for playing card, frame 6
C2/9420:	10      	; Tiles: 16
C2/9421:	10000D34	; Tile 1
C2/9425:	10081D34	; Tile 2
C2/9429:	08102C34	; Tile 3
C2/942D:	10102D34	; Tile 4
C2/9431:	08183C34	; Tile 5
C2/9435:	10183D34	; Tile 6
C2/9439:	08204034	; Tile 7
C2/943D:	10204134	; Tile 8
C2/9441:	18200DF4	; Tile 9
C2/9445:	18181DF4	; Tile 10
C2/9449:	20102CF4	; Tile 11
C2/944D:	18102DF4	; Tile 12
C2/9451:	20083CF4	; Tile 13
C2/9455:	18083DF4	; Tile 14
C2/9459:	200040F4	; Tile 15
C2/945D:	180041F4	; Tile 16

; OAM for playing card, frame 7
C2/9461:	08      	; Tiles: 8
C2/9462:	98000E34	; Tile 1
C2/9466:	98102E34	; Tile 2
C2/946A:	28084334	; Tile 3
C2/946E:	18204234	; Tile 4
C2/9472:	88180EF4	; Tile 5
C2/9476:	88082EF4	; Tile 6
C2/947A:	001843F4	; Tile 7
C2/947E:	100042F4	; Tile 8

; OAM for playing card, frame 8
C2/9482:	05      	; Tiles: 5
C2/9483:	12000034	; Tile 1
C2/9487:	12081034	; Tile 2
C2/948B:	12101034	; Tile 3
C2/948F:	12181034	; Tile 4
C2/9493:	12201034	; Tile 5

; Animation script for apple
C2/9497:	A994    	; Frame 1
C2/9499:	B4      	; Wait: 180
C2/949A:	A994    	; Frame 1
C2/949C:	B4      	; Wait: 180
C2/949D:	A994    	; Frame 1
C2/949F:	B4      	; Wait: 180
C2/94A0:	CA94    	; Frame 2
C2/94A2:	10      	; Wait: 16
C2/94A3:	F794    	; ...
C2/94A5:	40      	; ...
C2/94A6:	F794    	; Frame 3
C2/94A8:	FE      	; Freeze

; OAM for apple, frame 1
C2/94A9:	08      	; Tiles: 8
C2/94AA:	80080038	; Tile 1
C2/94AE:	10080238	; Tile 2
C2/94B2:	10101238	; Tile 3
C2/94B6:	18101338	; Tile 4
C2/94BA:	80180438	; Tile 5
C2/94BE:	10180638	; Tile 6
C2/94C2:	10201638	; Tile 7
C2/94C6:	18180338	; Tile 8

; OAM for apple, frame 2
C2/94CA:	0B      	; Tiles: 11
C2/94CB:	80080038	; Tile 1
C2/94CF:	90000738	; Tile 2
C2/94D3:	10101238	; Tile 3
C2/94D7:	80180438	; Tile 4
C2/94DB:	10180638	; Tile 5
C2/94DF:	10201638	; Tile 6
C2/94E3:	18180338	; Tile 7
C2/94E7:	20000938	; Tile 8
C2/94EB:	20081938	; Tile 9
C2/94EF:	18100A38	; Tile 10
C2/94F3:	20100B38	; Tile 11

; OAM for apple, frame 3
C2/94F7:	11      	; Tiles: 17
C2/94F8:	00080038	; Tile 1
C2/94FC:	08080138	; Tile 2
C2/9500:	00101038	; Tile 3
C2/9504:	80180438	; Tile 4
C2/9508:	10180638	; Tile 5
C2/950C:	10201638	; Tile 6
C2/9510:	18180338	; Tile 7
C2/9514:	08101A38	; Tile 8
C2/9518:	10101B38	; Tile 9
C2/951C:	10000C38	; Tile 10
C2/9520:	18000D38	; Tile 11
C2/9524:	10080E38	; Tile 12
C2/9528:	18080F38	; Tile 13
C2/952C:	20000938	; Tile 14
C2/9530:	20081938	; Tile 15
C2/9534:	18100A38	; Tile 16
C2/9538:	20100B38	; Tile 17


; ***************************************************
; Ending Cinematic Color Palettes (C2/953C - C2/9853)
; ***************************************************

; Palette for cloudy sky
C2/953C:	C618 4D66 6E6A 906A B16A D26E F36E 1573
C2/954C:	3673 3773 5877 7A77 9B77 BC7B DD7B FF7F

; Palette for glints on table objects
C2/955C:	0000 5F5F 384D 9224 8E18 680C 450C 0000
C2/956C:	0000 2304 2304 2304 2304 2304 2304 2304

; Palette for Gogo's eye
C2/957C:	0000 450C 680C 8E18 9224 384D 5F5F 0000
C2/958C:	0000 0000 0000 0000 0000 0000 0000 0000

; Palette for clear sky and non-sprite airships
C2/959C:	EA59 FF7F 7B5F B646 1132 8D25 2921 E61C
C2/95AC:	A218 5B37 340E 6D01 BD77 F766 725E EA59

; Palette (same as but overwritten by above)
C2/95BC:	0000 FF7F 7B5F B646 1132 8D25 2921 E61C
C2/95CC:	A218 5B37 340E 6D01 BD77 F766 725E EA59

; Palette for ocean and non-sprite boat
C2/95DC:	0000 6408 9119 EB10 870C 5336 8E29 FF67
C2/95EC:	9C16 1367 4C66 4149 C130 8224 611C 6118

; Palette for dense clouds
C2/95FC:	0000 DE7B BE77 BD77 9C73 7C73 5A6F 396B
C2/960C:	F766 935E AA5D 465D 0000 0000 0000 FF7F

; Palette for forests
C2/961C:	0000 0F2E CC25 CB25 AA21 8921 4819 4719
C2/962C:	E510 0C11 903A 6F3A 4F36 4E32 2D32 0F2E

; Palette for lakes
C2/963C:	0000 8F5E 4149 C130 8224 611C D231 6F29
C2/964C:	EA18 CC25 AA21 6F3A 4F36 4E32 2D32 0F2E

; Palette for grasslands
C2/965C:	0000 9946 5742 363E 153A F435 D231 6F29
C2/966C:	EA18 CC25 903A 6F3A 4F36 4E32 2D32 0F2E

; Palette for katana, brush, book, etc.
C2/967C:	0000 1C57 353A 9025 0C15 A808 6604 0000
C2/968C:	0038 0038 0038 0038 0038 0038 0038 0038

; Palette for table skirt, helmets, etc.
C2/969C:	0000 1C57 9846 1436 D22D 6F21 4E1D 2D19
C2/96AC:	EB10 C90C A808 8708 6608 4504 2304 0000

; Unused palette (darker version of above?)
C2/96BC:	0000 1C57 1C57 1436 1436 6F21 6F21 2D19
C2/96CC:	EB10 EB10 8708 8708 4504 2304 2304 0000

; Palette for table surface
C2/96DC:	0000 1C57 9846 1436 D22D 9025 0C15 A808
C2/96EC:	0038 0038 0038 0038 0038 0038 0038 0038

; Palette for cinematic overlay
C2/96FC:	0000 524A EF3D 6B2D 2925 C618 6308 2000
C2/970C:	0038 0038 0038 0038 0038 0038 0038 0038

; Unused palette (slightly extends table surface)
C2/971C:	0000 1C57 9846 1436 D22D 9025 9025 0C15
C2/972C:	0C15 A808 A808 A808 A808 A808 A808 A808

; Palette for small credits (blue)
C2/973C:	0000 C718 FE16 FE16

; Palette for large credits (blue)
C2/9744:	0000 FE16 5A22 C718

; Palette for small credits (white)
C2/974C:	0000 60C4 0000 FF7F

; Palette for large credits and actor names (white)
C2/9754:	0000 FF7F B456 604C 0000 FF7F 604C FF7F
C2/9764:	0000 0000 0000 0000 0000 0000 0000 0000

; Palette for non-glint sprites in actor scenes
C2/9774:	0000 1C57 9846 1436 D22D 6F21 4E1D 0C15
C2/9784:	EB10 C90C A808 8708 6608 4504 2304 0000

; Palette for most airship sprites
C2/9794:	0000 FF7F 9C63 B646 1132 8D21 2919 E81C
C2/97A4:	C61C A418 8210 0000 0000 0000 2204 9362

; Palette for boat sprite and yellow birds
C2/97B4:	0000 6408 9119 EB10 870C 5336 8E29 FF67
C2/97C4:	9C16 1367 4C66 4149 1F7C 1F7C 611C 1F7C

; Palette for rearview airship's gondola
C2/97D4:	0000 3136 EF31 8C29 9119 2D19 EA14 A710
C2/97E4:	850C 6408 5B37 340E 6D01 1F7C 1F7C 4308

; Palette for rearview airship's balloon and rotors
C2/97F4:	0000 9C77 9B63 B546 3136 EF31 8C29 291D
C2/9804:	E718 A614 650C 440C 9119 EB10 870C 1F7C

; Palette for water spray
C2/9814:	0000 FF7F 1867 304E 4935 611C 2629 2629
C2/9824:	2629 2629 2629 2629 2629 2629 2629 2629

; Palette for white birds
C2/9834:	0200 6408 9119 EB10 870C FF7F F66A 0D46
C2/9844:	672D 3667 4F4E 4835 E414 1F7C 611C 1F7C

;*************************************************
; Ending Cinematic Sprite Data (C2/9854 - C2/A659)
;*************************************************

; Tile numbers for expanding 8x16 font tiles to 16x16 for end credits
C2/9854:	00      	; Upper half of "A"
C2/9855:	01      	; Upper half of "B"
C2/9856:	02      	; Upper half of "C"
C2/9857:	03      	; Upper half of "D"
C2/9858:	04      	; Upper half of "E"
C2/9859:	05      	; Upper half of "F"
C2/985A:	06      	; Upper half of "G"
C2/985B:	07      	; Upper half of "H"
C2/985C:	10      	; Lower half of "A"
C2/985D:	11      	; Lower half of "B"
C2/985E:	12      	; Lower half of "C"
C2/985F:	13      	; Lower half of "D"
C2/9860:	14      	; Lower half of "E"
C2/9861:	15      	; Lower half of "F"
C2/9862:	16      	; Lower half of "G"
C2/9863:	17      	; Lower half of "H"
C2/9864:	08      	; Upper half of "I"
C2/9865:	09      	; Upper half of "J"
C2/9866:	0A      	; Upper half of "K"
C2/9867:	0B      	; Upper half of "L"
C2/9868:	0C      	; Upper half of "M"
C2/9869:	0D      	; Upper half of "N"
C2/986A:	0E      	; Upper half of "O"
C2/986B:	0F      	; Upper half of "P"
C2/986C:	18      	; Lower half of "I"
C2/986D:	19      	; Lower half of "J"
C2/986E:	1A      	; Lower half of "K"
C2/986F:	1B      	; Lower half of "L"
C2/9870:	1C      	; Lower half of "M"
C2/9871:	1D      	; Lower half of "N"
C2/9872:	1E      	; Lower half of "O"
C2/9873:	1F      	; Lower half of "P"
C2/9874:	20      	; Upper half of "Q"
C2/9875:	21      	; Upper half of "R"
C2/9876:	22      	; Upper half of "S"
C2/9877:	23      	; Upper half of "T"
C2/9878:	24      	; Upper half of "U"
C2/9879:	25      	; Upper half of "V"
C2/987A:	26      	; Upper half of "W"
C2/987B:	27      	; Upper half of "X"
C2/987C:	30      	; Lower half of "Q"
C2/987D:	31      	; Lower half of "R"
C2/987E:	32      	; Lower half of "S"
C2/987F:	33      	; Lower half of "T"
C2/9880:	34      	; Lower half of "U"
C2/9881:	35      	; Lower half of "V"
C2/9882:	36      	; Lower half of "W"
C2/9883:	37      	; Lower half of "X"
C2/9884:	28      	; Upper half of "Y"
C2/9885:	29      	; Upper half of "Z"
C2/9886:	2A      	; "a" from "as"
C2/9887:	2B      	; "s" from "as"
C2/9888:	2C      	; For actor scenes
C2/9889:	2D      	; For actor scenes
C2/988A:	2E      	; For actor scenes
C2/988B:	2F      	; For actor scenes
C2/988C:	38      	; Lower half of "Y"
C2/988D:	39      	; Lower half of "Z"
C2/988E:	3A      	; For actor scenes
C2/988F:	3B      	; For actor scenes
C2/9890:	3C      	; For actor scenes
C2/9891:	3D      	; For actor scenes
C2/9892:	3E      	; For actor scenes
C2/9893:	3F      	; For actor scenes

; Animation table pointers and positions for end credits
C2/9894:	899D 6088	; producer
C2/9898:	CF9D 3898	; HIRONOBU
C2/989C:	159E 8098	; SAKAGUCHI
C2/98A0:	899D 6088	; director
C2/98A4:	2D9F 4098	; YOSHINORI
C2/98A8:	739F 9098	; KITASE
C2/98AC:	B99F 4CAC	; HIROYUKI
C2/98B0:	FF9F 94AC	; ITOU
C2/98B4:	CF9D 4488	; main
C2/98B8:	159E 6C88	; programmer
C2/98BC:	45A0 5898	; KEN
C2/98C0:	8BA0 7898	; NARITA
C2/98C4:	D1A0 48AC	; KIYOSHI
C2/98C8:	17A1 88AC	; YOSHII
C2/98CC:	5B9E 4088	; graphic
C2/98D0:	A19E 8088	; director
C2/98D4:	5DA1 3C98	; TETSUYA
C2/98D8:	A3A1 7C98	; TAKAHASHI
C2/98DC:	E9A1 48AC	; KAZUKO
C2/98E0:	2FA2 80AC	; SHIBUYA
C2/98E4:	5B9E 4088	; graphic
C2/98E8:	A19E 8088	; director
C2/98EC:	75A2 5098	; HIDEO
C2/98F0:	BBA2 8098	; MINABA
C2/98F4:	01A3 48AC	; TETSUYA
C2/98F8:	47A3 88AC	; NOMURA
C2/98FC:	E79E 6C88	; music
C2/9900:	8DA3 4C98	; NOBUO
C2/9904:	D3A3 7C98	; UEMATSU
C2/9908:	BDA5 5088	; image
C2/990C:	03A6 8088	; design
C2/9910:	19A4 4498	; YOSHITAKA
C2/9914:	5FA4 9498	; AMANO
C2/9918:	49A6 4888	; battle
C2/991C:	8FA6 8088	; planner
C2/9920:	A5A4 4498	; YASUYUKI
C2/9924:	EBA4 8C98	; HASEBE
C2/9928:	31A5 4CAC	; AKIYOSHI
C2/992C:	77A5 94AC	; OOTA
C2/9930:	A19E 4C88	; field
C2/9934:	CF9D 7C88	; planner
C2/9938:	E79E 3C98	; YOSHIHIKO
C2/993C:	2D9F 8C98	; MAEKAWA
C2/9940:	739F 58AC	; KEITA
C2/9944:	B99F 88AC	; ETOH
C2/9948:	FF9F 50C0	; SATORU
C2/994C:	45A0 88C0	; TSUJI
C2/9950:	899D 4C88	; event
C2/9954:	CF9D 7C88	; planner
C2/9958:	8BA0 4898	; TSUKASA
C2/995C:	D1A0 8898	; FUJITA
C2/9960:	17A1 3CAC	; KEISUKE
C2/9964:	5DA1 7CAC	; MATSUHARA
C2/9968:	159E 3C88	; effect
C2/996C:	5B9E 7488	; programmer
C2/9970:	A3A1 4898	; HIROSHI
C2/9974:	E9A1 8898	; HARATA
C2/9978:	2FA2 4CAC	; SATOSHI
C2/997C:	75A2 8CAC	; OGATA
C2/9980:	8FA6 3C88	; battle
C2/9984:	5B9E 7488	; programmer
C2/9988:	BBA2 3C98	; AKIHIRO
C2/998C:	01A3 7C98	; YAMAGUCHI
C2/9990:	899D 4088	; sound
C2/9994:	CF9D 7088	; programmer
C2/9998:	B99F 5498	; MINORU
C2/999C:	FF9F 8C98	; AKAO
C2/99A0:	159E 2488	; effect
C2/99A4:	5B9E 5C88	; graphic
C2/99A8:	A19E 9C88	; designer
C2/99AC:	45A0 4098	; HIROKATSU
C2/99B0:	8BA0 9098	; SASAKI
C2/99B4:	E79E 2888	; field
C2/99B8:	5B9E 5888	; graphic
C2/99BC:	A19E 9888	; designer
C2/99C0:	D1A0 4498	; TAKAHARU
C2/99C4:	17A1 8C98	; MATSUO
C2/99C8:	5DA1 4CAC	; YUUSUKE
C2/99CC:	A3A1 8CAC	; NAORA
C2/99D0:	E9A1 48C0	; NOBUYUKI
C2/99D4:	2FA2 90C0	; IKEDA
C2/99D8:	E79E 2888	; field
C2/99DC:	5B9E 5888	; graphic
C2/99E0:	A19E 9888	; designer
C2/99E4:	75A2 4C98	; TOMOE
C2/99E8:	BBA2 7C98	; INAZAWA
C2/99EC:	01A3 50AC	; KAORI
C2/99F0:	47A3 80AC	; TANAKA
C2/99F4:	8DA3 3CC0	; TAKAMICHI
C2/99F8:	D3A3 8CC0	; SHIBUYA
C2/99FC:	E79E 2888	; field
C2/9A00:	5B9E 5888	; graphic
C2/9A04:	A19E 9888	; designer
C2/9A08:	31A5 3898	; SINITIROU
C2/9A0C:	5FA4 8898	; HAMASAKA
C2/9A10:	A5A4 44AC	; AKIYOSHI
C2/9A14:	EBA4 8CAC	; MASUDA
C2/9A18:	19A4 40C0	; HIDETOSHI
C2/9A1C:	BDA5 90C0	; KEZUKA
C2/9A20:	2D9F 1C88	; monster
C2/9A24:	5B9E 5C88	; graphic
C2/9A28:	A19E 9C88	; designer
C2/9A2C:	03A6 4898	; HITOSHI
C2/9A30:	8BA0 8898	; SASAKI
C2/9A34:	739F 2488	; object
C2/9A38:	5B9E 5C88	; graphic
C2/9A3C:	A19E 9C88	; designer
C2/9A40:	49A6 4498	; KAZUHIRO
C2/9A44:	8FA6 8C98	; OHKAWA
C2/9A48:	899D 4888	; sound
C2/9A4C:	CF9D 7888	; engineer
C2/9A50:	B99F 4C98	; EIJI
C2/9A54:	FF9F 7498	; NAKAMURA
C2/9A58:	899D 5088	; sound
C2/9A5C:	159E 8088	; effect
C2/9A60:	45A0 4C98	; KAZUMI
C2/9A64:	8BA0 8498	; MITOME
C2/9A68:	D1A0 40AC	; YOSHITAKA
C2/9A6C:	17A1 90AC	; HIROTA
C2/9A70:	899D 5088	; sound
C2/9A74:	159E 8088	; effect
C2/9A78:	5DA1 4098	; YASUMASA
C2/9A7C:	A3A1 8898	; OKAMOTO
C2/9A80:	E9A1 54AC	; SHUN
C2/9A84:	2FA2 7CAC	; OHKUBO
C2/9A88:	5B9E 4888	; remake
C2/9A8C:	A19E 8088	; planner
C2/9A90:	75A2 5C94	; WEIMIN
C2/9A94:	BBA2 9494	; LI
C2/9A98:	01A3 60A8	; AIKO
C2/9A9C:	47A3 88A8	; ITO
C2/9AA0:	EDA7 58BC	; translator
C2/9AA4:	61A7 54C8	; TED
C2/9AA8:	A7A7 74C8	; WOOLSEY
C2/9AAC:	E79E 4488	; system
C2/9AB0:	CF9D 7C88	; engineer
C2/9AB4:	8DA3 3C98	; MASAHIRO
C2/9AB8:	D3A3 8498	; NAKAJIMA
C2/9ABC:	19A4 50AC	; MITSUO
C2/9AC0:	5FA4 88AC	; OGURA
C2/9AC4:	E79E 4488	; system
C2/9AC8:	CF9D 7C88	; engineer
C2/9ACC:	A5A4 4098	; YASUNORI
C2/9AD0:	EBA4 8898	; ORIKASA
C2/9AD4:	31A5 48AC	; YUTAKA
C2/9AD8:	77A5 80AC	; OHDAIRA
C2/9ADC:	2D9F 3888	; executive
C2/9AE0:	739F 8888	; producer
C2/9AE4:	49A6 4C98	; TETSUO
C2/9AE8:	8FA6 8498	; MIZUNO
C2/9AEC:	D5A6 40AC	; HITOSHI
C2/9AF0:	1BA7 80AC	; TAKEMURA
C2/9AF4:	899D 4040	; test
C2/9AF8:	CF9D 6840	; coordinator
C2/9AFC:	739F 6054	; s.kajitani
C2/9B00:	B99F 6060	; r.kouda
C2/9B04:	FF9F 606C	; k.inagi
C2/9B08:	45A0 6078	; n.hanada
C2/9B0C:	8BA0 6084	; h.masuda
C2/9B10:	D1A0 6090	; n.kanai
C2/9B14:	17A1 609C	; h.sakurai
C2/9B18:	5DA1 60A8	; h.suzuki
C2/9B1C:	159E 3C40	; special
C2/9B20:	5B9E 7C40	; thanks
C2/9B24:	A19E B440	; to
C2/9B28:	A3A1 6054	; m.miyamoto
C2/9B2C:	E9A1 6060	; k.torishima
C2/9B30:	2FA2 606C	; h.hashimoto
C2/9B34:	91A9 6084	; k.adachi
C2/9B38:	39B1 6090	; y.uenishi
C2/9B3C:	7FB1 609C	; y.ohkawa
C2/9B40:	C5B1 60A8	; y.kuwahara
C2/9B44:	75A2 6054	; y.hirata
C2/9B48:	BBA2 6060	; t.nomura
C2/9B4C:	01A3 606C	; k.sousui
C2/9B50:	47A3 6078	; t.tsuruzono
C2/9B54:	8DA3 6084	; y.ishida
C2/9B58:	D3A3 6090	; m.okamiya
C2/9B5C:	19A4 609C	; k.hirata
C2/9B60:	0BB2 60A8	; n.watanabe
C2/9B64:	51B2 60B4	; k.maeda
C2/9B68:	97B2 6054	; k.tanikawa
C2/9B6C:	DDB2 6060	; j.saito
C2/9B70:	23B3 606C	; m.denno
C2/9B74:	69B3 6078	; s.hidaki
C2/9B78:	5FA4 6084	; k.oogo
C2/9B7C:	A5A4 6090	; h.suzuki
C2/9B80:	C7B4 60A8	; y.matsumura
C2/9B84:	0DB5 60B4	; a.ueda
C2/9B88:	EBA4 6054	; h.yokota
C2/9B8C:	31A5 6060	; k.yamashita
C2/9B90:	77A5 606C	; m.yumoto
C2/9B94:	BDA5 6078	; n.ishikawa
C2/9B98:	03A6 6084	; h.kizuka
C2/9B9C:	49A6 6090	; s.arai
C2/9BA0:	8FA6 6054	; m.kouno
C2/9BA4:	D5A6 6060	; r.tsukakoshi
C2/9BA8:	21B0 606C	; k.kaneko
C2/9BAC:	67B0 6078	; h.shimodaira
C2/9BB0:	ADB0 6084	; m.noumura
C2/9BB4:	7DAE 6054	; k.miyamoto
C2/9BB8:	C3AE 6060	; h.suzuki
C2/9BBC:	09AF 606C	; a.kawazu
C2/9BC0:	D7A9 6078	; c.fujioka
C2/9BC4:	1DAA 6084	; h.kobayashi
C2/9BC8:	63AA 6090	; h.tanaka
C2/9BCC:	EFAA 609C	; t.mikasa
C2/9BD0:	35AB 60A8	; h.nishida
C2/9BD4:	7BAB 60B4	; t.takechi
C2/9BD8:	EDA7 606C	; t.morita
C2/9BDC:	33A8 6078	; y.suemitsu
C2/9BE0:	79A8 6084	; w.sato
C2/9BE4:	BFA8 6090	; h.nakamura
C2/9BE8:	05A9 609C	; s.aoyama
C2/9BEC:	4BA9 60A8	; h.nagahara
C2/9BF0:	DBAF 606C	; m.kaneshige
C2/9BF4:	21B0 6078	; h.noguchi
C2/9BF8:	67B0 6084	; m.horie
C2/9BFC:	1BA7 6090	; m.mori
C2/9C00:	61A7 609C	; t.ohno
C2/9C04:	A7A7 60A8	; m.someno
C2/9C08:	C1AB 546C	; rich silveira
C2/9C0C:	07AC 5C78	; toshi horii
C2/9C10:	4DAC 5884	; j.yanagihara
C2/9C14:	F1AD 6090	; doug smith
C2/9C18:	D9AC 589C	; james gillis
C2/9C1C:	1FAD 586C	; chris budd
C2/9C20:	65AD 5478	; mike markey
C2/9C24:	ABAD 4C84	; mirko freguia
C2/9C28:	93AC 4490	; nathan williams
C2/9C2C:	37AE 4C9C	; dalen abraham
C2/9C30:	7DAE 486C	; rebecca coffman
C2/9C34:	C3AE 5078	; brian fehdrau
C2/9C38:	09AF 5884	; jeff petkau
C2/9C3C:	4FAF 4890	; george sinfield
C2/9C40:	95AF 589C	; alan weiss

; Source and destination for large credits
C2/9C44:	A19F CF9D	; HIRONOBU
C2/9C48:	AA9F 159E	; SAKAGUCHI
C2/9C4C:	BD9F 2D9F	; YOSHINORI
C2/9C50:	C79F 739F	; KITASE
C2/9C54:	CE9F B99F	; HIROYUKI
C2/9C58:	D79F FF9F	; ITOU
C2/9C5C:	EC9F 45A0	; KEN
C2/9C60:	F09F 8BA0	; NARITA
C2/9C64:	F79F D1A0	; KIYOSHI
C2/9C68:	FF9F 17A1	; YOSHII
C2/9C6C:	17A0 5DA1	; TETSUYA
C2/9C70:	1FA0 A3A1	; TAKAHASHI
C2/9C74:	29A0 E9A1	; KAZUKO
C2/9C78:	30A0 2FA2	; SHIBUYA
C2/9C7C:	38A0 75A2	; HIDEO
C2/9C80:	3EA0 BBA2	; MINABA
C2/9C84:	17A0 01A3	; TETSUYA
C2/9C88:	45A0 47A3	; NOMURA
C2/9C8C:	52A0 8DA3	; NOBUO
C2/9C90:	58A0 D3A3	; UEMATSU
C2/9C94:	6DA0 19A4	; YOSHITAKA
C2/9C98:	77A0 5FA4	; AMANO
C2/9C9C:	8CA0 A5A4	; YASUYUKI
C2/9CA0:	95A0 EBA4	; HASEBE
C2/9CA4:	9CA0 31A5	; AKIYOSHI
C2/9CA8:	A5A0 77A5	; OOTA
C2/9CAC:	B0A0 E79E	; YOSHIHIKO
C2/9CB0:	BAA0 2D9F	; MAEKAWA
C2/9CB4:	C2A0 739F	; KEITA
C2/9CB8:	C8A0 B99F	; ETOH
C2/9CBC:	CDA0 FF9F	; SATORU
C2/9CC0:	D4A0 45A0	; TSUJI
C2/9CC4:	E0A0 8BA0	; TSUKASA
C2/9CC8:	E8A0 D1A0	; FUJITA
C2/9CCC:	EFA0 17A1	; KEISUKE
C2/9CD0:	F7A0 5DA1	; MATSUHARA
C2/9CD4:	08A1 A3A1	; HIROSHI
C2/9CD8:	10A1 E9A1	; HARATA
C2/9CDC:	17A1 2FA2	; SATOCHI
C2/9CE0:	1FA1 75A2	; OGATA
C2/9CE4:	25A1 BBA2	; AKIHIRO
C2/9CE8:	2DA1 01A3	; YAMAGOSHI
C2/9CEC:	3DA1 B99F	; MINORU
C2/9CF0:	44A1 FF9F	; AKAO
C2/9CF4:	52A1 45A0	; HIROKATSU
C2/9CF8:	5CA1 8BA0	; SASAKI
C2/9CFC:	63A1 D1A0	; TAKAHARU
C2/9D00:	6CA1 17A1	; MATSUO
C2/9D04:	73A1 5DA1	; YUUSUKE
C2/9D08:	7BA1 A3A1	; NAORA
C2/9D0C:	81A1 E9A1	; NOBUYUKI
C2/9D10:	8AA1 2FA2	; IKEDA
C2/9D14:	90A1 75A2	; TOMOE
C2/9D18:	96A1 BBA2	; INAZAWA
C2/9D1C:	9EA1 01A3	; KAORI
C2/9D20:	A4A1 47A3	; TANAKA
C2/9D24:	ABA1 8DA3	; TAKAMICHI
C2/9D28:	B5A1 D3A3	; SHIBUYA
C2/9D2C:	BDA1 31A5	; SINITIROU
C2/9D30:	C7A1 5FA4	; HAMASAKA
C2/9D34:	D0A1 A5A4	; AKIYOSHI
C2/9D38:	D9A1 EBA4	; MASUDA
C2/9D3C:	E0A1 19A4	; HIDETOSHI
C2/9D40:	EAA1 BDA5	; KEZUKA
C2/9D44:	F9A1 03A6	; HITOSHI
C2/9D48:	08A2 49A6	; KAZUHIRO
C2/9D4C:	11A2 8FA6	; OHKAWA
C2/9D50:	21A2 B99F	; EIJI
C2/9D54:	26A2 FF9F	; NAKAMURA
C2/9D58:	2FA2 45A0	; KAZUMI
C2/9D5C:	36A2 8BA0	; MITOME
C2/9D60:	3DA2 D1A0	; YOSHITAKA
C2/9D64:	47A2 17A1	; HIROTA
C2/9D68:	4EA2 5DA1	; YASUMASA
C2/9D6C:	57A2 A3A1	; OKAMOTO
C2/9D70:	5FA2 E9A1	; SHUN
C2/9D74:	64A2 2FA2	; OHKUBO
C2/9D78:	72A2 75A2	; WEIMIN
C2/9D7C:	79A2 BBA2	; LI
C2/9D80:	7CA2 01A3	; AIKO
C2/9D84:	81A2 47A3	; ITO
C2/9D88:	85A2 61A7	; TED
C2/9D8C:	89A2 A7A7	; WOOLSEY
C2/9D90:	98A2 8DA3	; MASAHIRO
C2/9D94:	A1A2 D3A3	; NAKAJIMA
C2/9D98:	AAA2 19A4	; MITSUO
C2/9D9C:	B1A2 5FA4	; OGURA
C2/9DA0:	B7A2 A5A4	; YASUNORI
C2/9DA4:	C0A2 EBA4	; ORIKASA
C2/9DA8:	C8A2 31A5	; YUTAKA
C2/9DAC:	CFA2 77A5	; OHDAIRA
C2/9DB0:	E1A2 49A6	; TETSUO
C2/9DB4:	E8A2 8FA6	; MIZUNO
C2/9DB8:	EFA2 D5A6	; HITOSHI
C2/9DBC:	F7A2 1BA7	; TAKEMURA

; Source and destination for small credits
C2/9DC0:	989F 899D	; producer
C2/9DC4:	B49F 899D	; director
C2/9DC8:	DC9F CF9D	; main
C2/9DCC:	E19F 159E	; programmer
C2/9DD0:	06A0 5B9E	; graphic
C2/9DD4:	0EA0 A19E	; director
C2/9DD8:	4CA0 E79E	; music
C2/9DDC:	60A0 BDA5	; image
C2/9DE0:	66A0 03A6	; design
C2/9DE4:	7DA0 49A6	; battle
C2/9DE8:	84A0 8FA6	; planner
C2/9DEC:	AAA0 A19E	; field
C2/9DF0:	DAA0 899D	; event
C2/9DF4:	84A0 CF9D	; planner
C2/9DF8:	01A1 159E	; effect
C2/9DFC:	E19F 5B9E	; programmer
C2/9E00:	7DA0 8FA6	; battle
C2/9E04:	37A1 899D	; sound
C2/9E08:	E19F CF9D	; programmer
C2/9E0C:	01A1 159E	; effect
C2/9E10:	06A0 5B9E	; graphic
C2/9E14:	49A1 A19E	; designer
C2/9E18:	AAA0 E79E	; field
C2/9E1C:	F1A1 2D9F	; monster
C2/9E20:	01A2 739F	; object
C2/9E24:	37A1 899D	; sound
C2/9E28:	18A2 CF9D	; engineer
C2/9E2C:	01A1 159E	; effect
C2/9E30:	6BA2 5B9E	; remake
C2/9E34:	84A0 A19E	; planner
C2/9E38:	91A2 E79E	; system
C2/9E3C:	D7A2 2D9F	; executive
C2/9E40:	989F 739F	; producer
C2/9E44:	4FA6 EDA7	; translator
C2/9E48:	00A3 899D	; test
C2/9E4C:	05A3 CF9D	; coordinator
C2/9E50:	59A3 159E	; special
C2/9E54:	61A3 5B9E	; thanks
C2/9E58:	68A3 A19E	; to
C2/9E5C:	11A3 739F	; s.kajitani
C2/9E60:	1CA3 B99F	; r.kouda
C2/9E64:	24A3 FF9F	; k.inagi
C2/9E68:	2CA3 45A0	; n.hanada
C2/9E6C:	35A3 8BA0	; h.masuda
C2/9E70:	3EA3 D1A0	; n.kanai
C2/9E74:	46A3 17A1	; h.sakurai
C2/9E78:	50A3 5DA1	; h.suzuki
C2/9E7C:	6BA3 A3A1	; m.miyamoto
C2/9E80:	76A3 E9A1	; k.torishima
C2/9E84:	82A3 2FA2	; h.hashimoto
C2/9E88:	8EA3 75A2	; y.hirata
C2/9E8C:	97A3 BBA2	; t.nomura
C2/9E90:	A0A3 01A3	; k.sousui
C2/9E94:	A9A3 47A3	; t.tsuruzono
C2/9E98:	B5A3 8DA3	; y.ishida
C2/9E9C:	BEA3 D3A3	; m.okamiya
C2/9EA0:	C8A3 19A4	; k.hirata
C2/9EA4:	08A4 5FA4	; k.oogo
C2/9EA8:	0FA4 A5A4	; h.suzuki
C2/9EAC:	18A4 EBA4	; h.yokota
C2/9EB0:	21A4 31A5	; k.yamashita
C2/9EB4:	2DA4 77A5	; m.yumoto
C2/9EB8:	36A4 BDA5	; n.ishikawa
C2/9EBC:	41A4 03A6	; h.kizuka
C2/9EC0:	4AA4 49A6	; s.arai
C2/9EC4:	51A4 8FA6	; m.kouno
C2/9EC8:	59A4 D5A6	; r.tsukakoshi
C2/9ECC:	1CA5 7DAE	; k.miyamoto
C2/9ED0:	27A5 C3AE	; h.suzuki
C2/9ED4:	30A5 09AF	; a.kawazu
C2/9ED8:	39A5 D7A9	; c.fujioka
C2/9EDC:	43A5 1DAA	; h.kobayashi
C2/9EE0:	4FA5 63AA	; h.tanaka
C2/9EE4:	58A5 EFAA	; t.mikasa
C2/9EE8:	61A5 35AB	; h.nishida
C2/9EEC:	6BA5 7BAB	; t.takechi
C2/9EF0:	F5A4 91A9	; k.adachi
C2/9EF4:	66A4 21B0	; k.kaneko
C2/9EF8:	6FA4 67B0	; h.shimodaira
C2/9EFC:	7CA4 ADB0	; m.noumura
C2/9F00:	FEA4 39B1	; y.uenishi
C2/9F04:	08A5 7FB1	; y.ohkawa
C2/9F08:	11A5 C5B1	; y.kuwahara
C2/9F0C:	D1A3 0BB2	; n.watanabe
C2/9F10:	DCA3 51B2	; k.maeda
C2/9F14:	E4A3 97B2	; k.tanikawa
C2/9F18:	EFA3 DDB2	; j.saito
C2/9F1C:	F7A3 23B3	; m.denno
C2/9F20:	FFA3 69B3	; s.hidaki
C2/9F24:	3CA6 C7B4	; y.matsumura
C2/9F28:	48A6 0DB5	; a.ueda
C2/9F2C:	A4A4 1BA7	; m.mori
C2/9F30:	ABA4 61A7	; t.ohno
C2/9F34:	B2A4 A7A7	; m.someno
C2/9F38:	86A4 DBAF	; m.kaneshige
C2/9F3C:	92A4 21B0	; h.noguchi
C2/9F40:	9CA4 67B0	; m.horie
C2/9F44:	BBA4 EDA7	; t.morita
C2/9F48:	C4A4 33A8	; y.suemitsu
C2/9F4C:	CFA4 79A8	; w.sato
C2/9F50:	D6A4 BFA8	; h.nakamura
C2/9F54:	E1A4 05A9	; s.aoyama
C2/9F58:	EAA4 4BA9	; h.nagahara
C2/9F5C:	75A5 C1AB	; rich silveira
C2/9F60:	83A5 07AC	; toshi horii
C2/9F64:	8FA5 4DAC	; j.yanagihara
C2/9F68:	9CA5 93AC	; nathan williams
C2/9F6C:	ACA5 D9AC	; james gillis
C2/9F70:	B9A5 1FAD	; chris budd
C2/9F74:	C4A5 65AD	; mike markey
C2/9F78:	D0A5 ABAD	; mirko freguia
C2/9F7C:	DEA5 F1AD	; doug smith
C2/9F80:	E9A5 37AE	; dalen abraham
C2/9F84:	F7A5 7DAE	; rebecca coffman
C2/9F88:	07A6 C3AE	; brian fehdrau
C2/9F8C:	15A6 09AF	; jeff petkau
C2/9F90:	21A6 4FAF	; george sinfield
C2/9F94:	31A6 95AF	; alan weiss

; Source bank is C2. Destination bank is 7E. Destination area starts with
; the animation script. The first word is a pose pointer, which points to
; the fourth byte. Following that is the pose timer, which is set to
; infinite. The last part holds the tile count and OAM for that single pose.


; Text for end credits
C2/9F98:	EFF1EEE3F4E2E4F100               ; producer
C2/9FA1:	4E60826C6A6C428800               ; HIRONOBU
C2/9FAA:	844064404C88444E6000             ; SAKAGUCHI
C2/9FB4:	E3E8F1E4E2F3EEF100               ; director
C2/9FBD:	A06C844E606A6C826000             ; YOSHINORI
C2/9FC7:	64608640844800                   ; KITASE
C2/9FCE:	4E60826CA088646000               ; HIROYUKI
C2/9FD7:	60866C8800                       ; ITOU
C2/9FDC:	ECE0E8ED00                       ; main
C2/9FE1:	EFF1EEE6F1E0ECECE4F100           ; programmer
C2/9FEC:	64486A00                         ; KEN
C2/9FF0:	6A408260864000                   ; NARITA
C2/9FF7:	6460A06C844E6000                 ; KIYOSHI
C2/9FFF:	A06C844E606000                   ; YOSHII
C2/A006:	E6F1E0EFE7E8E200                 ; graphic
C2/A00E:	E3E8F1E4E2F3EEF100               ; director
C2/A017:	8648868488A04000                 ; TETSUYA
C2/A01F:	864064404E40844E6000             ; TAKAHASHI
C2/A029:	6440A288646C00                   ; KAZUKO
C2/A030:	844E604288A04000                 ; SHIBUYA
C2/A038:	4E6046486C00                     ; HIDEO
C2/A03E:	68606A40424000                   ; MINABA
C2/A045:	6A6C6888824000                   ; NOMURA
C2/A04C:	ECF4F2E8E200                     ; music
C2/A052:	6A6C42886C00                     ; NOBUO
C2/A058:	8848684086848800                 ; UEMATSU
C2/A060:	E8ECE0E6E400                     ; image
C2/A066:	E3E4F2E8E6ED00                   ; design
C2/A06D:	A06C844E608640644000             ; YOSHITAKA
C2/A077:	4068406A6C00                     ; AMANO
C2/A07D:	E1E0F3F3EBE400                   ; battle
C2/A084:	EFEBE0EDEDE4F100                 ; planner
C2/A08C:	A0408488A088646000               ; YASUYUKI
C2/A095:	4E408448424800                   ; HASEBE
C2/A09C:	406460A06C844E6000               ; AKIYOSHI
C2/A0A5:	6C6C864000                       ; OOTA
C2/A0AA:	E5E8E4EBE300                     ; field
C2/A0B0:	A06C844E604E60646C00             ; YOSHIHIKO
C2/A0BA:	68404864408C4000                 ; MAEKAWA
C2/A0C2:	644860864000                     ; KEITA
C2/A0C8:	48866C4E00                       ; ETOH
C2/A0CD:	8440866C828800                   ; SATORU
C2/A0D4:	868488626000                     ; TSUJI
C2/A0DA:	E4F5E4EDF300                     ; event
C2/A0E0:	8684886440844000                 ; TSUKASA
C2/A0E8:	4A886260864000                   ; FUJITA
C2/A0EF:	6448608488644800                 ; KEISUKE
C2/A0F7:	68408684884E40824000             ; MATSUHARA
C2/A101:	E4E5E5E4E2F300                   ; effect
C2/A108:	4E60826C844E6000                 ; HIROSHI
C2/A110:	4E408240864000                   ; HARATA
C2/A117:	8440866C844E6000                 ; SATOSHI
C2/A11F:	6C4C40864000                     ; OGATA
C2/A125:	4064604E60826C00                 ; AKIHIRO
C2/A12D:	A04068404C88444E6000             ; YAMAGUCHI
C2/A137:	F2EEF4EDE300                     ; sound
C2/A13D:	68606A6C828800                   ; MINORU
C2/A144:	4064406C00                       ; AKAO
C2/A149:	E3E4F2E8E6EDE4F100               ; designer
C2/A152:	4E60826C644086848800             ; HIROKATSU
C2/A15C:	84408440646000                   ; SASAKI
C2/A163:	864064404E40828800               ; TAKAHARU
C2/A16C:	68408684886C00                   ; MATSUO
C2/A173:	A088888488644800                 ; YUUSUKE
C2/A17B:	6A406C824000                     ; NAORA
C2/A181:	6A6C4288A088646000               ; NOBUYUKI
C2/A18A:	606448464000                     ; IKEDA
C2/A190:	866C686C4800                     ; TOMOE
C2/A196:	606A40A2408C4000                 ; INAZAWA
C2/A19E:	64406C826000                     ; KAORI
C2/A1A4:	86406A40644000                   ; TANAKA
C2/A1AB:	864064406860444E6000             ; TAKAMICHI
C2/A1B5:	844E604288A04000                 ; SHIBUYA
C2/A1BD:	84606A608660826C8800             ; SINITIROU
C2/A1C7:	4E4068408440644000               ; HAMASAKA
C2/A1D0:	406460A06C844E6000               ; AKIYOSHI
C2/A1D9:	68408488464000                   ; MASUDA
C2/A1E0:	4E604648866C844E6000             ; HIDETOSHI
C2/A1EA:	6448A288644000                   ; KEZUKA
C2/A1F1:	ECEEEDF2F3E4F100                 ; monster
C2/A1F9:	4E60866C844E6000                 ; HITOSHI
C2/A201:	EEE1E9E4E2F300                   ; object
C2/A208:	6440A2884E60826C00               ; KAZUHIRO
C2/A211:	6C4E64408C4000                   ; OHKAWA
C2/A218:	E4EDE6E8EDE4E4F100               ; engineer
C2/A221:	4860626000                       ; EIJI
C2/A226:	6A4064406888824000               ; NAKAMURA
C2/A22F:	6440A288686000                   ; KAZUMI
C2/A236:	6860866C684800                   ; MITOME
C2/A23D:	A06C844E608640644000             ; YOSHITAKA
C2/A247:	4E60826C864000                   ; HIROTA
C2/A24E:	A04084886840844000               ; YASUMASA
C2/A257:	6C6440686C866C00                 ; OKAMOTO
C2/A25F:	844E886A00                       ; SHUN
C2/A264:	6C4E6488426C00                   ; OHKUBO
C2/A26B:	F1E4ECE0EAE400                   ; remake
C2/A272:	8C486068606A00                   ; WEIMIN
C2/A279:	666000                           ; LI
C2/A27C:	4060646C00                       ; AIKO
C2/A281:	60866C00                         ; ITO
C2/A285:	86484600                         ; TED
C2/A289:	8C6C6C668448A000                 ; WOOLSEY
C2/A291:	F2F8F2F3E4EC00                   ; system
C2/A298:	684084404E60826C00               ; MASAHIRO
C2/A2A1:	6A4064406260684000               ; NAKAJIMA
C2/A2AA:	68608684886C00                   ; MITSUO
C2/A2B1:	6C4C88824000                     ; OGURA
C2/A2B7:	A04084886A6C826000               ; YASUNORI
C2/A2C0:	6C82606440844000                 ; ORIKASA
C2/A2C8:	A0888640644000                   ; YUTAKA
C2/A2CF:	6C4E464060824000                 ; OHDAIRA
C2/A2D7:	E4F7E4E2F4F3E8F5E400             ; executive
C2/A2E1:	86488684886C00                   ; TETSUO
C2/A2E8:	6860A2886A6C00                   ; MIZUNO
C2/A2EF:	4E60866C844E6000                 ; HITOSHI
C2/A2F7:	864064486888824000               ; TAKEMURA
C2/A300:	F3E4F2F300                       ; test
C2/A305:	E2EEEEF1E3E8EDE0F3EEF100         ; coordinator  (SFC: "coordinater")
C2/A311:	F2FAEAE0E9E8F3E0EDE800           ; s.kajitani
C2/A31C:	F1FAEAEEF4E3E000                 ; r.kouda
C2/A324:	EAFAE8EDE0E6E800                 ; k.inagi
C2/A32C:	EDFAE7E0EDE0E3E000               ; n.hanada
C2/A335:	E7FAECE0F2F4E3E000               ; h.masuda
C2/A33E:	EDFAEAE0EDE0E800                 ; n.kanai
C2/A346:	E7FAF2E0EAF4F1E0E800             ; h.sakurai
C2/A350:	E7FAF2F4F9F4EAE800               ; h.suzuki
C2/A359:	F2EFE4E2E8E0EB00                 ; special
C2/A361:	F3E7E0EDEAF200                   ; thanks
C2/A368:	F3EE00                           ; to
C2/A36B:	ECFAECE8F8E0ECEEF3EE00           ; m.miyamoto
C2/A376:	EAFAF3EEF1E8F2E7E8ECE000         ; k.torishima
C2/A382:	E7FAE7E0F2E7E8ECEEF3EE00         ; h.hashimoto
C2/A38E:	F8FAE7E8F1E0F3E000               ; y.hirata
C2/A397:	F3FAEDEEECF4F1E000               ; t.nomura
C2/A3A0:	EAFAF2EEF4F2F4E800               ; k.sousui
C2/A3A9:	F3FAF3F2F4F1F4F9EEEDEE00         ; t.tsuruzono
C2/A3B5:	F8FAE8F2E7E8E3E000               ; y.ishida
C2/A3BE:	ECFAEEEAE0ECE8F8E000             ; m.okamiya
C2/A3C8:	EAFAE7E8F1E0F3E000               ; k.hirata
C2/A3D1:	EDFAF6E0F3E0EDE0E1E400           ; n.watanabe
C2/A3DC:	EAFAECE0E4E3E000                 ; k.maeda
C2/A3E4:	EAFAF3E0EDE8EAE0F6E000           ; k.tanikawa
C2/A3EF:	E9FAF2E0E8F3EE00                 ; j.saito
C2/A3F7:	ECFAE3E4EDEDEE00                 ; m.denno
C2/A3FF:	F2FAE7E8E3E0EAE800               ; s.hidaki
C2/A408:	EAFAEEEEE6EE00                   ; k.oogo
C2/A40F:	E7FAF2F4F9F4EAE800               ; h.suzuki
C2/A418:	E7FAF8EEEAEEF3E000               ; h.yokota
C2/A421:	EAFAF8E0ECE0F2E7E8F3E000         ; k.yamashita
C2/A42D:	ECFAF8F4ECEEF3EE00               ; m.yumoto
C2/A436:	EDFAE8F2E7E8EAE0F6E000           ; n.ishikawa
C2/A441:	E7FAEAE8F9F4EAE000               ; h.kizuka
C2/A44A:	F2FAE0F1E0E800                   ; s.arai
C2/A451:	ECFAEAEEF4EDEE00                 ; m.kouno
C2/A459:	F1FAF3F2F4EAE0EAEEF2E7E800       ; r.tsukakoshi
C2/A466:	EAFAEAE0EDE4EAEE00               ; k.kaneko
C2/A46F:	E7FAF2E7E8ECEEE3E0E8F1E000       ; h.shimodaira
C2/A47C:	ECFAEDEEF4ECF4F1E000             ; m.noumura
C2/A486:	ECFAEAE0EDE4F2E7E8E6E400         ; m.kaneshige
C2/A492:	E7FAEDEEE6F4E2E7E800             ; h.noguchi
C2/A49C:	ECFAE7EEF1E8E400                 ; m.horie
C2/A4A4:	ECFAECEEF1E800                   ; m.mori
C2/A4AB:	F3FAEEE7EDEE00                   ; t.ohno
C2/A4B2:	ECFAF2EEECE4EDEE00               ; m.someno
C2/A4BB:	F3FAECEEF1E8F3E000               ; t.morita
C2/A4C4:	F8FAF2F4E4ECE8F3F2F400           ; y.suemitsu
C2/A4CF:	F6FAF2E0F3EE00                   ; w.sato
C2/A4D6:	E7FAEDE0EAE0ECF4F1E000           ; h.nakamura
C2/A4E1:	F2FAE0EEF8E0ECE000               ; s.aoyama
C2/A4EA:	E7FAEDE0E6E0E7E0F1E000           ; h.nagahara
C2/A4F5:	EAFAE0E3E0E2E7E800               ; k.adachi
C2/A4FE:	F8FAF4E4EDE8F2E7E800             ; y.uenishi
C2/A508:	F8FAEEE7EAE0F6E000               ; y.ohkawa
C2/A511:	F8FAEAF4F6E0E7E0F1E000           ; y.kuwahara
C2/A51C:	EAFAECE8F8E0ECEEF3EE00           ; k.miyamoto
C2/A527:	E7FAF2F4F9F4EAE800               ; h.suzuki
C2/A530:	E0FAEAE0F6E0F9F400               ; a.kawazu
C2/A539:	E2FAE5F4E9E8EEEAE000             ; c.fujioka
C2/A543:	E7FAEAEEE1E0F8E0F2E7E800         ; h.kobayashi
C2/A54F:	E7FAF3E0EDE0EAE000               ; h.tanaka
C2/A558:	F3FAECE8EAE0F2E000               ; t.mikasa
C2/A561:	E7FAEDE8F2E7E8E3E000             ; h.nishida
C2/A56B:	F3FAF3E0EAE4E2E7E800             ; t.takechi
C2/A575:	F1E8E2E7FBF2E8EBF5E4E8F1E000     ; rich silveira
C2/A583:	F3EEF2E7E8FBE7EEF1E8E800         ; toshi horii
C2/A58F:	E9FAF8E0EDE0E6E8E7E0F1E000       ; j.yanagihara
C2/A59C:	EDE0F3E7E0EDFBF6E8EBEBE8E0ECF200 ; nathan williams
C2/A5AC:	E9E0ECE4F2FBE6E8EBEBE8F200       ; james gillis
C2/A5B9:	E2E7F1E8F2FBE1F4E3E300           ; chris budd
C2/A5C4:	ECE8EAE4FBECE0F1EAE4F800         ; mike markey
C2/A5D0:	ECE8F1EAEEFBE5F1E4E6F4E8E000     ; mirko freguia
C2/A5DE:	E3EEF4E6FBF2ECE8F3E700           ; doug smith
C2/A5E9:	E3E0EBE4EDFBE0E1F1E0E7E0EC00     ; dalen abraham
C2/A5F7:	F1E4E1E4E2E2E0FBE2EEE5E5ECE0ED00 ; rebecca coffman
C2/A607:	E1F1E8E0EDFBE5E4E7E3F1E0F400     ; brian fehdrau
C2/A615:	E9E4E5E5FBEFE4F3EAE0F400         ; jeff petkau
C2/A621:	E6E4EEF1E6E4FBF2E8EDE5E8E4EBE300 ; george sinfield
C2/A631:	E0EBE0EDFBF6E4E8F2F200           ; alan weiss
C2/A63C:	F8FAECE0F3F2F4ECF4F1E000         ; y.matsumura
C2/A648:	E0FAF4E4E3E000                   ; a.ueda
C2/A64F:	F3F1E0EDF2EBE0F3EEF100           ; translator

; Unused Space (422 bytes)(C2/A65A - C2/A7FF)
C2/A65A:	FFFFFFFF
C2/A65E:	FFFFFFFF
C2/A662:	FFFFFFFF
C2/A666:	FFFFFFFF
C2/A66A:	FFFFFFFF
C2/A66E:	FFFFFFFF
C2/A672:	FFFFFFFF
C2/A676:	FFFFFFFF
C2/A67A:	FFFFFFFF
C2/A67E:	FFFFFFFF
C2/A682:	FFFFFFFF
C2/A686:	FFFFFFFF
C2/A68A:	FFFFFFFF
C2/A68E:	FFFFFFFF
C2/A692:	FFFFFFFF
C2/A696:	FFFFFFFF
C2/A69A:	FFFFFFFF
C2/A69E:	FFFFFFFF
C2/A6A2:	FFFFFFFF
C2/A6A6:	FFFFFFFF
C2/A6AA:	FFFFFFFF
C2/A6AE:	FFFFFFFF
C2/A6B2:	FFFFFFFF
C2/A6B6:	FFFFFFFF
C2/A6BA:	FFFFFFFF
C2/A6BE:	FFFFFFFF
C2/A6C2:	FFFFFFFF
C2/A6C6:	FFFFFFFF
C2/A6CA:	FFFFFFFF
C2/A6CE:	FFFFFFFF
C2/A6D2:	FFFFFFFF
C2/A6D6:	FFFFFFFF
C2/A6DA:	FFFFFFFF
C2/A6DE:	FFFFFFFF
C2/A6E2:	FFFFFFFF
C2/A6E6:	FFFFFFFF
C2/A6EA:	FFFFFFFF
C2/A6EE:	FFFFFFFF
C2/A6F2:	FFFFFFFF
C2/A6F6:	FFFFFFFF
C2/A6FA:	FFFFFFFF
C2/A6FE:	FFFFFFFF
C2/A702:	FFFFFFFF
C2/A706:	FFFFFFFF
C2/A70A:	FFFFFFFF
C2/A70E:	FFFFFFFF
C2/A712:	FFFFFFFF
C2/A716:	FFFFFFFF
C2/A71A:	FFFFFFFF
C2/A71E:	FFFFFFFF
C2/A722:	FFFFFFFF
C2/A726:	FFFFFFFF
C2/A72A:	FFFFFFFF
C2/A72E:	FFFFFFFF
C2/A732:	FFFFFFFF
C2/A736:	FFFFFFFF
C2/A73A:	FFFFFFFF
C2/A73E:	FFFFFFFF
C2/A742:	FFFFFFFF
C2/A746:	FFFFFFFF
C2/A74A:	FFFFFFFF
C2/A74E:	FFFFFFFF
C2/A752:	FFFFFFFF
C2/A756:	FFFFFFFF
C2/A75A:	FFFFFFFF
C2/A75E:	FFFFFFFF
C2/A762:	FFFFFFFF
C2/A766:	FFFFFFFF
C2/A76A:	FFFFFFFF
C2/A76E:	FFFFFFFF
C2/A772:	FFFFFFFF
C2/A776:	FFFFFFFF
C2/A77A:	FFFFFFFF
C2/A77E:	FFFFFFFF
C2/A782:	FFFFFFFF
C2/A786:	FFFFFFFF
C2/A78A:	FFFFFFFF
C2/A78E:	FFFFFFFF
C2/A792:	FFFFFFFF
C2/A796:	FFFFFFFF
C2/A79A:	FFFFFFFF
C2/A79E:	FFFFFFFF
C2/A7A2:	FFFFFFFF
C2/A7A6:	FFFFFFFF
C2/A7AA:	FFFFFFFF
C2/A7AE:	FFFFFFFF
C2/A7B2:	FFFFFFFF
C2/A7B6:	FFFFFFFF
C2/A7BA:	FFFFFFFF
C2/A7BE:	FFFFFFFF
C2/A7C2:	FFFFFFFF
C2/A7C6:	FFFFFFFF
C2/A7CA:	FFFFFFFF
C2/A7CE:	FFFFFFFF
C2/A7D2:	FFFFFFFF
C2/A7D6:	FFFFFFFF
C2/A7DA:	FFFFFFFF
C2/A7DE:	FFFFFFFF
C2/A7E2:	FFFFFFFF
C2/A7E6:	FFFFFFFF
C2/A7EA:	FFFFFFFF
C2/A7EE:	FFFFFFFF
C2/A7F2:	FFFFFFFF
C2/A7F6:	FFFFFFFF
C2/A7FA:	FFFFFFFF
C2/A7FE:	FFFF


; ******************************************************
; Battle Graphics Program (continued)(C2/A800 - C2/FAA3)
; ******************************************************

; Slot Reel 1 conversion data - get a slot value based on the reel's current position
; Note the game scrolls backwards from the starting 7 symbol, so we begin
; With C2/A800, then work our way up from the bottom at C2/A81E, and repeat.
C2/A800:	0000    	; 7
C2/A802:	0400    	; Chocobo
C2/A804:	0500    	; Diamond
C2/A806:	0300    	; Ship
C2/A808:	0400    	; Chocobo
C2/A80A:	0500    	; Diamond
C2/A80C:	0200    	; Bar
C2/A80E:	0500    	; Diamond
C2/A810:	0100    	; Dragon
C2/A812:	0400    	; Chocobo
C2/A814:	0500    	; Diamond
C2/A816:	0300    	; Ship
C2/A818:	0500    	; Diamond
C2/A81A:	0200    	; Bar
C2/A81C:	0300    	; Ship
C2/A81E:	0100    	; Dragon

; Slot Reel 2 conversion data - get a slot value based on the reel's current position
; Note the game scrolls backwards from the starting 7 symbol, so we begin
; With C2/A820, then work our way up from the bottom at C2/A83E, and repeat.
C2/A820:	0000    	; 7
C2/A822:	0400    	; Chocobo
C2/A824:	0100    	; Dragon
C2/A826:	0500    	; Diamond
C2/A828:	0300    	; Ship
C2/A82A:	0400    	; Chocobo
C2/A82C:	0100    	; Dragon
C2/A82E:	0500    	; Diamond
C2/A830:	0400    	; Chocobo
C2/A832:	0300    	; Ship
C2/A834:	0200    	; Bar
C2/A836:	0500    	; Diamond
C2/A838:	0400    	; Chocobo
C2/A83A:	0300    	; Ship
C2/A83C:	0200    	; Bar
C2/A83E:	0500    	; Diamond

; Slot Reel 3 conversion data - get a slot value based on the reel's current position
; Note the game scrolls backwards from the starting 7 symbol, so we begin
; With C2/A840, then work our way up from the bottom at C2/A85E, and repeat.
C2/A840:	0000    	; 7
C2/A842:	0100    	; Dragon
C2/A844:	0300    	; Ship
C2/A846:	0400    	; Chocobo
C2/A848:	0200    	; Bar
C2/A84A:	0500    	; Diamond
C2/A84C:	0400    	; Chocobo
C2/A84E:	0300    	; Ship
C2/A850:	0100    	; Dragon
C2/A852:	0500    	; Diamond
C2/A854:	0400    	; Chocobo
C2/A856:	0300    	; Ship
C2/A858:	0200    	; Bar
C2/A85A:	0500    	; Diamond
C2/A85C:	0400    	; Chocobo
C2/A85E:	0500    	; Diamond

; Data?
C2/A860:	2121
C2/A862:	2121
C2/A864:	2121
C2/A866:	2121

C2/A868:	2525
C2/A86A:	2525
C2/A86C:	2525
C2/A86E:	25

; Amount to shift character's horizontal position at a time when
; using Row command - if new row is back row.  Note that this
; adjustment is done six times in succession.
                        ; Encounter formation
C2/A86F:	02      	; Front
C2/A870:	02      	
C2/A871:	02      	
C2/A872:	02      	

C2/A873:	FE      	; Back
C2/A874:	FE
C2/A875:	FE
C2/A876:	FE

C2/A877:	00      	; Pincer
C2/A878:	00
C2/A879:	00
C2/A87A:	00

C2/A87B:	02      	; Side
C2/A87C:	02
C2/A87D:	FE
C2/A87E:	FE

; Amount to shift character's horizontal position at a time when
; using Row command - if new row is front row.  Note that this
; adjustment is done six times in succession.
                  ; Encounter formation
C2/A87F:	FE    ; Front
C2/A880:	FE
C2/A881:	FE
C2/A882:	FE

C2/A883:	02    ; Back
C2/A884:	02
C2/A885:	02
C2/A886:	02

C2/A887:	00    ; Pincer
C2/A888:	00
C2/A889:	00
C2/A88A:	00

C2/A88B:	FE    ; Side
C2/A88C:	FE
C2/A88D:	02
C2/A88E:	02

; This function sets up DMA channel 7. Called from C1/0BDD.
C2/A88F:	A5 9A      	LDA $9A
C2/A891:	F0 3E      	BEQ $A8D1      ; +62
C2/A893:	A5 0E      	LDA $0E
C2/A895:	29 07      	AND #$07
C2/A897:	AA         	TAX
C2/A898:	BF E3 E4 C2	LDA $C2E4E3,X
C2/A89C:	8F 74 43 00	STA $004374    ; 7th DMA channel source bank
C2/A8A0:	8A         	TXA
C2/A8A1:	0A         	ASL
C2/A8A2:	AA         	TAX
C2/A8A3:	C2 20      	REP #$20       ; 16-bit A
C2/A8A5:	BF C3 E4 C2	LDA $C2E4C3,X
C2/A8A9:	8F 16 21 00	STA $002116    ; Video address
C2/A8AD:	BF D3 E4 C2	LDA $C2E4D3,X
C2/A8B1:	8F 72 43 00	STA $004372    ; 7th DMA channel source offset
C2/A8B5:	A9 00 08   	LDA #$0800     ; 2,048
C2/A8B8:	8F 75 43 00	STA $004375    ; 7th DMA channel source size
C2/A8BC:	7B         	TDC
C2/A8BD:	E2 20      	SEP #$20       ; 8-bit A
C2/A8BF:	A9 01      	LDA #$01       ; 1
C2/A8C1:	8F 70 43 00	STA $004370    ; 7th DMA channel control
C2/A8C5:	A9 18      	LDA #$18       ; 24
C2/A8C7:	8F 71 43 00	STA $004371    ; 7th DMA channel destination
C2/A8CB:	A9 80      	LDA #$80       ; -128
C2/A8CD:	8F 0B 42 00	STA $00420B    ; Enable 7th DMA channel
C2/A8D1:	6B         	RTL

; This is NOT free space. It is data.
C2/A8D2:	FF
C2/A8D3:	FF
C2/A8D4:	FF
C2/A8D5:	FF
C2/A8D6:	FF
C2/A8D7:	FF
C2/A8D8:	FF
C2/A8D9:	FF
C2/A8DA:	FF
C2/A8DB:	FF
C2/A8DC:	FF
C2/A8DD:	FF
C2/A8DE:	FF
C2/A8DF:	FF
C2/A8E0:	FF
C2/A8E1:	FF
C2/A8E2:	7F
C2/A8E3:	FF
C2/A8E4:	FB
C2/A8E5:	FF
C2/A8E6:	EF
C2/A8E7:	FF
C2/A8E8:	DF
C2/A8E9:	FF
C2/A8EA:	FD
C2/A8EB:	FF
C2/A8EC:	F7
C2/A8ED:	FF
C2/A8EE:	FE
C2/A8EF:	FF
C2/A8F0:	BF
C2/A8F1:	FF
C2/A8F2:	FF
C2/A8F3:	FD
C2/A8F4:	FF
C2/A8F5:	EF
C2/A8F6:	FF
C2/A8F7:	F7
C2/A8F8:	FF
C2/A8F9:	BF
C2/A8FA:	FF
C2/A8FB:	FE
C2/A8FC:	FF
C2/A8FD:	7F
C2/A8FE:	FF
C2/A8FF:	DF
C2/A900:	FF
C2/A901:	FB
C2/A902:	7F
C2/A903:	FF
C2/A904:	FB
C2/A905:	FF
C2/A906:	EF
C2/A907:	FF
C2/A908:	DF
C2/A909:	FF
C2/A90A:	FD
C2/A90B:	FF
C2/A90C:	F7
C2/A90D:	FF
C2/A90E:	FE
C2/A90F:	FF
C2/A910:	BF
C2/A911:	FF
C2/A912:	FF
C2/A913:	FD
C2/A914:	FF
C2/A915:	EF
C2/A916:	FF
C2/A917:	F7
C2/A918:	FF
C2/A919:	BF
C2/A91A:	FF
C2/A91B:	FE
C2/A91C:	FF
C2/A91D:	7F
C2/A91E:	FF
C2/A91F:	DF
C2/A920:	FF
C2/A921:	FB
C2/A922:	7F
C2/A923:	FF
C2/A924:	FB
C2/A925:	FF
C2/A926:	EF
C2/A927:	FF
C2/A928:	DF
C2/A929:	FF
C2/A92A:	FD
C2/A92B:	FF
C2/A92C:	F7
C2/A92D:	FF
C2/A92E:	FE
C2/A92F:	FF
C2/A930:	BF
C2/A931:	FF
C2/A932:	FF
C2/A933:	FD
C2/A934:	FF
C2/A935:	EF
C2/A936:	FF
C2/A937:	F7
C2/A938:	FF
C2/A939:	BF
C2/A93A:	FF
C2/A93B:	FE
C2/A93C:	FF
C2/A93D:	7F
C2/A93E:	FF
C2/A93F:	DF
C2/A940:	FF
C2/A941:	FB

; Called from C2/AA42 and C2/AA53.
C2/A942:	AE EC EC   	LDX $ECEC
C2/A945:	E0 0C 00   	CPX #$000C     ; 12
C2/A948:	90 16      	BCC $A960      ; Just want to point out that there's a closer RTS...
C2/A94A:	CE EE EC   	DEC $ECEE
C2/A94D:	D0 06      	BNE $A955      ; +6
C2/A94F:	A9 04      	LDA #$04       ; 4
C2/A951:	8D EE EC   	STA $ECEE
C2/A954:	60         	RTS

C2/A955:	C2 20      	REP #$20       ; 16-bit A
C2/A957:	CE B6 64   	DEC $64B6      ; Decrease battle info window X-offset
C2/A95A:	EE CF 80   	INC $80CF      ; Increase enemy's Y-coordinate - not sure whether this means moving it up or down
C2/A95D:	7B         	TDC
C2/A95E:	E2 20      	SEP #$20       ; 8-bit A
C2/A960:	60         	RTS

; Call C1/022A a certain number of times.
C2/A961:	48         	PHA
C2/A962:	22 26 02 C1	JSL $C10226
C2/A966:	68         	PLA
C2/A967:	3A         	DEC
C2/A968:	D0 F7      	BNE $A961      ; -9
C2/A96A:	60         	RTS

; Part of Kefka Death animation handling
; Called from C1/91D7.
C2/A96B:	E6 9A      	INC $9A
C2/A96D:	EE 8B 62   	INC $628B
C2/A970:	A2 FF FF   	LDX #$FFFF     ; -1
C2/A973:	8E 01 40   	STX $4001
C2/A976:	8E 03 40   	STX $4003
C2/A979:	A9 01      	LDA #$01       ; 1
C2/A97B:	8D EE EC   	STA $ECEE
C2/A97E:	EE 0C 7B   	INC $7B0C
C2/A981:	A9 16      	LDA #$16       ; 22
C2/A983:	8D 8D 89   	STA $898D      ; Something about which layers to show
C2/A986:	7B         	TDC            ; A = 0
C2/A987:	AA         	TAX            ; X = 0
C2/A988:	BD 00 7F   	LDA $7F00,X    ; Copy palette 8 to palette 3
C2/A98B:	9D 60 7E   	STA $7E60,X
C2/A98E:	E8         	INX
C2/A98F:	E0 20 00   	CPX #$0020     ; 32
C2/A992:	D0 F4      	BNE $A988      ; -12
C2/A994:	7B         	TDC            ; A = 0
C2/A995:	AA         	TAX            ; X = 0
C2/A996:	8B         	PHB
C2/A997:	A9 7F      	LDA #$7F
C2/A999:	48         	PHA
C2/A99A:	AB         	PLB            ; Data bank register now points to bank $7F
C2/A99B:	C2 20      	REP #$20       ; 16-bit A
C2/A99D:	9E 00 C4   	STZ $C400,X
C2/A9A0:	E8      	INX
C2/A9A1:	E8      	INX
C2/A9A2:	E0 00 10   	CPX #$1000     ; 4,096
C2/A9A5:	D0 F6      	BNE $A99D      ; -10
C2/A9A7:	7B         	TDC            ; A = 0
C2/A9A8:	AA         	TAX            ; X = 0
C2/A9A9:	A9 00 2C   	LDA #$2C00     ; 11,264
C2/A9AC:	85 12      	STA $12
C2/A9AE:	A9 10 00   	LDA #$0010     ; 16
C2/A9B1:	85 10      	STA $10
C2/A9B3:	A5 12      	LDA $12
C2/A9B5:	9D 00 C4   	STA $C400,X
C2/A9B8:	E8      	INX
C2/A9B9:	E8      	INX
C2/A9BA:	1A         	INC
C2/A9BB:	C6 10      	DEC $10
C2/A9BD:	D0 F6      	BNE $A9B5      ; -10
C2/A9BF:	85 12      	STA $12
C2/A9C1:	8A         	TXA
C2/A9C2:	18         	CLC
C2/A9C3:	69 20 00   	ADC #$0020     ; 32
C2/A9C6:	AA         	TAX
C2/A9C7:	E0 00 04   	CPX #$0400     ; 1,024
C2/A9CA:	D0 E2      	BNE $A9AE      ; -30
C2/A9CC:	A9 F0 FF   	LDA #$FFF0     ; -16
C2/A9CF:	8F B4 64 7E	STA $7E64B4    ; Battle info window X-offset
C2/A9D3:	8F 16 7B 7E	STA $7E7B16
C2/A9D7:	8F B6 64 7E	STA $7E64B6    ; Battle info window Y-offset
C2/A9DB:	8F 18 7B 7E	STA $7E7B18
C2/A9DF:	7B         	TDC
C2/A9E0:	8F 1D 7B 7E	STA $7E7B1D
C2/A9E4:	8F 1F 7B 7E	STA $7E7B1F
C2/A9E8:	E2 20      	SEP #$20       ; 8-bit A
C2/A9EA:	AB         	PLB
C2/A9EB:	A2 00 10   	LDX #$1000     ; 4,096
C2/A9EE:	86 10      	STX $10
C2/A9F0:	A2 00 C4   	LDX #$C400     ; -15,360
C2/A9F3:	A0 00 48   	LDY #$4800     ; 18,432
C2/A9F6:	A9 7F      	LDA #$7F
C2/A9F8:	22 89 19 C1	JSL $C11989
C2/A9FC:	AD 6F 89   	LDA $896F
C2/A9FF:	29 AF      	AND #$AF
C2/AA01:	8D 6F 89   	STA $896F      ; TRB would've worked...
C2/AA04:	A9 4A      	LDA #$4A       ; 74
C2/AA06:	8D 71 89   	STA $8971
C2/AA09:	7B         	TDC            ; A = 0
C2/AA0A:	AA         	TAX            ; X = 0
C2/AA0B:	8E EC EC   	STX $ECEC
C2/AA0E:	8B         	PHB
C2/AA0F:	A9 7F      	LDA #$7F
C2/AA11:	48         	PHA
C2/AA12:	AB         	PLB
C2/AA13:	C2 20      	REP #$20       ; 16-bit A
C2/AA15:	9E 00 C4   	STZ $C400,X
C2/AA18:	E8         	INX
C2/AA19:	E8         	INX
C2/AA1A:	E0 00 20   	CPX #$2000     ; 8,192
C2/AA1D:	D0 F6      	BNE $AA15      ; -10
C2/AA1F:	7B         	TDC
C2/AA20:	E2 20      	SEP #$20       ; 8-bit A
C2/AA22:	AB         	PLB
C2/AA23:	7B         	TDC            ; A = 0
C2/AA24:	AA         	TAX            ; X = 0
C2/AA25:	9D BC EC   	STA $ECBC,X
C2/AA28:	9E CC EC   	STZ $ECCC,X
C2/AA2B:	18         	CLC
C2/AA2C:	69 04      	ADC #$04       ; 4
C2/AA2E:	E8         	INX
C2/AA2F:	E0 10 00   	CPX #$0010     ; 16
C2/AA32:	D0 F1      	BNE $AA25      ; -15
C2/AA34:	A9 08      	LDA #$08       ; 8
C2/AA36:	20 61 A9   	JSR $A961      ; Call C1/022A 8 times
C2/AA39:	A9 17      	LDA #$17       ; 23
C2/AA3B:	8D 8D 89   	STA $898D
C2/AA3E:	22 26 02 C1	JSL $C10226
C2/AA42:	20 42 A9   	JSR $A942
C2/AA45:	20 F8 AA   	JSR $AAF8
C2/AA48:	22 26 02 C1	JSL $C10226
C2/AA4C:	20 F8 AA   	JSR $AAF8
C2/AA4F:	22 26 02 C1	JSL $C10226
C2/AA53:	20 42 A9   	JSR $A942
C2/AA56:	20 F8 AA   	JSR $AAF8
C2/AA59:	22 26 02 C1	JSL $C10226
C2/AA5D:	20 F8 AA   	JSR $AAF8
C2/AA60:	A2 3F CC   	LDX #$CC3F     ; -13,249
C2/AA63:	86 10      	STX $10
C2/AA65:	A2 00 E2   	LDX #$E200     ; -7,680
C2/AA68:	86 12      	STX $12
C2/AA6A:	A9 7F      	LDA #$7F       ; 127
C2/AA6C:	85 14      	STA $14
C2/AA6E:	7B         	TDC            ; A = 0
C2/AA6F:	AA         	TAX            ; X = 0
C2/AA70:	BD BC EC   	LDA $ECBC,X
C2/AA73:	F0 05      	BEQ $AA7A      ; +5
C2/AA75:	DE BC EC   	DEC $ECBC,X
C2/AA78:	80 21      	BRA $AA9B      ; +33
C2/AA7A:	BD CC EC   	LDA $ECCC,X
C2/AA7D:	C9 18      	CMP #$18       ; 24
C2/AA7F:	B0 1A      	BCS $AA9B      ; +26
C2/AA81:	0A         	ASL
C2/AA82:	DA         	PHX
C2/AA83:	AA         	TAX
C2/AA84:	7B         	TDC            ; A = 0
C2/AA85:	A8         	TAY            ; Y = 0
C2/AA86:	BF D2 A8 C2	LDA $C2A8D2,X
C2/AA8A:	99 DC EC   	STA $ECDC,Y
C2/AA8D:	E8         	INX
C2/AA8E:	C8         	INY
C2/AA8F:	C0 10 00   	CPY #$0010     ; 16
C2/AA92:	D0 F2      	BNE $AA86      ; -14
C2/AA94:	FA         	PLX
C2/AA95:	20 5A AB   	JSR $AB5A
C2/AA98:	FE CC EC   	INC $ECCC,X
C2/AA9B:	C2 20      	REP #$20       ; 16-bit A
C2/AA9D:	A5 10      	LDA $10
C2/AA9F:	38         	SEC
C2/AAA0:	E9 00 02   	SBC #$0200     ; 512
C2/AAA3:	85 10      	STA $10
C2/AAA5:	A5 12      	LDA $12
C2/AAA7:	38         	SEC
C2/AAA8:	E9 00 02   	SBC #$0200     ; 512
C2/AAAB:	85 12      	STA $12
C2/AAAD:	7B         	TDC
C2/AAAE:	E2 20      	SEP #$20       ; 8-bit A
C2/AAB0:	E8         	INX
C2/AAB1:	E0 10 00   	CPX #$0010     ; 16
C2/AAB4:	D0 BA      	BNE $AA70      ; -70
C2/AAB6:	AE EC EC   	LDX $ECEC
C2/AAB9:	E8         	INX
C2/AABA:	8E EC EC   	STX $ECEC
C2/AABD:	E0 4A 00   	CPX #$004A     ; 74
C2/AAC0:	D0 19      	BNE $AADB      ; +25
C2/AAC2:	DA         	PHX
C2/AAC3:	EE ED E9   	INC $E9ED
C2/AAC6:	A9 82      	LDA #$82       ; -126
C2/AAC8:	8D 00 13   	STA $1300      ; Instrument set for the current song
C2/AACB:	A9 C0      	LDA #$C0       ; -64
C2/AACD:	8D 01 13   	STA $1301      ; Play song #$C0
C2/AAD0:	9C 02 13   	STZ $1302      ; Set volume to 0
C2/AAD3:	22 04 00 C5	JSL $C50004
C2/AAD7:	9C ED E9   	STZ $E9ED      ; Mute variable
C2/AADA:	FA         	PLX
C2/AADB:	E0 5A 00   	CPX #$005A     ; 90
C2/AADE:	F0 03      	BEQ $AAE3      ; +3
C2/AAE0:	4C 3E AA   	JMP $AA3E

C2/AAE3:	A9 80      	LDA #$80       ; -128
C2/AAE5:	20 61 A9   	JSR $A961      ; Call C1/022A 128 times
C2/AAE8:	AD F9 E9   	LDA $E9F9      ; Screen brightness
C2/AAEB:	F0 0A      	BEQ $AAF7      ; If 0, return
C2/AAED:	A9 10      	LDA #$10       ; 16
C2/AAEF:	20 61 A9   	JSR $A961      ; Call C1/022A 16 times
C2/AAF2:	CE F9 E9   	DEC $E9F9      ; Fade out/dim?
C2/AAF5:	D0 F6      	BNE $AAED      ; -10
C2/AAF7:	6B         	RTL

; Called from C2/AA45, C2/AA4C, C2/AA56 and C2/AA5D.
C2/AAF8:	8B         	PHB
C2/AAF9:	A9 7F      	LDA #$7F
C2/AAFB:	48         	PHA
C2/AAFC:	AB         	PLB            ; Data bank register now points to bank $7F
C2/AAFD:	C2 20      	REP #$20       ; 16-bit A
C2/AAFF:	7B         	TDC            ; A = 0
C2/AB00:	AA         	TAX            ; X = 0
C2/AB01:	64 18      	STZ $18
C2/AB03:	A9 00 E2   	LDA #$E200
C2/AB06:	18         	CLC
C2/AB07:	65 18      	ADC $18
C2/AB09:	85 10      	STA $10
C2/AB0B:	A9 0E E0   	LDA #$E00E
C2/AB0E:	18         	CLC
C2/AB0F:	65 18      	ADC $18
C2/AB11:	85 14      	STA $14
C2/AB13:	A9 10 00   	LDA #$0010     ; 16
C2/AB16:	85 16      	STA $16
C2/AB18:	A5 10      	LDA $10
C2/AB1A:	1A         	INC
C2/AB1B:	1A         	INC
C2/AB1C:	85 12      	STA $12
C2/AB1E:	A0 1C 00   	LDY #$001C     ; 28
C2/AB21:	B1 10      	LDA ($10),Y    ; ($E21C = $E21E, $E21A = $E21C etc.)
C2/AB23:	91 12      	STA ($12),Y
C2/AB25:	88         	DEY
C2/AB26:	88         	DEY
C2/AB27:	10 F8      	BPL $AB21      ; -8
C2/AB29:	B2 14      	LDA ($14)      ; ($E200 = $E00E)
C2/AB2B:	92 10      	STA ($10)
C2/AB2D:	A0 10 00   	LDY #$0010     ; 16
C2/AB30:	B1 14      	LDA ($14),Y    ; ($E210 = $E01E)
C2/AB32:	91 10      	STA ($10),Y
C2/AB34:	A5 10      	LDA $10
C2/AB36:	38         	SEC
C2/AB37:	E9 00 02   	SBC #$0200     ; 512
C2/AB3A:	85 10      	STA $10
C2/AB3C:	A5 14      	LDA $14
C2/AB3E:	38         	SEC
C2/AB3F:	E9 00 02   	SBC #$0200     ; 512
C2/AB42:	85 14      	STA $14
C2/AB44:	C6 16      	DEC $16
C2/AB46:	D0 D0      	BNE $AB18      ; Shift back 512 bytes and repeat, 16 times in total
C2/AB48:	A5 18      	LDA $18
C2/AB4A:	18         	CLC
C2/AB4B:	69 20 00   	ADC #$0020     ; 32
C2/AB4E:	85 18      	STA $18
C2/AB50:	C9 00 02   	CMP #$0200     ; 512
C2/AB53:	D0 AE      	BNE $AB03      ; Repeat the whole thing 16 times, but shift forward 32 bytes each time
C2/AB55:	7B         	TDC
C2/AB56:	E2 20      	SEP #$20       ; 8-bit A
C2/AB58:	AB         	PLB
C2/AB59:	60         	RTS

; Called from C2/AA95.
C2/AB5A:	DA         	PHX
C2/AB5B:	7B         	TDC            ; A = 0
C2/AB5C:	AA         	TAX            ; X = 0
C2/AB5D:	A8         	TAY            ; Y = 0
C2/AB5E:	C2 20      	REP #$20       ; 16-bit A
C2/AB60:	BD DC EC   	LDA $ECDC,X
C2/AB63:	49 FF FF   	EOR #$FFFF
C2/AB66:	85 1A      	STA $1A
C2/AB68:	B1 10      	LDA ($10),Y
C2/AB6A:	25 1A      	AND $1A
C2/AB6C:	17 12      	ORA [$12],Y
C2/AB6E:	97 12      	STA [$12],Y
C2/AB70:	B1 10      	LDA ($10),Y
C2/AB72:	3D DC EC   	AND $ECDC,X
C2/AB75:	91 10      	STA ($10),Y
C2/AB77:	E8         	INX
C2/AB78:	E8         	INX
C2/AB79:	8A         	TXA
C2/AB7A:	29 0F 00   	AND #$000F
C2/AB7D:	AA         	TAX
C2/AB7E:	C8         	INY
C2/AB7F:	C8         	INY
C2/AB80:	C0 00 02   	CPY #$0200     ; 512
C2/AB83:	D0 DB      	BNE $AB60      ; -37
C2/AB85:	7B         	TDC
C2/AB86:	E2 20      	SEP #$20       ; 8-bit A
C2/AB88:	FA         	PLX
C2/AB89:	60         	RTS

; A few of the instructions used here are used multiple times throughout this section. It would be more efficient to make a separate function out of them.
C2/AB8A:	8B         	PHB            ; store bank
C2/AB8B:	7B         	TDC            ; zero A/B
C2/AB8C:	48         	PHA            ; push to stack
C2/AB8D:	AB         	PLB            ; set bank to $00 (for registers)
C2/AB8E:	A9 7E      	LDA #$7E       ; source buffer bank
C2/AB90:	8D 74 43   	STA $4374      ; set DMA-7 source bank

; Update "MP/MaxMP" numbers
C2/AB93:	A2 B7 6A   	LDX #$6AB7     ; 
C2/AB96:	8E 16 21   	STX $2116      ; set VRAM address
C2/AB99:	A0 0E 00   	LDY #$000E     ; transfer size
C2/AB9C:	8C 75 43   	STY $4375      ; set DMA-7 transfer size
C2/AB9F:	A2 15 5D   	LDX #$5D15     ;
C2/ABA2:	8E 72 43   	STX $4372      ; set DMA-7 source address
C2/ABA5:	A9 80      	LDA #$80       ; DMA-7 enabled flag
C2/ABA7:	8D 0D 42   	STA $420B      ; set ^ to execute transfer

; Update "MP Needed" numbers
C2/ABAA:	A2 F7 6A   	LDX #$6AF7     ;
C2/ABAD:	8E 16 21   	STX $2116      ; set VRAM address
C2/ABB0:	8C 75 43   	STY $4375      ; set DMA-7 transfer size
C2/ABB3:	A2 23 5D   	LDX #$5D23     ;
C2/ABB6:	8E 72 43   	STX $4372      ; set DMA-7 source address
C2/ABB9:	8D 0B 42   	STA $420B      ; execute DMA-7 transfer

C2/ABBC:	AF 81 7B 7E	LDA $7E7B81    ; Bushido gauge needs update
C2/ABC0:	D0 03      	BNE $ABC5      ; branch if ^
C2/ABC2:	4C 4A AC   	JMP $AC4A      ; else, just update ATB gauge/maxHP

; Bushido gauge VRAM update

C2/ABC5:	C2 20      	REP #$20       ; 16-bit A
C2/ABC7:	A9 24 7A   	LDA #$7A24
C2/ABCA:	8D 16 21   	STA $2116      ; VRAM address
C2/ABCD:	AF D9 5D 7E	LDA $7E5DD9    ; Bushido background menu data [?]
C2/ABD1:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABD4:	AF DB 5D 7E	LDA $7E5DDB
C2/ABD8:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABDB:	AF DD 5D 7E	LDA $7E5DDD
C2/ABDF:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABE2:	AF DF 5D 7E	LDA $7E5DDF
C2/ABE6:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABE9:	AF E1 5D 7E	LDA $7E5DE1
C2/ABED:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABF0:	AF E3 5D 7E	LDA $7E5DE3
C2/ABF4:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABF7:	AF E5 5D 7E	LDA $7E5DE5
C2/ABFB:	8D 18 21   	STA $2118      ; write word to VRAM
C2/ABFE:	AF E7 5D 7E	LDA $7E5DE7
C2/AC02:	8D 18 21   	STA $2118      ; write word to VRAM

C2/AC05:	A9 24 7A   	LDA #$7A64
C2/AC08:	8D 16 21   	STA $2116      ; set VRAM address
C2/AC0B:	AF 73 7A 7E	LDA $7E7A73    ; Bushido bar graphics [?]
C2/AC0F:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC12:	AF 75 7A 7E	LDA $7E7A75    ; Bushido bar graphics
C2/AC16:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC19:	AF 77 7A 7E	LDA $7E7A77    ; Bushido bar graphics
C2/AC1D:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC20:	AF 79 7A 7E	LDA $7E7A79    ; Bushido bar graphics
C2/AC24:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC27:	AF 7B 7A 7E	LDA $7E7A7B    ; Bushido bar graphics
C2/AC2B:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC2E:	AF 7D 7A 7E	LDA $7E7A7D    ; Bushido bar graphics
C2/AC32:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC35:	AF 7F 7A 7E	LDA $7E7A7F    ; Bushido bar graphics
C2/AC39:	8D 18 21   	STA $2118      ; write word to VRAM
C2/AC3C:	AF 81 7A 7E	LDA $7E7A81    ; Bushido bar graphics
C2/AC40:	8D 18 21   	STA $2118      ; write word to VRAM

C2/AC43:	7B         	TDC            ; zero A/B
C2/AC44:	E2 20      	SEP #$20       ; 8-bit A
C2/AC46:	8F 81 7B 7E	STA $7E7B81    ; clear "Bushido graphics update needed"

; VRAM transfer for character's ATB gauges (or MaxHP)

C2/AC4A:	A9 01      	LDA #$01       ; "Two registers, write once"
C2/AC4C:	8D 70 43   	STA $4370      ; set DMA-7 transfer mode ^
C2/AC4F:	A9 18      	LDA #$18       ; "VRAM register" ($2118)
C2/AC51:	8D 71 43   	STA $4371      ; set DMA-7 destination
C2/AC54:	A9 7E      	LDA #$7E       ; RAM bank
C2/AC56:	8D 73 43   	STA $4374      ; DMA-7 source bank

C2/AC59:	A0 0C 00   	LDY #$000C     ; transfer size (for each of 3 chunks)
C2/AC5C:	AF 9B 62 7E	LDA $7E629B	   ; menu animation frames since last update
C2/AC60:	F0 0C      	BEQ $AC6E      ; branch if no battle menu animation since

C2/AC62:	7B         	TDC            ; zero A/B
C2/AC63:	8F 9B 62 7E	STA $7E629B    ; reset menu animation frames since last
C2/AC67:	A5 98      	LDA $98        ; frame counter
C2/AC69:	4A         	LSR            ; / 2
C2/AC6A:	29 03      	AND #$03       ; reduce to 0-3 (character slot)
C2/AC6C:	80 07      	BRA $AC75      ; branch

C2/AC6E:	AF 9A 7B 7E	LDA $7E7B9A    ; which character gets next gauge update
C2/AC72:	3A         	DEC            ; decrement
C2/AC73:	29 03      	AND #$03       ; reduce to 0-3 (character slot)

C2/AC75:	0A         	ASL            ; x2
C2/AC76:	AA         	TAX            ; index it
C2/AC77:	A9 80      	LDA #$80       ; DMA-7 register enable flag
C2/AC79:	7C 7C AC   	JMP ($AC7C,X)  ; execute DMA-7 transfer for character

; Jump table by character slot
C2/AC7C:	84AC
C2/AC7E:	BDAC
C2/AC80:	F6AC
C2/AC82:	2FAD

; Character slot 0 Gauge/MaxHP update

; Gauge/MaxHP for basic menu
C2/AC84:	A2 39 79   	LDX #$7839     ;
C2/AC87:	8E 16 21   	STX $2116      ; set VRAM address
C2/AC8A:	A2 51 5C   	LDX #$5C51     ;
C2/AC8D:	8E 72 43   	STX $4372      ; set DMA-7 source
C2/AC90:	8C 75 43   	STY $4375      ; set transfer size
C2/AC93:	8D 0B 42   	STA $420B      ; execute DMA-7 transfer

; Gauge/MaxHP when swapping menus [?]
C2/AC96:	A2 39 79   	LDX #$7939     ;
C2/AC99:	8E 16 21   	STX $2116      ; set VRAM address
C2/AC9C:	A2 51 5C   	LDX #$5C51     ;
C2/AC9F:	8E 72 43   	STX $4372      ; set DMA-7 source
C2/ACA2:	8C 75 43   	STY $4375      ; set transfer size
C2/ACA5:	8D 0B 42   	STA $420B      ; execute DMA-7 transfer

; Gauge/MaxHP for targeting menu
C2/ACA8:	A2 39 7A   	LDX #$7A39     ;
C2/ACAB:	8E 16 21   	STX $2116      ; set VRAM address
C2/ACAE:	A2 51 5C   	LDX #$5C51     ;
C2/ACB1:	8E 72 43   	STX $4372      ; set DMA-7 source
C2/ACB4:	8C 75 43   	STY $4375      ; set transfer size
C2/ACB7:	8D 0B 42   	STA $420B      ; execute DMA-7 transfer
C2/ACBA:	4C 65 AD   	JMP $AD65

; Character slot 1 Gauge/MaxHP update

C2/ACBD:	A2 79 78   	LDX #$7879     ;
C2/ACC0:	8E 16 21   	STX $2116      ; set VRAM address
C2/ACC3:	A2 69 5C   	LDX #$5C69     ;
C2/ACC6:	8E 72 43   	STX $4372      ; set DMA-7 source
C2/ACC9:	8C 75 43   	STY $4375      ; set transfer size
C2/ACCC:	8D 0B 42   	STA $420B      ; execute DMA-7 transfer

C2/ACCF:	A2 79 79   	LDX #$7979     ; 31,097
C2/ACD2:	8E 16 21   	STX $2116
C2/ACD5:	A2 69 5C   	LDX #$5C69     ; 23,657
C2/ACD8:	8E 72 43   	STX $4372
C2/ACDB:	8C 75 43   	STY $4375
C2/ACDE:	8D 0B 42   	STA $420B

C2/ACE1:	A2 79 7A   	LDX #$7A79     ; 31,353
C2/ACE4:	8E 16 21   	STX $2116
C2/ACE7:	A2 69 5C   	LDX #$5C69     ; 23,657
C2/ACEA:	8E 72 43   	STX $4372
C2/ACED:	8C 75 43   	STY $4375
C2/ACF0:	8D 0B 42   	STA $420B

C2/ACF3:	4C 65 AD   	JMP $AD65      ; BRA would've worked...

; Character slot 2 Gauge/MaxHP update

C2/ACF6:	A2 B9 78   	LDX #$78B9     ; 30,905
C2/ACF9:	8E 16 21   	STX $2116
C2/ACFC:	A2 81 5C   	LDX #$5C81     ; 23,681
C2/ACFF:	8E 72 43   	STX $4372
C2/AD02:	8C 75 43   	STY $4375
C2/AD05:	8D 0B 42   	STA $420B

C2/AD08:	A2 B9 79   	LDX #$79B9     ; 31,161
C2/AD0B:	8E 16 21   	STX $2116
C2/AD0E:	A2 81 5C   	LDX #$5C81     ; 23,681
C2/AD11:	8E 72 43   	STX $4372
C2/AD14:	8C 75 43   	STY $4375
C2/AD17:	8D 0B 42   	STA $420B

C2/AD1A:	A2 B9 7A   	LDX #$7AB9     ; 31,417
C2/AD1D:	8E 16 21   	STX $2116
C2/AD20:	A2 81 5C   	LDX #$5C81     ; 23,681
C2/AD23:	8E 72 43   	STX $4372
C2/AD26:	8C 75 43   	STY $4375
C2/AD29:	8D 0B 42   	STA $420B
C2/AD2C:	4C 65 AD   	JMP $AD65      ; BRA would've worked...

; Character slot 3 Gauge/MaxHP update

C2/AD2F:	A2 F9 78   	LDX #$78F9
C2/AD32:	8E 16 21   	STX $2116
C2/AD35:	A2 99 5C   	LDX #$5C99
C2/AD38:	8E 72 43   	STX $4372
C2/AD3B:	8C 75 43   	STY $4375
C2/AD3E:	8D 0B 42   	STA $420B

C2/AD41:	A2 F9 79   	LDX #$79F9
C2/AD44:	8E 16 21   	STX $2116
C2/AD47:	A2 99 5C   	LDX #$5C99
C2/AD4A:	8E 72 43   	STX $4372
C2/AD4D:	8C 75 43   	STY $4375
C2/AD50:	8D 0B 42   	STA $420B

C2/AD53:	A2 F9 7A   	LDX #$7AF9
C2/AD56:	8E 16 21   	STX $2116
C2/AD59:	A2 99 5C   	LDX #$5C99
C2/AD5C:	8E 72 43   	STX $4372
C2/AD5F:	8C 75 43   	STY $4375
C2/AD62:	8D 0B 42   	STA $420B

; Finish character VRAM update

C2/AD65:	AB         	PLB
C2/AD66:	E2 10      	SEP #$10       ; 8-bit X & Y
C2/AD68:	AD 9C 7B   	LDA $7B9C
C2/AD6B:	F0 49      	BEQ $ADB6      ; +73
C2/AD6D:	9C 9C 7B   	STZ $7B9C
C2/AD70:	AD 9D 7B   	LDA $7B9D
C2/AD73:	C9 FF      	CMP #$FF       ; -1
C2/AD75:	F0 3F      	BEQ $ADB6      ; +63
C2/AD77:	0A         	ASL
C2/AD78:	AA         	TAX
C2/AD79:	C2 20      	REP #$20       ; 16-bit A
C2/AD7B:	BF D9 AD C2	LDA $C2ADD9,X
C2/AD7F:	A8         	TAY
C2/AD80:	8A         	TXA
C2/AD81:	0A         	ASL
C2/AD82:	0A         	ASL
C2/AD83:	AA         	TAX
C2/AD84:	A9 03 00   	LDA #$0003     ; 3
C2/AD87:	85 36      	STA $36
C2/AD89:	BF B9 AD C2	LDA $C2ADB9,X
C2/AD8D:	8F 16 21 00	STA $002116
C2/AD91:	B9 0D 5C   	LDA $5C0D,Y
C2/AD94:	8F 16 21 00	STA $002118
C2/AD98:	B9 0F 5C   	LDA $5C0F,Y
C2/AD9B:	8F 16 21 00	STA $002118
C2/AD9F:	B9 11 5C   	LDA $5C11,Y
C2/ADA2:	8F 16 21 00	STA $002118
C2/ADA6:	B9 13 5C   	LDA $5C13,Y
C2/ADA9:	8F 16 21 00	STA $002118
C2/ADAD:	E8         	INX
C2/ADAE:	E8         	INX
C2/ADAF:	C6 36      	DEC $36
C2/ADB1:	D0 D6      	BNE $AD89      ; -42
C2/ADB3:	7B         	TDC
C2/ADB4:	E2 20      	SEP #$20       ; 8-bit A
C2/ADB6:	C2 10      	REP #$10       ; 16-bit X & Y
C2/ADB8:	6B         	RTL

C2/ADB9:	3578
C2/ADBB:	3579
C2/ADBD:	357A
C2/ADBF:	0000
C2/ADC1:	7578
C2/ADC3:	7579
C2/ADC5:	757A
C2/ADC7:	0000
C2/ADC9:	B578
C2/ADCB:	B579
C2/ADCD:	B57A
C2/ADCF:	0000
C2/ADD1:	F578
C2/ADD3:	F579
C2/ADD5:	F57A
C2/ADD7:	0000

C2/ADD9:	0000
C2/ADDB:	1000
C2/ADDD:	2000
C2/ADDF:	3000

; Status names displayed when selecting a target
C2/ADE1:	96A8AEA79DFFFFFFFFFF  ; ("Wound")
C2/ADEB:	8F9EADABA29FB2FFFFFF  ; ("Petrify")
C2/ADF5:	88A6A9FFFFFFFFFFFFFF  ; ("Imp")
C2/ADFF:	82A59E9AABFFFFFFFFFF  ; ("Clear")
C2/AE09:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Magitek)
C2/AE13:	8FA8A2ACA8A7FFFFFFFF  ; ("Poison")
C2/AE1D:	99A8A69BA29EFFFFFFFF  ; ("Zombie")
C2/AE27:	839AABA4FFFFFFFFFFFF  ; ("Dark")
C2/AE31:	8FACB29CA19EFFFFFFFF  ; ("Psyche")(wtf?)
C2/AE3B:	929EA2B3AEAB9EFFFFFF  ; ("Seizure")
C2/AE45:	8CAE9D9DA59E9DFFFFFF  ; ("Muddled")
C2/AE4F:	819EABAC9EABA4FFFFFF  ; ("Berserk")
C2/AE59:	8CAEAD9EFFFFFFFFFFFF  ; ("Mute")
C2/AE63:	88A69AA09EFFFFFFFFFF  ; ("Image")
C2/AE6D:	8D9E9AABFE859AAD9AA5  ; ("Near Fatal")
C2/AE77:	82A8A79D9EA6A79E9DFF  ; ("Condemned")
C2/AE81:	919E9FA59E9CADFFFFFF  ; ("Reflect")
C2/AE8B:	929A9F9EFFFFFFFFFFFF  ; ("Safe")
C2/AE95:	92A19EA5A5FFFFFFFFFF  ; ("Shell")
C2/AE9F:	92ADA8A9FFFFFFFFFFFF  ; ("Stop")
C2/AEA9:	879AACAD9EFFFFFFFFFF  ; ("Haste")
C2/AEB3:	92A5A8B0FFFFFFFFFFFF  ; ("Slow")
C2/AEBD:	919EA09EA7FFFFFFFFFF  ; ("Regen")
C2/AEC7:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Dance)
C2/AED1:	85A5A89AADFFFFFFFFFF  ; ("Float")
C2/AEDB:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Interceptor)
C2/AEE5:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Hide)
C2/AEEF:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Control)
C2/AEF9:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Morph)
C2/AF03:	8BA29F9EFEB7FFFFFFFF  ; ("Life3")
C2/AF0D:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(Freeze)
C2/AF17:	FFFFFFFFFFFFFFFFFFFF  ; (" ")(If nothing else prevails)

; Note that the highest-listed status takes precedence. Life 3, for instance,
; Is never listed while Shadow is under the protection of Interceptor.

; Animation script command 80 85.
C2/AF21:	A4 5B      	LDY $5B        ; Script pointer
C2/AF23:	C8         	INY
C2/AF24:	84 5B      	STY $5B
C2/AF26:	A7 5B      	LDA [$5B]
C2/AF28:	F0 21      	BEQ $AF4B      ; +33
C2/AF2A:	C9 01      	CMP #$01       ; 1
C2/AF2C:	F0 07      	BEQ $AF35      ; +7
C2/AF2E:	20 E6 BB   	JSR $BBE6
C2/AF31:	29 07      	AND #$07
C2/AF33:	D0 15      	BNE $AF4A      ; +21
C2/AF35:	C2 20      	REP #$20       ; 16-bit A
C2/AF37:	7B         	TDC            ; A = 0
C2/AF38:	AA         	TAX            ; X = 0
C2/AF39:	BF E8 E2 C2	LDA $C2E2E8,X
C2/AF3D:	9D A0 7E   	STA $7EA0,X    ; Palettes 5-7
C2/AF40:	E8         	INX
C2/AF41:	E8         	INX
C2/AF42:	E0 60 00   	CPX #$0060     ; 96
C2/AF45:	D0 F2      	BNE $AF39      ; -14
C2/AF47:	7B         	TDC
C2/AF48:	E2 20      	SEP #$20       ; 8-bit A
C2/AF4A:	6B         	RTL

C2/AF4B:	C2 20      	REP #$20       ; 16-bit A
C2/AF4D:	7B         	TDC            ; A = 0
C2/AF4E:	AA         	TAX            ; X = 0
C2/AF4F:	BF 88 E2 C2	LDA $C2E288,X
C2/AF53:	9D A0 7E   	STA $7EA0,X    ; Palettes 5-7
C2/AF56:	E8         	INX
C2/AF57:	E8         	INX
C2/AF58:	E0 60 00   	CPX #$0060     ; 96
C2/AF5B:	D0 F2      	BNE $AF4F      ; -14
C2/AF5D:	7B         	TDC
C2/AF5E:	E2 20      	SEP #$20       ; 8-bit A
C2/AF60:	6B         	RTL

; Animation script command 80 83.
C2/AF61:	7B         	TDC            ; A = 0
C2/AF62:	AA         	TAX            ; X = 0
C2/AF63:	9E 57 80   	STZ $8057,X
C2/AF66:	E8         	INX
C2/AF67:	E0 0C 00   	CPX #$000C     ; 12
C2/AF6A:	D0 F7      	BNE $AF63      ; -9
C2/AF6C:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/AF6F:	BD 39 6A   	LDA $6A39,X    ; Target's ID
C2/AF72:	10 22      	BPL $AF96      ; Exit if target is a party member
C2/AF74:	29 0F      	AND #$0F
C2/AF76:	38         	SEC
C2/AF77:	E9 04      	SBC #$04       ; 4
C2/AF79:	0A         	ASL
C2/AF7A:	AA         	TAX
C2/AF7B:	C2 20      	REP #$20       ; 16-bit A
C2/AF7D:	A9 F8 FF   	LDA #$FFF8     ; -8
C2/AF80:	9D 57 80   	STA $8057,X
C2/AF83:	BD CF 80   	LDA $80CF,X    ; Enemy's Y-position
C2/AF86:	8D B4 EC   	STA $ECB4
C2/AF89:	38         	SEC
C2/AF8A:	E9 00 01   	SBC #$0100     ; 256
C2/AF8D:	9D CF 80   	STA $80CF,X    ; Adjust by 256... units... pixels?
C2/AF90:	8E B6 EC   	STX $ECB6
C2/AF93:	7B         	TDC
C2/AF94:	E2 20      	SEP #$20       ; 8-bit A
C2/AF96:	6B         	RTL

C2/AF97:	02082080
C2/AF9B:	030C30C0
C2/AF9F:	01041040

; Called from C1/3B0B.
C2/AFA3:	7B         	TDC            ; A = 0
C2/AFA4:	A8         	TAY            ; Y = 0
C2/AFA5:	64 10      	STZ $10
C2/AFA7:	A5 10      	LDA $10
C2/AFA9:	4A         	LSR
C2/AFAA:	4A         	LSR
C2/AFAB:	99 7F A1   	STA $A17F,Y
C2/AFAE:	99 80 A1   	STA $A180,Y
C2/AFB1:	99 81 A1   	STA $A181,Y
C2/AFB4:	99 82 A1   	STA $A182,Y
C2/AFB7:	A5 10      	LDA $10
C2/AFB9:	29 03      	AND #$03
C2/AFBB:	AA         	TAX
C2/AFBC:	BF 97 AF C2	LDA $C2AF97,X
C2/AFC0:	99 7F A3   	STA $A37F,Y
C2/AFC3:	99 80 A3   	STA $A380,Y
C2/AFC6:	99 81 A3   	STA $A381,Y
C2/AFC9:	99 82 A3   	STA $A382,Y
C2/AFCC:	BF 9B AF C2	LDA $C2AF9B,X
C2/AFD0:	99 7F A5   	STA $A57F,Y
C2/AFD3:	99 80 A5   	STA $A580,Y
C2/AFD6:	99 81 A5   	STA $A581,Y
C2/AFD9:	99 82 A5   	STA $A582,Y
C2/AFDC:	BF 9F AF C2	LDA $C2AF9F,X
C2/AFE0:	99 7F A7   	STA $A77F,Y
C2/AFE3:	99 80 A7   	STA $A780,Y
C2/AFE6:	99 81 A7   	STA $A781,Y
C2/AFE9:	99 82 A7   	STA $A782,Y
C2/AFEC:	E6 10      	INC $10
C2/AFEE:	C8         	INY
C2/AFEF:	C8         	INY
C2/AFF0:	C8         	INY
C2/AFF1:	C8         	INY
C2/AFF2:	C0 00 02   	CPY #$0200     ; 512
C2/AFF5:	D0 B0      	BNE $AFA7      ; -80
C2/AFF7:	6B         	RTL

; Animation script command 80 72.
C2/AFF8:	A6 5B      	LDX $5B        ; Script pointer
C2/AFFA:	E8         	INX
C2/AFFB:	86 5B      	STX $5B
C2/AFFD:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/B000:	BD 88 6F   	LDA $6F88,X
C2/B003:	10 01      	BPL $B006      ; +1
C2/B005:	6B         	RTL

C2/B006:	A7 5B      	LDA [$5B]
C2/B008:	C2 20      	REP #$20       ; 16-bit A
C2/B00A:	85 22      	STA $22
C2/B00C:	A5 5B      	LDA $5B
C2/B00E:	18         	CLC
C2/B00F:	65 22      	ADC $22
C2/B011:	85 5B      	STA $5B
C2/B013:	7B         	TDC
C2/B014:	E2 20      	SEP #$20       ; 8-bit A
C2/B016:	6B         	RTL

; Script animation command 80 74.
C2/B017:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/B01A:	BD 39 6A   	LDA $6A39,X    ; Target's ID
C2/B01D:	30 06      	BMI $B025      ; Branch if target is an enemy
C2/B01F:	A8         	TAY
C2/B020:	B9 AE 61   	LDA $61AE,Y    ; Will the party member casting this spell please step forward?
C2/B023:	F0 13      	BEQ $B038      ; No? OK, then we'll just branch
C2/B025:	A0 01 00   	LDY #$0001     ; 1
C2/B028:	B7 5B      	LDA [$5B],Y
C2/B02A:	C2 20      	REP #$20       ; 16-bit A
C2/B02C:	85 22      	STA $22
C2/B02E:	A5 5B      	LDA $5B
C2/B030:	18         	CLC
C2/B031:	65 22      	ADC $22
C2/B033:	85 5B      	STA $5B
C2/B035:	7B         	TDC
C2/B036:	E2 20      	SEP #$20       ; 8-bit A
C2/B038:	A6 5B      	LDX $5B        ; Increment script pointer
C2/B03A:	E8         	INX
C2/B03B:	86 5B      	STX $5B
C2/B03D:	6B         	RTL

; Animation script command 80 7D.
C2/B03E:	A6 5B      	LDX $5B        ; Increment script pointer
C2/B040:	E8         	INX
C2/B041:	86 5B      	STX $5B
C2/B043:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/B046:	AD 10 EC   	LDA $EC10
C2/B049:	D0 01      	BNE $B04C      ; +1
C2/B04B:	6B         	RTL

C2/B04C:	A7 5B      	LDA [$5B]
C2/B04E:	C2 20      	REP #$20       ; 16-bit A
C2/B050:	85 22      	STA $22
C2/B052:	A5 5B      	LDA $5B
C2/B054:	18         	CLC
C2/B055:	65 22      	ADC $22        ; Why not ADC $5B, hold the LDA?
C2/B057:	85 5B      	STA $5B
C2/B059:	7B         	TDC
C2/B05A:	E2 20      	SEP #$20       ; 8-bit A
C2/B05C:	6B         	RTL

; Palette data for death animation [???]
; Data called from C1/9418.
C2/B05D:	8C31
C2/B05F:	0104
C2/B061:	1F7C
C2/B063:	1D74
C2/B065:	1964
C2/B067:	175C
C2/B069:	1554
C2/B06B:	134C
C2/B06D:	1144
C2/B06F:	0F3C
C2/B071:	0D34
C2/B073:	0B2C
C2/B075:	0924
C2/B077:	071C
C2/B079:	0514
C2/B07B:	030C

; Palette information used with block animations, such as shields or Zephyr Cape.
C2/B07D:	000000001A0013000D00FE7F8003C001
C2/B08D:	00000000FE7F3A3795228B1DF2286E18
C2/B09D:	00000000FE7F3767714A8929F82E8F09
C2/B0AD:	AD35630CFF6F0821F8312629C6187201

; Don't know why we'd need this data table when we could just INC-ASL... Also, I don't even know where this is called from.
C2/B0BD:	0204
C2/B0BF:	0608
C2/B0C1:	0A0C
C2/B0C3:	0E10

; This data is called from C2/B1D9.
C2/B0C5:	0000
C2/B0C7:	FFFF
C2/B0C9:	FEFF
C2/B0CB:	FDFF

; Pointers called from C2/B27E.
C2/B0CD:	3DB1
C2/B0CF:	3DB1
C2/B0D1:	3DB1
C2/B0D3:	3DB1
C2/B0D5:	3DB1
C2/B0D7:	3DB1
C2/B0D9:	3DB1
C2/B0DB:	ADB1
C2/B0DD:	3DB1
C2/B0DF:	3DB1
C2/B0E1:	3DB1
C2/B0E3:	3DB1
C2/B0E5:	3DB1
C2/B0E7:	18B2
C2/B0E9:	3DB1
C2/B0EB:	B8B1
C2/B0ED:	3DB1
C2/B0EF:	3DB1
C2/B0F1:	3DB1
C2/B0F3:	3DB1
C2/B0F5:	3DB1
C2/B0F7:	3DB1
C2/B0F9:	3DB1
C2/B0FB:	3DB1
C2/B0FD:	3DB1
C2/B0FF:	3DB1
C2/B101:	3DB1
C2/B103:	3DB1
C2/B105:	3DB1
C2/B107:	3DB1
C2/B109:	3DB1
C2/B10B:	E1B1
C2/B10D:	3DB1
C2/B10F:	B8B1
C2/B111:	3DB1
C2/B113:	3DB1
C2/B115:	3DB1
C2/B117:	3DB1
C2/B119:	3DB1
C2/B11B:	3DB1
C2/B11D:	3DB1
C2/B11F:	3DB1
C2/B121:	3DB1
C2/B123:	3DB1
C2/B125:	C3B1
C2/B127:	3DB1
C2/B129:	70B1
C2/B12B:	3DB1
C2/B12D:	3DB1
C2/B12F:	3DB1
C2/B131:	3DB1
C2/B133:	3DB1
C2/B135:	3DB1
C2/B137:	3DB1
C2/B139:	4EB1
C2/B13B:	3DB1

C2/B13D:	6B         	RTL

; This data is called from C2/B159.
C2/B13E:	0100
C2/B140:	0200
C2/B142:	0100
C2/B144:	0000
C2/B146:	0100
C2/B148:	0200
C2/B14A:	0100
C2/B14C:	0200

C2/B14E:	A5 9A      	LDA $9A
C2/B150:	F0 1D      	BEQ $B16F      ; +29
C2/B152:	A5 0E      	LDA $0E
C2/B154:	29 07 00   	AND #$0007
C2/B157:	0A         	ASL
C2/B158:	AA         	TAX
C2/B159:	BF 3E B1 C2	LDA $C2B13E,X  ; 0, 1 or 2
C2/B15D:	48         	PHA
C2/B15E:	18         	CLC
C2/B15F:	69 F0 FF   	ADC #$FFF0     ; Why not SBC?
C2/B162:	8F B4 64 7E	STA $7E64B4    ; Battle info window X-offset
C2/B166:	68         	PLA
C2/B167:	18         	CLC
C2/B168:	69 10 00   	ADC #$0010     ; 16
C2/B16B:	8D C3 80   	STA $80C3      ; Enemy's X-position
C2/B16E:	7B         	TDC
C2/B16F:	6B         	RTL

C2/B170:	7B         	TDC            ; A = 0
C2/B171:	AA         	TAX            ; X = 0
C2/B172:	BD 13 EC   	LDA $EC13,X
C2/B175:	9D 71 EC   	STA $EC71,X
C2/B178:	9D 81 EC   	STA $EC81,X
C2/B17B:	BD 53 EC   	LDA $EC53,X
C2/B17E:	9D 91 EC   	STA $EC91,X
C2/B181:	9D A1 EC   	STA $ECA1,X
C2/B184:	E8         	INX
C2/B185:	E8         	INX
C2/B186:	E0 10 00   	CPX #$0010     ; 16
C2/B189:	D0 E7      	BNE $B172      ; -25
C2/B18B:	A5 0E      	LDA $0E
C2/B18D:	4A         	LSR
C2/B18E:	4A         	LSR
C2/B18F:	4A         	LSR
C2/B190:	29 07 00   	AND #$0007
C2/B193:	0A         	ASL
C2/B194:	AA         	TAX
C2/B195:	7B         	TDC            ; A = 0
C2/B196:	A8         	TAY            ; Y = 0
C2/B197:	BD 71 EC   	LDA $EC71,X
C2/B19A:	99 13 EC   	STA $EC13,Y
C2/B19D:	BD 91 EC   	LDA $EC91,X
C2/B1A0:	99 53 EC   	STA $EC53,Y
C2/B1A3:	C8         	INY
C2/B1A4:	C8         	INY
C2/B1A5:	E8         	INX
C2/B1A6:	E8         	INX
C2/B1A7:	C0 10 00   	CPY #$0010     ; 16
C2/B1AA:	D0 EB      	BNE $B197      ; -21
C2/B1AC:	6B         	RTL

C2/B1AD:	AD B2 64   	LDA $64B2      ; Background Y-shift
C2/B1B0:	18         	CLC
C2/B1B1:	69 06 00   	ADC #$0006     ; 6
C2/B1B4:	8D B2 64   	STA $64B2
C2/B1B7:	6B         	RTL

C2/B1B8:	AD B0 64   	LDA $64B0      ; Background X-shift
C2/B1BB:	38         	SEC
C2/B1BC:	E9 04 00   	SBC #$0004     ; 4
C2/B1BF:	8D B0 64   	STA $64B0
C2/B1C2:	6B         	RTL

C2/B1C3:	AD B0 64   	LDA $64B0      ; Background X-shift
C2/B1C6:	38         	SEC
C2/B1C7:	E9 08 00   	SBC #$0008     ; 8
C2/B1CA:	8D B0 64   	STA $64B0
C2/B1CD:	E2 20      	SEP #$20       ; 8-bit A
C2/B1CF:	20 E6 BB   	JSR $BBE6
C2/B1D2:	C2 20      	REP #$20       ; 16-bit A
C2/B1D4:	29 03 00   	AND #$0003
C2/B1D7:	0A         	ASL
C2/B1D8:	AA         	TAX
C2/B1D9:	BF C5 B0 C2	LDA $C2B0C5,X  ; 0, -1, -2 or -3
C2/B1DD:	8D B2 64   	STA $64B2      ; Background Y-shift
C2/B1E0:	6B         	RTL

C2/B1E1:	7B         	TDC            ; A = 0
C2/B1E2:	AA         	TAX            ; X = 0
C2/B1E3:	BD 13 EC   	LDA $EC13,X
C2/B1E6:	9D 71 EC   	STA $EC71,X
C2/B1E9:	9D 81 EC   	STA $EC81,X
C2/B1EC:	E8         	INX
C2/B1ED:	E8         	INX
C2/B1EE:	E0 10 00   	CPX #$0010     ; 16
C2/B1F1:	D0 F0      	BNE $B1E3      ; -16
C2/B1F3:	AD B2 64   	LDA $64B2      ; Background Y-shift
C2/B1F6:	18         	CLC
C2/B1F7:	69 06 00   	ADC #$0006     ; 6
C2/B1FA:	8D B2 64   	STA $64B2      ; You know, there's a function that does exactly this not far from here...
C2/B1FD:	A5 0E      	LDA $0E
C2/B1FF:	4A         	LSR
C2/B200:	4A         	LSR
C2/B201:	29 07 00   	AND #$0007
C2/B204:	0A         	ASL
C2/B205:	AA         	TAX
C2/B206:	7B         	TDC            ; A = 0
C2/B207:	A8         	TAY            ; Y = 0
C2/B208:	BD 71 EC   	LDA $EC71,X
C2/B20B:	99 13 EC   	STA $EC13,Y
C2/B20E:	C8         	INY
C2/B20F:	C8         	INY
C2/B210:	E8         	INX
C2/B211:	E8         	INX
C2/B212:	C0 10 00   	CPY #$0010     ; 16
C2/B215:	D0 F1      	BNE $B208      ; -15
C2/B217:	6B         	RTL

C2/B218:	7B         	TDC            ; A = 0
C2/B219:	AA         	TAX            ; X = 0
C2/B21A:	BD 13 EC   	LDA $EC13,X
C2/B21D:	9D 71 EC   	STA $EC71,X
C2/B220:	9D 79 EC   	STA $EC79,X
C2/B223:	BD 1B EC   	LDA $EC1B,X
C2/B226:	9D 81 EC   	STA $EC81,X
C2/B229:	9D 89 EC   	STA $EC89,X
C2/B22C:	E8         	INX
C2/B22D:	E8         	INX
C2/B22E:	E0 08 00   	CPX #$0008     ; 8
C2/B231:	D0 E7      	BNE $B21A      ; -25
C2/B233:	A5 0E      	LDA $0E
C2/B235:	4A         	LSR
C2/B236:	4A         	LSR
C2/B237:	4A         	LSR
C2/B238:	29 03 00   	AND #$0003
C2/B23B:	49 03 00   	EOR #$0003
C2/B23E:	0A         	ASL
C2/B23F:	AA         	TAX
C2/B240:	7B         	TDC            ; A = 0
C2/B241:	A8         	TAY            ; Y = 0
C2/B242:	BD 71 EC   	LDA $EC71,X
C2/B245:	99 13 EC   	STA $EC13,Y
C2/B248:	BD 81 EC   	LDA $EC81,X
C2/B24B:	99 1B EC   	STA $EC1B,Y
C2/B24E:	C8         	INY
C2/B24F:	C8         	INY
C2/B250:	E8         	INX
C2/B251:	E8         	INX
C2/B252:	C0 08 00   	CPY #$0008     ; 16
C2/B255:	D0 EB      	BNE $B242      ; -21
C2/B257:	6B         	RTL

C2/B258:	E2 10      	SEP #$10       ; 8-bit X & Y
C2/B25A:	7B         	TDC            ; A = 0
C2/B25B:	AA         	TAX            ; X = 0
C2/B25C:	BD A0 7E   	LDA $7EA0,X    ; Palette 5
C2/B25F:	9D 11 EC   	STA $EC11,X
C2/B262:	BD C0 7E   	LDA $7EC0,X    ; Palette 6
C2/B265:	9D 31 EC   	STA $EC31,X
C2/B268:	BD E0 7E   	LDA $7EE0,X    ; Palette 7
C2/B26B:	9D 51 EC   	STA $EC51,X
C2/B26E:	E8         	INX
C2/B26F:	E8         	INX
C2/B270:	E0 20      	CPX #$20       ; 32
C2/B272:	D0 E8      	BNE $B25C      ; -24
C2/B274:	C2 10      	REP #$10       ; 16-bit X & Y
C2/B276:	AD B8 EC   	LDA $ECB8      ; Battle background ID
C2/B279:	29 3F 00   	AND #$003F
C2/B27C:	0A         	ASL
C2/B27D:	AA         	TAX
C2/B27E:	7C CD B0   	JMP ($B0CD,X)

; Animation script command 80 7C.
C2/B281:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/B284:	BD 38 6A   	LDA $6A38,X    ; Switch caster's ID with target's ID
C2/B287:	48         	PHA
C2/B288:	BD 39 6A   	LDA $6A39,X
C2/B28B:	9D 38 6A   	STA $6A38,X
C2/B28E:	68         	PLA
C2/B28F:	9D 39 6A   	STA $6A39,X
C2/B292:	C2 20      	REP #$20       ; 16-bit A
C2/B294:	BD 7E 6F   	LDA $6F7E,X    ; Spell animation's next X-coordinate?
C2/B297:	48         	PHA
C2/B298:	BD 80 6F   	LDA $6F80,X    ; Spell animation's next Y-coordinate?
C2/B29B:	48         	PHA
C2/B29C:	BD 82 6F   	LDA $6F82,X    ; Spell animation's original X-coordinate
C2/B29F:	9D 7E 6F   	STA $6F7E,X
C2/B2A2:	BD 84 6F   	LDA $6F84,X    ; Spell animation's original Y-coordinate
C2/B2A5:	9D 80 6F   	STA $6F80,X
C2/B2A8:	68         	PLA
C2/B2A9:	9D 84 6F   	STA $6F84,X
C2/B2AC:	68         	PLA
C2/B2AD:	9D 82 6F   	STA $6F82,X
C2/B2B0:	7B         	TDC
C2/B2B1:	E2 20      	SEP #$20       ; 8-bit A
C2/B2B3:	6B         	RTL

; Animation script command 80 7B.
C2/B2B4:	7B         	TDC            ; A = 0
C2/B2B5:	AA         	TAX            ; X = 0
C2/B2B6:	A8         	TAY            ; Y = 0
C2/B2B7:	9E C0 61   	STZ $61C0,X    ; Character's animation ID
C2/B2BA:	BD BE 61   	LDA $61BE,X
C2/B2BD:	49 40      	EOR #$40
C2/B2BF:	9D BE 61   	STA $61BE,X    ; X-flip sprite
C2/B2C2:	B9 10 7B   	LDA $7B10,Y
C2/B2C5:	49 01      	EOR #$01
C2/B2C7:	99 10 7B   	STA $7B10,Y    ; Reverse direction faced by character's sprite
C2/B2CA:	C8         	INY
C2/B2CB:	8A         	TXA
C2/B2CC:	18         	CLC
C2/B2CD:	69 20      	ADC #$20       ; 32
C2/B2CF:	AA         	TAX
C2/B2D0:	A9 80      	CMP #$80       ; 128
C2/B2D2:	D0 E3      	BNE $B2B7      ; Loop for all party members
C2/B2D4:	6B         	RTL

; Animation script command 80 79.
C2/B2D5:	7B         	TDC            ; A = 0
C2/B2D6:	AA         	TAX            ; X = 0
C2/B2D7:	C2 20      	REP #$20       ; 16-bit A
C2/B2D9:	BD C9 61   	LDA $61C9,X    ; Character's X-coordinate
C2/B2DC:	38         	SEC
C2/B2DD:	E9 04 00   	SBC #$0004     ; Move left 4 pixels?
C2/B2E0:	9D C9 61   	STA $61C9,X
C2/B2E3:	7B         	TDC
C2/B2E4:	E2 20      	SEP #$20       ; 8-bit A
C2/B2E6:	BD BD 2E   	LDA $2EBD,X    ; Status effect on character
C2/B2E9:	29 C0      	AND #$C0
C2/B2EB:	D0 05      	BNE $B2F2      ; Branch if not Wounded or Petrified
C2/B2ED:	A9 04      	LDA #$04       ; 4
C2/B2EF:	9D C0 61   	STA $61C0,X    ; Character's animation ID
C2/B2F2:	C2 20      	REP #$20       ; 16-bit A
C2/B2F4:	8A         	TXA
C2/B2F5:	18         	CLC
C2/B2F6:	69 20 00   	ADC #$0020     ; 32
C2/B2F9:	AA         	TAX
C2/B2FA:	E0 80 00   	CPX #$0080     ; 128
C2/B2FD:	D0 DA      	BNE $B2D9      ; Loop for all party members
C2/B2FF:	7B         	TDC
C2/B300:	E2 20      	SEP #$20       ; 8-bit A
C2/B302:	6B         	RTL

; Animation script command 80 7A.
C2/B303:	7B         	TDC            ; A = 0
C2/B304:	AA         	TAX            ; X = 0
C2/B305:	C2 20      	REP #$20       ; 16-bit A
C2/B307:	BD C9 61   	LDA $61C9,X    ; Character's X-coordinate
C2/B30A:	18         	CLC
C2/B30B:	69 04 00   	ADC #$0004     ; Move right 4 pixels?
C2/B30E:	9D C9 61   	STA $61C9,X
C2/B311:	7B         	TDC
C2/B312:	E2 20      	SEP #$20       ; 8-bit A
C2/B314:	BD BD 2E   	LDA $2EBD,X    ; Status effect on character
C2/B317:	29 C0      	AND #$C0       ; Stone? Death?
C2/B319:	D0 05      	BNE $B320      ; If either...
C2/B31B:	A9 03      	LDA #$03       ; 3
C2/B31D:	9D C0 61   	STA $61C0,X    ; ...set animation ID to 3
C2/B320:	C2 20      	REP #$20       ; 16-bit A
C2/B322:	8A         	TXA
C2/B323:	18         	CLC
C2/B324:	69 20 00   	ADC #$0020     ; 32
C2/B327:	AA         	TAX
C2/B328:	E0 80 00   	CPX #$0080     ; 128
C2/B32B:	D0 DA      	BNE $B307      ; Loop for all party members
C2/B32D:	7B         	TDC
C2/B32E:	E2 20      	SEP #$20       ; 8-bit A
C2/B330:	6B         	RTL

; Animation script command 80 77.
C2/B331:	20 9F C2   	JSR $C29F
C2/B334:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/B337:	BD 39 6A   	LDA $6A39,X    ; Target's ID
C2/B33A:	0A         	ASL
C2/B33B:	AA         	TAX
C2/B33C:	C2 20      	REP #$20       ; 16-bit A
C2/B33E:	B9 B7 61   	LDA $61B7,Y
C2/B341:	9D 56 62   	STA $6256,X
C2/B344:	B9 B9 61   	LDA $61B9,Y
C2/B347:	9D 5E 62   	STA $625E,X
C2/B34A:	AE F6 7A   	LDX $7AF6
C2/B34D:	BD 7E 6F   	LDA $6F7E,X
C2/B350:	99 B7 61   	STA $61B7,Y
C2/B353:	BD 80 6F   	LDA $6F80,X
C2/B356:	38         	SEC
C2/B357:	E9 30 00   	SBC #$0030     ; 48
C2/B35A:	99 B9 61   	STA $61B9,Y
C2/B35D:	7B         	TDC
C2/B35E:	E2 20      	SEP #$20       ; 8-bit A
C2/B360:	6B         	RTL

; Animation script command 80 78.
C2/B361:	20 9F C2   	JSR $C29F
C2/B364:	AE F6 7A   	LDX $7AF6      ; Base index of animation data in memory
C2/B367:	BD 39 6A   	LDA $6A39,X    ; Target's ID
C2/B36A:	0A         	ASL
C2/B36B:	AA         	TAX
C2/B36C:	C2 20      	REP #$20       ; 16-bit A
C2/B36E:	BD 56 62   	LDA $6256,X	
C2/B371:	99 B7 61   	STA $61B7,Y
C2/B374:	7B         	TDC
C2/B375:	99 C5 61   	STA $61C5,Y    ; Character's X-offset
C2/B378:	99 D4 61   	STA $61D4,Y
C2/B37B:	BD 5E 62   	LDA $625E,X
C2/B37E:	99 B9 61   	STA $61B9,Y
C2/B381:	7B         	TDC
C2/B382:	99 C7 61   	STA $61C7,Y    ; Character's Y-offset
C2/B385:	99 D2 61   	STA $61D2,Y    ; Character's Y-coordinate
C2/B388:	7B         	TDC            ; A = 0 already...
C2/B389:	E2 20      	SEP #$20       ; 8-bit A
C2/B38B:	6B         	RTL

; Animation script command 80 76.
C2/B38C:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/B38F:	A0 01 00   	LDY #$0001     ; 1
C2/B392:	B7 5B      	LDA [$5B],Y
C2/B394:	85 10      	STA $10
C2/B396:	30 04      	BMI $B39C      ; +4
C2/B398:	64 11      	STZ $11
C2/B39A:	80 04      	BRA $B3A0      ; +4
C2/B39C:	A9 FF      	LDA #$FF       ; -1
C2/B39E:	85 11      	STA $11
C2/B3A0:	C2 20      	REP #$20       ; 16-bit A
C2/B3A2:	E6 5B      	INC $5B
C2/B3A4:	BD D9 74   	LDA $74D9,X
C2/B3A7:	18         	CLC
C2/B3A8:	65 10      	ADC $10
C2/B3AA:	9D D9 74   	STA $74D9,X
C2/B3AD:	85 10      	STA $10
C2/B3AF:	64 12      	STZ $12
C2/B3B1:	64 16      	STZ $16
C2/B3B3:	A9 40 00   	LDA #$0040     ; 64
C2/B3B6:	85 18      	STA $18
C2/B3B8:	BD 87 6F   	LDA $6F87,X    ; Animation direction
C2/B3BB:	29 FF 00   	AND #$00FF
C2/B3BE:	F0 2F      	BEQ $B3EF      ; Continue if direction is right, branch if left
C2/B3C0:	BD 80 6F   	LDA $6F80,X
C2/B3C3:	29 FF 00   	AND #$00FF
C2/B3C6:	0A         	ASL
C2/B3C7:	0A         	ASL
C2/B3C8:	AA         	TAX
C2/B3C9:	A5 12      	LDA $12
C2/B3CB:	18         	CLC
C2/B3CC:	65 10      	ADC $10
C2/B3CE:	85 12      	STA $12
C2/B3D0:	A5 13      	LDA $13
C2/B3D2:	29 FF 00   	AND #$00FF
C2/B3D5:	85 13      	STA $13
C2/B3D7:	A5 16      	LDA $16
C2/B3D9:	38         	SEC
C2/B3DA:	E5 13      	SBC $13
C2/B3DC:	85 16      	STA $16
C2/B3DE:	64 13      	STZ $13
C2/B3E0:	9D F5 43   	STA $43F5,X    ; BG1 HDMA scroll window X-offset
C2/B3E3:	CA CA CA CA	DEX #4
C2/B3E7:	C6 18      	DEC $18
C2/B3E9:	D0 DE      	BNE $B3C9      ; -34
C2/B3EB:	7B         	TDC
C2/B3EC:	E2 20      	SEP #$20       ; 8-bit A
C2/B3EE:	6B         	RTL

C2/B3EF:	BD 80 6F   	LDA $6F80,X
C2/B3F2:	29 FF 00   	AND #$00FF
C2/B3F5:	0A         	ASL
C2/B3F6:	0A         	ASL
C2/B3F7:	AA         	TAX
C2/B3F8:	A5 12      	LDA $12
C2/B3FA:	18         	CLC
C2/B3FB:	65 10      	ADC $10
C2/B3FD:	85 12      	STA $12
C2/B3FF:	A5 13      	LDA $13
C2/B401:	29 FF 00   	AND #$00FF
C2/B404:	18         	CLC
C2/B405:	65 16      	ADC $16
C2/B407:	85 16      	STA $16
C2/B409:	64 13      	STZ $13
C2/B40B:	9D F5 43   	STA $43F5,X    ; BG1 HDMA scroll window X-offset
C2/B40E:	CA CA CA CA	DEX #4
C2/B412:	C6 18      	DEC $18
C2/B414:	D0 E2      	BNE $B3F8      ; -30
C2/B416:	7B         	TDC
C2/B417:	E2 20      	SEP #$20       ; 8-bit A
C2/B419:	6B         	RTL

; Update bitmask of facing right characters and enemies

C2/B41A:	7B         	TDC            ; A = 0
C2/B41B:	AA         	TAX            ; X = 0
C2/B41C:	8E 50 2F   	STX $2F50
C2/B41F:	A2 03 00   	LDX #$0003     ; 3
C2/B422:	BD 10 7B   	LDA $7B10,X    ; Direction faced by character
C2/B425:	4A         	LSR A
C2/B426:	2E 50 2F   	ROL $2F50      ; This byte holds all of which party members are facing right
C2/B429:	CA         	DEX
C2/B42A:	10 F6      	BPL $B422      ; Loop for all 4 party members
C2/B42C:	7B         	TDC            ; A = 0
C2/B42D:	AA         	TAX            ; X = 0
C2/B42E:	A2 0A 00   	LDX #$000A     ; 10
C2/B431:	BD F3 80   	LDA $80F3,X
C2/B434:	5D 7E 61   	EOR $617E,X
C2/B437:	49 01      	EOR #$01       ; Get opposite of direction enemy is facing
C2/B439:	4A         	LSR A
C2/B43A:	2E 51 2F   	ROL $2F51      ; This byte holds all of which enemies are facing right
C2/B43D:	CA         	DEX
C2/B43E:	CA         	DEX
C2/B43F:	10 F0      	BPL $B431      ; Loop for all 6 enemies
C2/B441:	6B         	RTL

; Transform palette (for flashback mode, etc)
C2/B442:	A6 18      	LDX $18
C2/B444:	C2 20      	REP #$20       ; 16-bit A
C2/B446:	BD 00 7E   	LDA $7E00,X    ; Palette 0 data
C2/B449:	85 10      	STA $10
C2/B44B:	4A         	LSR
C2/B44C:	4A         	LSR
C2/B44D:	4A         	LSR
C2/B44E:	4A         	LSR
C2/B44F:	4A         	LSR
C2/B450:	85 12      	STA $12
C2/B452:	4A         	LSR
C2/B453:	4A         	LSR
C2/B454:	4A         	LSR
C2/B455:	4A         	LSR
C2/B456:	4A         	LSR
C2/B457:	29 1F 00   	AND #$001F
C2/B45A:	85 14      	STA $14
C2/B45C:	A5 10      	LDA $10
C2/B45E:	29 1F 00   	AND #$001F
C2/B461:	18         	CLC
C2/B462:	65 14      	ADC $14
C2/B464:	85 14      	STA $14
C2/B466:	A5 12      	LDA $12
C2/B468:	29 1F 00   	AND #$001F
C2/B46B:	18         	CLC
C2/B46C:	65 14      	ADC $14
C2/B46E:	8F 04 42 00	STA $004204	
C2/B472:	E2 20      	SEP #$20       ; 8-bit A
C2/B474:	A9 03      	LDA #$03       ; 3
C2/B476:	8F 06 42 00	STA $004206
C2/B47A:	7B         	TDC
C2/B47B:	C2 20      	REP #$20       ; 16-bit A
C2/B47D:	EA         	NOP
C2/B47E:	EA         	NOP
C2/B47F:	EA         	NOP
C2/B480:	EA         	NOP
C2/B481:	EA         	NOP
C2/B482:	EA         	NOP
C2/B483:	AF 14 42 00	LDA $004214
C2/B487:	85 10      	STA $10
C2/B489:	0A 0A 0A 0A	ASL #4
C2/B48D:	0A         	ASL
C2/B48E:	05 10      	ORA $10
C2/B490:	9D 00 7E   	STA $7E00,X
C2/B493:	E8         	INX
C2/B494:	E8         	INX
C2/B495:	E4 1A      	CPX $1A
C2/B497:	D0 AD      	BNE $B446      ; -83
C2/B499:	7B         	TDC
C2/B49A:	E2 20      	SEP #$20       ; 8-bit A
C2/B49C:	6B         	RTL

; 8-bit data.
C2/B49D:	01
C2/B49E:	02
C2/B49F:	03
C2/B4A0:	04
C2/B4A1:	05
C2/B4A2:	06

; Return a value based on our 3 slot results: 0 for 7-7-Bar, 7 when we don't
; have three matching symbols [Lagomorph], or Symbol value + 1 when we have
; a matching triplet

C2/B4A3:	A5 36      	LDA $36        ; get slot 1 [aka reel 1] symbol
C2/B4A5:	C5 37      	CMP $37        ; compare to slot 2 symbol
C2/B4A7:	D0 06      	BNE $B4AF      ; branch if they don't match
C2/B4A9:	C5 38      	CMP $38        ; if they do, compare to slot 3 symbol
C2/B4AB:	D0 02      	BNE $B4AF      ; branch if that is different
C2/B4AD:	1A         	INC            ; if they're all the same, just return
                                       ; the symbol value + 1
C2/B4AE:	6B         	RTL


C2/B4AF:	05 37      	ORA $37
C2/B4B1:	D0 08      	BNE $B4BB      ; branch if slot 1 or 2 isn't "7"
C2/B4B3:	A5 38      	LDA $38        ; only reach here if Slot 1 and 2 are both "7"
C2/B4B5:	C9 02      	CMP #$02
C2/B4B7:	D0 02      	BNE $B4BB      ; branch if slot 3 isn't "Bar"
C2/B4B9:	7B         	TDC            ; if it is, return 0
C2/B4BA:	6B         	RTL


C2/B4BB:	A9 07      	LDA #$07       ; return 7 for Lagomorph?
C2/B4BD:	6B         	RTL

; 16-bit data called from C1/B89A and C1/B8BA.
C2/B4BE:	7A0F
C2/B4C0:	C00F
C2/B4C2:	CE0F
C2/B4C4:	DC0F
C2/B4C6:	EA0F
C2/B4C8:	F80F
C2/B4CA:	0610
C2/B4CC:	1C07
C2/B4CE:	3010
C2/B4D0:	3E10
C2/B4D2:	4C10
C2/B4D4:	5A10
C2/B4D6:	C814
C2/B4D8:	D614
C2/B4DA:	1C15
C2/B4DC:	2A15
C2/B4DE:	3815
C2/B4E0:	F206
C2/B4E2:	0E07
C2/B4E4:	E40D
C2/B4E6:	1011
C2/B4E8:	1E11
C2/B4EA:	2C11
C2/B4EC:	3A11
C2/B4EE:	4811
C2/B4F0:	5611
C2/B4F2:	6411
C2/B4F4:	7211
C2/B4F6:	8011
C2/B4F8:	8E11
C2/B4FA:	9C11
C2/B4FC:	AA11
C2/B4FE:	B811
C2/B500:	C611
C2/B502:	D411
C2/B504:	E211
C2/B506:	3010
C2/B508:	6810
C2/B50A:	7610
C2/B50C:	8410
C2/B50E:	B20F
C2/B510:	9210
C2/B512:	000E
C2/B514:	420F
C2/B516:	A010
C2/B518:	AE10
C2/B51A:	BC10
C2/B51C:	CA10
C2/B51E:	D810
C2/B520:	E610
C2/B522:	F410
C2/B524:	0211
C2/B526:	340F
C2/B528:	260F
C2/B52A:	180F
C2/B52C:	0A0F
C2/B52E:	BA14
C2/B530:	1816

C2/B532:	C2 20      	REP #$20       ; 16-bit A
C2/B534:	BD 01 20   	LDA $2001,X    ; Enemy sprite ID
C2/B537:	AA         	TAX
C2/B538:	7B         	TDC
C2/B539:	E2 20      	SEP #$20       ; 8-bit A
C2/B53B:	E0 06 01   	CPX #$0106     ; Is it GhostTrain?
C2/B53E:	F0 01      	BEQ $B541      ; If not, exit
C2/B540:	6B         	RTL

C2/B541:	A2 2C 01   	LDX #$012C     ; 300
C2/B544:	86 26      	STX $26
C2/B546:	BF 03 00 E7	LDA $E70003,X
C2/B54A:	0A         	ASL
C2/B54B:	AA         	TAX
C2/B54C:	BF 48 18 E7	LDA $E71848,X
C2/B550:	85 F3      	STA $F3
C2/B552:	BF 49 18 E7	LDA $E71849,X
C2/B556:	85 F4      	STA $F4
C2/B558:	A9 E7      	LDA #$E7       ; -25
C2/B55A:	85 F5      	STA $F5
C2/B55C:	A9 00      	LDA #$00       ; 0
C2/B55E:	85 F6      	STA $F6
C2/B560:	A9 C4      	LDA #$C4       ; -60
C2/B562:	85 F7      	STA $F7
C2/B564:	A9 7F      	LDA #$7F       ; 127
C2/B566:	85 F8      	STA $F8
C2/B568:	22 6D FF C2	JSL $C2FF6D
C2/B56C:	A6 26      	LDX $26
C2/B56E:	BF 00 00 E7	LDA $E70000,X
C2/B572:	29 7F      	AND #$7F
C2/B574:	85 22      	STA $22
C2/B576:	0A         	ASL
C2/B577:	18         	CLC
C2/B578:	65 22      	ADC $22
C2/B57A:	AA         	TAX
C2/B57B:	BF 50 16 E7	LDA $E71650,X
C2/B57F:	85 F3      	STA $F3
C2/B581:	BF 51 16 E7	LDA $E71651,X
C2/B585:	85 F4      	STA $F4
C2/B587:	BF 52 16 E7	LDA $E71652,X
C2/B58B:	85 F5      	STA $F5
C2/B58D:	A6 26      	LDX $26
C2/B58F:	BF 02 00 E7	LDA $E70002,X
C2/B593:	29 7F      	AND #$7F
C2/B595:	85 22      	STA $22
C2/B597:	0A         	ASL
C2/B598:	18         	CLC
C2/B599:	65 22      	ADC $22
C2/B59B:	AA         	TAX
C2/B59C:	BF 50 16 E7	LDA $E71650,X
C2/B5A0:	85 F6      	STA $F6
C2/B5A2:	BF 51 16 E7	LDA $E71651,X
C2/B5A6:	85 F7      	STA $F7
C2/B5A8:	BF 52 16 E7	LDA $E71652,X
C2/B5AC:	85 F8      	STA $F8
C2/B5AE:	C2 20      	REP #$20       ; 16-bit A
C2/B5B0:	64 10      	STZ $10
C2/B5B2:	7B         	TDC
C2/B5B3:	AA         	TAX
C2/B5B4:	BF 00 C4 7F	LDA $7FC400,X
C2/B5B8:	29 FF 01   	AND #$01FF
C2/B5BB:	C9 00 01   	CMP #$0100
C2/B5BE:	90 24      	BCC $B5E4      ; +36
C2/B5C0:	29 FF 00   	AND #$00FF
C2/B5C3:	38         	SEC
C2/B5C4:	E9 80 00   	SBC #$0080     ; 128
C2/B5C7:	0A         	ASL
C2/B5C8:	0A         	ASL
C2/B5C9:	0A         	ASL
C2/B5CA:	0A         	ASL
C2/B5CB:	0A         	ASL
C2/B5CC:	A8         	TAY
C2/B5CD:	DA         	PHX
C2/B5CE:	A9 10 00   	LDA #$0010     ; 16
C2/B5D1:	85 12      	STA $12
C2/B5D3:	A6 10      	LDX $10
C2/B5D5:	B7 F6      	LDA [$F6],Y
C2/B5D7:	9D 3F AE   	STA $AE3F,X
C2/B5DA:	C8         	INY
C2/B5DB:	C8         	INY
C2/B5DC:	E8         	INX
C2/B5DD:	E8         	INX
C2/B5DE:	C6 12      	DEC $12
C2/B5E0:	D0 F3      	BNE $B5D5      ; -13
C2/B5E2:	80 1B      	BRA $B5FF      ; +27
C2/B5E4:	0A         	ASL
C2/B5E5:	0A         	ASL
C2/B5E6:	0A         	ASL
C2/B5E7:	0A         	ASL
C2/B5E8:	0A         	ASL
C2/B5E9:	A8         	TAY
C2/B5EA:	DA         	PHX
C2/B5EB:	A9 10 00   	LDA #$0010     ; 16
C2/B5EE:	85 12      	STA $12
C2/B5F0:	A6 10      	LDX $10
C2/B5F2:	B7 F3      	LDA [$F3],Y
C2/B5F4:	9D 3F AE   	STA $AE3F,X
C2/B5F7:	C8         	INY
C2/B5F8:	C8         	INY
C2/B5F9:	E8         	INX
C2/B5FA:	E8         	INX
C2/B5FB:	C6 12      	DEC $12
C2/B5FD:	D0 F3      	BNE $B5F2      ; -13
C2/B5FF:	86 10      	STX $10
C2/B601:	FA         	PLX
C2/B602:	E8         	INX
C2/B603:	E8         	INX
C2/B604:	E0 00 02   	CPX #$0200     ; 512
C2/B607:	D0 AB      	BNE $B5B4      ; -85
C2/B609:	7B         	TDC
C2/B60A:	E2 20      	SEP #$20       ; 8-bit A
C2/B60C:	6B         	RTL

C2/B60D:	A2 80 02   	LDX #$0280     ; 640
C2/B610:	86 10      	STX $10
C2/B612:	A2 0F 89   	LDX #$890F     ; -30,449
C2/B615:	86 14      	STX $14
C2/B617:	20 2D B6   	JSR $B62D
C2/B61A:	20 41 B6   	JSR $B641
C2/B61D:	A6 10      	LDX $10
C2/B61F:	E8         	INX
C2/B620:	86 10      	STX $10
C2/B622:	A6 14      	LDX $14
C2/B624:	E8         	INX
C2/B625:	86 14      	STX $14
C2/B627:	E0 13 89   	CPX #$8913     ; -30,445
C2/B62A:	D0 EB      	BNE $B617      ; -21
C2/B62C:	6B         	RTL

C2/B62D:	7B         	TDC            ; A = 0
C2/B62E:	A8         	TAY            ; Y = 0
C2/B62F:	18         	CLC
C2/B630:	71 14      	ADC ($14),Y
C2/B632:	C8 C8 C8 C8	INY #4
C2/B636:	C0 60 00   	CPY #$0060     ; 96
C2/B639:	D0 F4      	BNE $B62F      ; -12
C2/B63B:	49 FF      	EOR #$FF
C2/B63D:	1A         	INC
C2/B63E:	91 10      	STA ($10),Y
C2/B640:	60         	RTS

C2/B641:	A0 00 00   	LDY #$0000     ; 0
C2/B644:	B1 14      	LDA ($14),Y
C2/B646:	91 10      	STA ($10),Y
C2/B648:	C8 C8 C8 C8	INY #4
C2/B64C:	C0 60 00   	CPY #$0060     ; 96
C2/B64F:	D0 F3      	BNE $B644      ; -13
C2/B651:	60         	RTS

C2/B652:	AD C6 2E   	LDA $2EC6
C2/B655:	8D 6B 89   	STA $896B
C2/B658:	AD E6 2E   	LDA $2EE6
C2/B65B:	8D 6C 89   	STA $896C
C2/B65E:	AD 06 2F   	LDA $2F06
C2/B661:	8D 6D 89   	STA $896D
C2/B664:	AD 26 2F   	LDA $2F26
C2/B667:	8D 6E 89   	STA $896E
C2/B66A:	A2 80 02   	LDX #$0280
C2/B66D:	86 10      	STX $10
C2/B66F:	A2 0F 89   	LDX #$890F
C2/B672:	86 14      	STX $14
C2/B674:	20 DE B6   	JSR $B6DE
C2/B677:	90 03      	BCC $B67C
C2/B679:	20 C6 B6   	JSR $B6C6
C2/B67C:	A6 10      	LDX $10
C2/B67E:	E8         	INX
C2/B67F:	86 10      	STX $10
C2/B681:	A6 14      	LDX $14
C2/B683:	E8         	INX
C2/B684:	86 14      	STX $14
C2/B686:	E0 13 89   	CPX #$8913
C2/B689:	D0 E9      	BNE $B674
C2/B68B:	7B         	TDC
C2/B68C:	AA         	TAX
C2/B68D:	BD 6B 89   	LDA $896B,x
C2/B690:	20 9A B6   	JSR $B69A
C2/B693:	E8         	INX
C2/B694:	E0 04 00   	CPX #$0004
C2/B697:	D0 F4      	BNE $B68D
C2/B699:	6B         	RTL

C2/B69A:	DA         	PHX
C2/B69B:	85 18      	STA $18
C2/B69D:	7B         	TDC            ; A = 0
C2/B69E:	A8         	TAY            ; Y = 0
C2/B69F:	B9 DC 02   	LDA $02DC,Y
C2/B6A2:	C5 18      	CMP $18
C2/B6A4:	F0 08      	BEQ $B6AE      ; +8
C2/B6A6:	C8         	INY
C2/B6A7:	C0 04 00   	CPY #$0004     ; 4
C2/B6AA:	D0 F3      	BNE $B69F      ; -13
C2/B6AC:	80 16      	BRA $B6C4      ; +22

C2/B6AE:	A9 17      	LDA #$17       ; 23
C2/B6B0:	85 1A      	STA $1A
C2/B6B2:	B9 80 02   	LDA $0280,Y
C2/B6B5:	9D 0F 89   	STA $890F,X
C2/B6B8:	C8 C8 C8 C8	INY #4
C2/B6BC:	E8 E8 E8 E8	INX #4
C2/B6C0:	C6 1A      	DEC $1A
C2/B6C2:	D0 EE      	BNE $B6B2      ; -18
C2/B6C4:	FA         	PLX
C2/B6C5:	60         	RTS

C2/B6C6:	7B         	TDC            ; A = 0
C2/B6C7:	A8         	TAY            ; Y = 0
C2/B6C8:	91 10      	STA ($10),Y
C2/B6CA:	C8 C8 C8 C8	INY #4
C2/B6CE:	C0 5C 00   	CPY #$005C     ; 92
C2/B6D1:	D0 F5      	BNE $B6C8      ; -11
C2/B6D3:	A9 FF      	LDA #$FF       ; -1
C2/B6D5:	91 10      	STA ($10),Y
C2/B6D7:	C8 C8 C8 C8	INY #4
C2/B6DB:	91 10      	STA ($10),Y
C2/B6DD:	60         	RTS

C2/B6DE:	7B         	TDC            ; A = 0
C2/B6DF:	A8         	TAY            ; Y = 0
C2/B6E0:	18         	CLC
C2/B6E1:	71 10      	ADC ($10),Y
C2/B6E3:	C8 C8 C8 C8	INY #4
C2/B6E7:	C0 60 00   	CPY #$0060     ; 96
C2/B6EA:	D0 F4      	BNE $B6E0      ; -12
C2/B6EC:	49 FF      	EOR #$FF
C2/B6EE:	1A         	INC
C2/B6EF:	D1 10      	CMP ($10),Y
C2/B6F1:	F0 02      	BEQ $B6F5      ; +2
C2/B6F3:	38         	SEC
C2/B6F4:	60         	RTS

C2/B6F5:	18         	CLC
C2/B6F6:	60         	RTS

; Called from C1/0F17.
C2/B6F7:	C2 20      	REP #$20       ; 16-bit A
C2/B6F9:	7B         	TDC            ; A = 0
C2/B6FA:	AA         	TAX            ; X = 0
C2/B6FB:	A9 00 20   	LDA #$2000     ; 8,192
C2/B6FE:	9D AD 5F   	STA $5FAD,X
C2/B701:	E8         	INX
C2/B702:	E8         	INX
C2/B703:	E0 80 00   	CPX #$0080     ; 128
C2/B706:	D0 F6      	BNE $B6FE      ; -10
C2/B708:	7B         	TDC            ; A = 0
C2/B709:	AA         	TAX            ; X = 0
C2/B70A:	9D F5 43   	STA $43F5,X    ; BG1 HDMA scroll window X-offset
C2/B70D:	9D 75 47   	STA $4775,X
C2/B710:	9D F5 4A   	STA $4AF5,X    ; Battle info text X-shift
C2/B713:	E8         	INX
C2/B714:	E8         	INX
C2/B715:	E0 80 03   	CPX #$0380     ; 896
C2/B718:	D0 F0      	BNE $B70A      ; -16
C2/B71A:	A2 5C 02   	LDX #$025C     ; 604
C2/B71D:	A9 A9 FF   	LDA #$FFA9     ; -87
C2/B720:	85 12      	STA $12
C2/B722:	A9 66 FF   	LDA #$FF66     ; -154
C2/B725:	85 14      	STA $14
C2/B727:	A5 12      	LDA $12
C2/B729:	9D 77 47   	STA $4777,X
C2/B72C:	A5 14      	LDA $14
C2/B72E:	9D F7 4A   	STA $4AF7,X    ; Battle info text Y-shift
C2/B731:	C6 12      	DEC $12
C2/B733:	C6 14      	DEC $14
C2/B735:	E8 E8 E8 E8	INX #4
C2/B739:	E0 80 03   	CPX #$0380     ; 896
C2/B73C:	D0 E9      	BNE $B727      ; -23
C2/B73E:	A2 7C 02   	LDX #$027C     ; 636
C2/B741:	A9 64 00   	LDA #$0064     ; 100
C2/B744:	85 10      	STA $10
C2/B746:	A9 0C 00   	LDA #$000C     ; 12
C2/B749:	85 12      	STA $12
C2/B74B:	A5 10      	LDA $10
C2/B74D:	9D F7 4A   	STA $4AF7,X
C2/B750:	C6 12      	DEC $12
C2/B752:	D0 0D      	BNE $B761      ; +13
C2/B754:	A9 0C 00   	LDA #$000C     ; 12
C2/B757:	85 12      	STA $12
C2/B759:	A5 10      	LDA $10
C2/B75B:	18         	CLC
C2/B75C:	69 04 00   	ADC #$0004     ; 4
C2/B75F:	85 10      	STA $10
C2/B761:	E8 E8 E8 E8	INX #4
C2/B765:	E0 3C 03   	CPX #$033C     ; 828
C2/B768:	D0 E1      	BNE $B74B      ; -31
C2/B76A:	A2 5C 02   	LDX #$025C     ; 604
C2/B76D:	A9 68 00   	LDA #$0068     ; 104
C2/B770:	9D 77 47   	STA $4777,X
C2/B773:	E8 E8 E8 E8	INX #4
C2/B777:	E0 5C 03   	CPX #$035C     ; 860
C2/B77A:	D0 F4      	BNE $B770      ; -12
C2/B77C:	7B         	TDC            ; A = 0
C2/B77D:	AA         	TAX            ; X = 0
C2/B77E:	BD 51 4D   	LDA $4D51,X
C2/B781:	9D 75 4E   	STA $4E75,X
C2/B784:	9D 75 4F   	STA $4F75,X
C2/B787:	9D 95 50   	STA $5095,X
C2/B78A:	E8         	INX
C2/B78B:	E8         	INX
C2/B78C:	E0 00 01   	CPX #$0100     ; 256
C2/B78F:	D0 ED      	BNE $B77E      ; -19
C2/B791:	BD 51 4D   	LDA $4D51,X
C2/B794:	9D 75 4F   	STA $4F75,X
C2/B797:	9D 95 50   	STA $5095,X
C2/B79A:	E8         	INX
C2/B79B:	E8         	INX
C2/B79C:	E0 20 01   	CPX #$0120     ; 288
C2/B79F:	D0 F0      	BNE $B791      ; -16
C2/B7A1:	BD 51 4D   	LDA $4D51,X
C2/B7A4:	9D 95 50   	STA $5095,X
C2/B7A7:	E8         	INX
C2/B7A8:	E8         	INX
C2/B7A9:	E0 40 01   	CPX #$0140     ; 320
C2/B7AC:	D0 F3      	BNE $B7A1      ; -13
C2/B7AE:	7B         	TDC            ; A = 0
C2/B7AF:	AA         	TAX            ; X = 0
C2/B7B0:	BD 73 4D   	LDA $4D73,X
C2/B7B3:	18         	CLC
C2/B7B4:	69 40 00   	ADC #$0040     ; 64
C2/B7B7:	9D 97 4E   	STA $4E97,X
C2/B7BA:	18         	CLC
C2/B7BB:	69 40 00   	ADC #$0040     ; 64
C2/B7BE:	9D 97 4F   	STA $4F97,X
C2/B7C1:	38         	SEC
C2/B7C2:	E9 08 00   	SBC #$0008     ; 8
C2/B7C5:	9D B7 50   	STA $50B7,X
C2/B7C8:	E8 E8 E8 E8	INX #4
C2/B7CC:	E0 C0 00   	CPX #$00C0     ; 192
C2/B7CF:	D0 DF      	BNE $B7B0      ; -33
C2/B7D1:	7B         	TDC            ; A = 0
C2/B7D2:	AA         	TAX            ; X = 0
C2/B7D3:	BD 53 4D   	LDA $4D53,X
C2/B7D6:	38         	SEC
C2/B7D7:	E9 08 00   	SBC #$0008     ; 8
C2/B7DA:	9D 97 50   	STA $5097,X
C2/B7DD:	BD 33 4E   	LDA $4E33,X
C2/B7E0:	38         	SEC
C2/B7E1:	E9 08 00   	SBC #$0008     ; 8
C2/B7E4:	9D 77 51   	STA $5177,X
C2/B7E7:	E8 E8 E8 E8	INX #4
C2/B7EB:	E0 20 00   	CPX #$0020     ; 32
C2/B7EE:	D0 E3      	BNE $B7D3      ; -29
C2/B7F0:	7B         	TDC            ; A = 0
C2/B7F1:	AA         	TAX            ; X = 0
C2/B7F2:	9E D5 53   	STZ $53D5,X
C2/B7F5:	A9 3C 01   	LDA #$013C     ; 316
C2/B7F8:	9D D7 53   	STA $53D7,X
C2/B7FB:	E8 E8 E8 E8	INX #4
C2/B7FF:	E0 A0 00   	CPX #$00A0     ; 160
C2/B802:	D0 EE      	BNE $B7F2      ; -18
C2/B804:	7B         	TDC            ; A = 0
C2/B805:	AA         	TAX            ; X = 0
C2/B806:	A9 18 00   	LDA #$0018     ; 24
C2/B809:	85 12      	STA $12
C2/B80B:	A9 DC 00   	LDA #$00DC     ; 220
C2/B80E:	85 10      	STA $10
C2/B810:	A9 00 01   	LDA #$0100     ; 256
C2/B813:	9D 75 54   	STA $5475,X
C2/B816:	A5 10      	LDA $10
C2/B818:	9D 77 54   	STA $5477,X
C2/B81B:	C6 12      	DEC $12
C2/B81D:	D0 08      	BNE $B827      ; +8
C2/B81F:	A5 10      	LDA $10
C2/B821:	18         	CLC
C2/B822:	69 04 00   	ADC #$0004     ; 4
C2/B825:	85 10      	STA $10
C2/B827:	E8 E8 E8 E8	INX #4
C2/B82B:	E0 C0 00   	CPX #$00C0
C2/B82E:	D0 E0      	BNE $B810      ; -32
C2/B830:	7B         	TDC            ; A = 0
C2/B831:	AA         	TAX            ; X = 0
C2/B832:	A9 60 00   	LDA #$0060     ; 96
C2/B835:	85 10      	STA $10
C2/B837:	A9 14 00   	LDA #$0014     ; 20
C2/B83A:	85 12      	STA $12
C2/B83C:	A9 00 01   	LDA #$0100     ; 256
C2/B83F:	9D D5 51   	STA $51D5,X
C2/B842:	A5 10      	LDA $10
C2/B844:	9D D7 51   	STA $51D7,X
C2/B847:	C6 12      	DEC $12
C2/B849:	D0 0D      	BNE $B858      ; +13
C2/B84B:	A9 0C 00   	LDA #$000C     ; 12
C2/B84E:	85 12      	STA $12
C2/B850:	A5 10      	LDA $10
C2/B852:	18         	CLC
C2/B853:	69 04 00   	ADC #$0004     ; 4
C2/B856:	85 10      	STA $10
C2/B858:	E8 E8 E8 E8	INX #4
C2/B85C:	E0 E0 00   	CPX #$00E0     ; 224
C2/B85F:	D0 DB      	BNE $B83C      ; -37
C2/B861:	7B         	TDC
C2/B862:	9D D5 51   	STA $51D5,X
C2/B865:	9D D7 51   	STA $51D7,X
C2/B868:	E8         	INX
C2/B869:	E8         	INX
C2/B86A:	E0 00 01   	CPX #$0100     ; 256
C2/B86D:	D0 F3      	BNE $B862      ; -13
C2/B86F:	7B         	TDC            ; A = 0 already...
C2/B870:	AA         	TAX            ; X = 0
C2/B871:	A9 60 00   	LDA #$0060     ; 96
C2/B874:	85 10      	STA $10
C2/B876:	A9 0C 00   	LDA #$000C     ; 12
C2/B879:	85 12      	STA $12
C2/B87B:	A9 00 01   	LDA #$0100     ; 256
C2/B87E:	9D 05 43   	STA $4305,X
C2/B881:	A5 10      	LDA $10
C2/B883:	9D 07 43   	STA $4307,X
C2/B886:	C6 12      	DEC $12
C2/B888:	D0 0D      	BNE $B897      ; +13
C2/B88A:	A9 0C 00   	LDA #$000C     ; 12
C2/B88D:	85 12      	STA $12
C2/B88F:	A5 10      	LDA $10
C2/B891:	18         	CLC
C2/B892:	69 04 00   	ADC #$0004     ; 4
C2/B895:	85 10      	STA $10
C2/B897:	E8 E8 E8 E8	INX #4
C2/B89B:	E0 F0 00   	CPX #$00F0     ; 240
C2/B89E:	D0 DB      	BNE $B87B      ; -37
C2/B8A0:	7B         	TDC
C2/B8A1:	E2 20      	SEP #$20       ; 8-bit A
C2/B8A3:	6B         	RTL

C2/B8A4:	AD F6 E9   	LDA $E9F6
C2/B8A7:	F0 47      	BEQ $B8F0      ; +71
C2/B8A9:	AD F9 E9   	LDA $E9F9      ; Battle screen brightness
C2/B8AC:	29 0F      	AND #$0F
C2/B8AE:	C9 0F      	CMP #$0F       ; 15
C2/B8B0:	F0 04      	BEQ $B8B6      ; +4
C2/B8B2:	1A         	INC
C2/B8B3:	8D F9 E9   	STA $E9F9
C2/B8B6:	E2 10      	SEP #$10       ; 8-bit X & Y
C2/B8B8:	AD F7 E9   	LDA $E9F7
C2/B8BB:	0A         	ASL
C2/B8BC:	A8         	TAY
C2/B8BD:	AD F8 E9   	LDA $E9F8
C2/B8C0:	0A         	ASL
C2/B8C1:	AA         	TAX
C2/B8C2:	A9 E0      	LDA #$E0       ; -32
C2/B8C4:	99 31 EA   	STA $EA31,Y
C2/B8C7:	99 33 EA   	STA $EA33,Y
C2/B8CA:	9D CB EA   	STA $EACB,X
C2/B8CD:	9D CD EA   	STA $EACD,X
C2/B8D0:	C9 FF      	CMP #$FF
C2/B8D2:	F0 01      	BEQ $B8D5      ; +1
C2/B8D4:	1A         	INC
C2/B8D5:	E8         	INX
C2/B8D5:	E8         	INX
C2/B8D5:	E8         	INX
C2/B8D5:	E8         	INX
C2/B8D9:	88         	DEY
C2/B8D9:	88         	DEY
C2/B8D9:	88         	DEY
C2/B8D9:	88         	DEY
C2/B8DD:	D0 E5      	BNE $B8C4      ; -27
C2/B8DF:	EE F8 E9   	INC $E9F8
C2/B8E2:	EE F8 E9   	INC $E9F8
C2/B8E5:	CE F7 E9   	DEC $E9F7
C2/B8E8:	CE F7 E9   	DEC $E9F7
C2/B8EB:	D0 03      	BNE $B8F0      ; +3
C2/B8ED:	9C F6 E9   	STZ $E9F6
C2/B8F0:	C2 10      	REP #$10       ; 16-bit X & Y
C2/B8F2:	6B         	RTL

; Division Function: divide 16-bit Variable $2C by 16-bit $2E.
; Put Quotient in 16-bit $30, and Remainder in 16-bit $32.
C2/B8F3:	DA         	PHX 
C2/B8F4:	C2 20      	REP #$20       ; Set 16-bit Accumulator
C2/B8F6:	64 30      	STZ $30        ; Zero the quotient
C2/B8F8:	64 32      	STZ $32        ; Zero the remainder
C2/B8FA:	A5 2C      	LDA $2C        ; Load dividend
C2/B8FC:	F0 20      	BEQ $B91E      ; Branch if zero
C2/B8FE:	A5 2E      	LDA $2E        ; Load divisor
C2/B900:	F0 1C      	BEQ $B91E      ; Branch if zero
C2/B902:	A2 10 00   	LDX #$0010
C2/B905:	26 2C      	ROL $2C
C2/B906:	26 32      	ROL $32
C2/B909:	A5 32      	LDA $32
C2/B90B:	38         	SEC 
C2/B90C:	E5 2E      	SBC $2E
C2/B90E:	85 32      	STA $32
C2/B910:	B0 07      	BCS $B919
C2/B912:	A5 32      	LDA $32
C2/B914:	65 2E      	ADC $2E
C2/B916:	85 32      	STA $32
C2/B918:	18         	CLC 
C2/B919:	26 30      	ROL $30
C2/B91B:	CA         	DEX 
C2/B91C:	D0 E7      	BNE $B905      ; Iterate 16 times, as there are 16 bits
                                       ; In dividend
C2/B91E:	A9 00 00   	LDA #$0000     ; TDC would work here
C2/B921:	E2 20      	SEP #$20       ; Set 8-bit Accumulator
C2/B923:	FA         	PLX 
C2/B924:	60         	RTS 

; Called from Bank C1, once each frame
C2/B925:	AD EF EC   	LDA $ECEF
C2/B928:	29 40      	AND #$40
C2/B92A:	D0 01      	BNE $B92D      ; Proceed to C2/B92D if in a timed event?
C2/B92C:	6B         	RTL            ; Otherwise, exit

C2/B92D:	AD 8F 62   	LDA $628F
C2/B930:	F0 04      	BEQ $B936      ; Branch if first time C2/B92D executed this battle, or if
                                       ; A frame delay variable reached zero on the prior call.
C2/B932:	CE 8F 62   	DEC $628F      ; Otherwise, decrement frame delay variable, and skip
                                       ; Running C2/B936 for now.
C2/B935:	6B         	RTL 

; Breaks a timer into minutes and seconds and prepares it for display.
; Is called in battles on escape from Floating Continent, for instance.
C2/B936:	A9 3C      	LDA #$3C       ; Should be #$3B.  see next instruction.
C2/B938:	8D 8F 62   	STA $628F      ; Try to make wait 60 frames until next display update.
                                       ; The problem is, due to the way C2/B92D works, this
                                       ; Will wait 61 frames.  thus, the visual timer will lag
                                       ; 1 to 59 frames behind the real timer.  and after 61
                                       ; Real seconds into a timed battle [possibly sooner], the
                                       ; Visual timer will decrement by 2 seconds on one tick.
C2/B93B:	AF 89 11 00	LDA $001189    ; Bottom byte of timer.  the FC timer starts at
                                       ; 5460h, and counts down each frame.
C2/B93F:	85 2C      	STA $2C
C2/B941:	AF 8A 11 00	LDA $00118A    ; Top byte of timer
C2/B945:	85 2D      	STA $2D
C2/B947:	A2 3C 00   	LDX #$003C
C2/B94A:	86 2E      	STX $2E        ; We're going to divide by 60
C2/B94C:	20 F3 B8   	JSR $B8F3      ; Divide 16-bit Variable $2C by 16-bit $2E.  Put
                                       ; Quotient in 16-bit $30, and Remainder in 16-bit $32.
C2/B94F:	A6 30      	LDX $30
C2/B951:	86 2C      	STX $2C        ; Put quotient into variable $2C
C2/B953:	A2 3C 00   	LDX #$003C
C2/B956:	86 2E      	STX $2E        ; We'll be dividing by 60 again
C2/B958:	20 F3 B8   	JSR $B8F3      ; Divide 16-bit Variable $2C by 16-bit $2E.  Put
                                       ; Quotient in 16-bit $30, and Remainder in 16-bit $32.
C2/B95B:	7B         	TDC 
C2/B95C:	AA         	TAX            ; Zero X, which we'll use as a temporary tens digit.
C2/B95D:	A5 30      	LDA $30        ; We divided by 60 twice, so this variable is our Minutes,
                                       ; And variable $32 our Seconds.
C2/B95F:	38         	SEC 
C2/B960:	E9 0A      	SBC #$0A       ; Subtract 10 from Minutes
C2/B962:	90 03      	BCC $B967      ; If the Minutes had been < 10, branch
C2/B964:	E8         	INX            ; Minutes were >=10, so increment our tens digit.
C2/B965:	80 F8      	BRA $B95F      ; Loop and do it again, until we finally get Minutes < 10
                                       ; [iow, single-digit Minutes].
C2/B967:	18         	CLC 
C2/B968:	69 BE      	ADC #$BE       ; Add BEh to ones digit of our Minutes
C2/B96A:	8D 92 62   	STA $6292      ; Save it
C2/B96D:	8A         	TXA            ; Put tens digit in A
C2/B96E:	D0 04      	BNE $B974      ; Branch if tens digit is nonzero
C2/B970:	A9 FF      	LDA #$FF
C2/B972:	80 03      	BRA $B977      ; Branch and store null where tens digit of Minutes
                                       ; Would appear.
C2/B974:	18         	CLC
C2/B975:	69 B4      	ADC #$B4       ; Add B4h to tens digit of our Minutes
C2/B977:	8D 90 62   	STA $6290      ; Save it
C2/B97A:	7B         	TDC 
C2/B97B:	AA         	TAX            ; Zero X, which we'll use as a temporary tens digit.
C2/B97C:	A5 32      	LDA $32        ; Get our Seconds
C2/B97E:	38         	SEC 
C2/B97F:	E9 0A      	SBC #$0A       ; Subtract 10 from Seconds
C2/B981:	90 03      	BCC $B986      ; If the Seconds had been < 10, branch
C2/B983:	E8         	INX            ; Seconds were >=10, so increment our tens digit.
C2/B984:	80 F8      	BRA $B97E      ; Loop and do it again, until we finally get Seconds < 10
                                       ; [iow, single-digit Seconds].
C2/B986:	18         	CLC 
C2/B987:	69 BE      	ADC #$BE       ; Add BEh to ones digit of our Seconds
C2/B989:	8D 98 62   	STA $6298      ; Save it
C2/B98C:	8A         	TXA            ; Put tens digit in A
C2/B98D:	18         	CLC
C2/B98E:	69 B4      	ADC #$B4       ; Add B4h to tens digit of our Seconds
C2/B991:	8D 96 62   	STA $6296      ; Save it.  note that we're not bothering to check for
                                       ; A zero tens digit of Seconds, as blanking the digit
                                       ; Would make no sense given we're displaying Minutes
                                       ; Directly to the left of it.
C2/B993:	A9 C1      	LDA #$C1
C2/B996:	8D 94 62   	STA $6294
C2/B998:	6B         	RTL 

C2/B999:	AE F6 7A   	LDX $7AF6
C2/B99C:	BD D3 74   	LDA $74D3,X
C2/B99F:	C2 20      	REP #$20
C2/B9A1:	0A         	ASL 
C2/B9A2:	0A         	ASL 
C2/B9A3:	85 10      	STA $10
C2/B9A5:	BD 30 6A   	LDA $6A30,X
C2/B9A8:	29 FF 00   	AND #$00FF
C2/B9AB:	0A         	ASL 
C2/B9AC:	0A         	ASL 
C2/B9AD:	0A         	ASL 
C2/B9AE:	85 12      	STA $12
C2/B9B0:	BD 3C 6A   	LDA $6A3C,X
C2/B9B3:	18         	CLC 
C2/B9B4:	65 12      	ADC $12
C2/B9B6:	38         	SEC 
C2/B9B7:	E5 10      	SBC $10
C2/B9B9:	9D 3C 6A   	STA $6A3C,X
C2/B9BC:	7B         	TDC 
C2/B9BD:	E2 20      	SEP #$20
C2/B9BF:	6B         	RTL 

C2/B9C0:	AE F6 7A   	LDX $7AF6
C2/B9C3:	BD D3 74   	LDA $74D3,X
C2/B9C6:	C2 20      	REP #$20
C2/B9C8:	0A         	ASL 
C2/B9C9:	0A         	ASL 
C2/B9CA:	85 10      	STA $10
C2/B9CC:	BD 30 6A   	LDA $6A30,X
C2/B9CF:	29 FF 00   	AND #$00FF
C2/B9D2:	0A         	ASL 
C2/B9D3:	0A         	ASL 
C2/B9D4:	0A         	ASL 
C2/B9D5:	85 12      	STA $12
C2/B9D7:	BD 3C 6A   	LDA $6A3C,X
C2/B9DA:	18         	CLC 
C2/B9DB:	65 10      	ADC $10
C2/B9DD:	38         	SEC 
C2/B9DE:	E5 12      	SBC $12
C2/B9E0:	9D 3C 6A   	STA $6A3C,X
C2/B9E3:	7B         	TDC 
C2/B9E4:	E2 20      	SEP #$20
C2/B9E6:	6B         	RTL 

; Picture a 4x4 grid of 32x32-pixel monster subsprites with 16
; Possible positions on it:
; 
; 00 01 02 03
; 04 05 06 07
; 08 09 0A 0B
; 0C 0D 0E 0F
; 
; The structures below are for each of those 16 positions, and
; The positions are used by the monster formation molds.)
; 
; 1st byte: horizontal grid position * 32 ?
; 2nd byte: vertical grid position * 32 ?
; 3rd byte: position's offset in terms of 8x8-pixel tile units
; 4th byte: always 01 ??)

; Position 00
C2/B9E7:	0000
C2/B9E9:	0001

; Position 01
C2/B9EB:	2000
C2/B9ED:	0401

; Position 02
C2/B9EF:	4000
C2/B9F1:	0801

; Position 03
C2/B9F3:	6000
C2/B9F5:	0C01

; Position 04
C2/B9F7:	0020
C2/B9F9:	4001

; Position 05
C2/B9FB:	2020
C2/B9FD:	4401

; Position 06
C2/B9FF:	4020
C2/BA01:	4801

; Position 07
C2/BA03:	6020
C2/BA05:	4C01

; Position 08
C2/BA07:	0040
C2/BA09:	8001

; Position 09
C2/BA0B:	2040
C2/BA0D:	8401

; Position 0A
C2/BA0F:	4040
C2/BA11:	8801

; Position 0B
C2/BA13:	6040
C2/BA15:	8C01

; Position 0C
C2/BA17:	0060
C2/BA19:	C001

; Position 0D
C2/BA1B:	2060
C2/BA1D:	C401

; Position 0E
C2/BA1F:	4060
C2/BA21:	C801

; Position 0F
C2/BA23:	6060
C2/BA25:	CC01

C2/BA27:	A0 01 00   	LDY #$0001
C2/BA2A:	B7 8F      	LDA [$8F],Y
C2/BA2C:	29 7F      	AND #$7F
C2/BA2E:	85 10      	STA $10
C2/BA30:	64 12      	STZ $12
C2/BA32:	7B         	TDC
C2/BA33:	AA         	TAX
C2/BA34:	A5 10      	LDA $10
C2/BA36:	DD C6 2E   	CMP $2EC6,X
C2/BA39:	F0 0E      	BEQ $BA49
C2/BA3B:	E6 12      	INC $12
C2/BA3D:	8A         	TXA
C2/BA3E:	18         	CLC
C2/BA3F:	69 20      	ADC #$20
C2/BA41:	AA         	TAX
C2/BA42:	E0 80 00   	CPX #$0080
C2/BA45:	D0 ED      	BNE $BA34
C2/BA47:	18         	CLC
C2/BA48:	60         	RTS

C2/BA49:	38         	SEC 
C2/BA4A:	60         	RTS 

C2/BA4B:	20 27 BA   	JSR $BA27
C2/BA4E:	90 1D      	BCC $BA6D
C2/BA50:	B7 8F      	LDA [$8F],Y
C2/BA52:	10 2D      	BPL $BA81
C2/BA54:	AE D6 64   	LDX $64D6
C2/BA57:	86 14      	STX $14
C2/BA59:	AE D8 64   	LDX $64D8
C2/BA5C:	86 16      	STX $16
C2/BA5E:	7B         	TDC 
C2/BA5F:	AA         	TAX 
C2/BA60:	A5 12      	LDA $12
C2/BA62:	DD D6 64   	CMP $64D6,X
C2/BA65:	F0 09      	BEQ $BA70
C2/BA67:	E8         	INX 
C2/BA68:	E0 04 00   	CPX #$0004
C2/BA6B:	D0 F5      	BNE $BA62
C2/BA6D:	4C C8 BA   	JMP $BAC8

C2/BA70:	A9 FF      	LDA #$FF
C2/BA73:	9D 14 00   	STA $0014,X
C2/BA75:	A2 FF FF   	LDX #$FFFF
C2/BA77:	8E D6 64   	STX $64D6
C2/BA7B:	8E D8 64   	STX $64D8
C2/BA7E:	4C B6 BA   	JMP $BAB6

C2/BA81:	7B         	TDC 
C2/BA82:	AA         	TAX 
C2/BA83:	A5 12      	LDA $12
C2/BA85:	DD D6 64   	CMP $64D6,X
C2/BA88:	F0 3E      	BEQ $BAC8
C2/BA8A:	E8         	INX 
C2/BA8B:	E0 04 00   	CPX #$0004
C2/BA8E:	D0 F5      	BNE $BA85
C2/BA90:	A2 FF FF   	LDX #$FFFF
C2/BA91:	DA         	PHX
C2/BA92:	86 14      	STX $14
C2/BA94:	86 16      	STX $16
C2/BA96:	7B         	TDC
C2/BA99:	AA         	TAX 
C2/BA9A:	BD D6 64   	LDA $64D6,X
C2/BA9D:	30 04      	BMI $BAA3
C2/BA9F:	A8         	TAY 
C2/BAA0:	99 14 00   	STA $0014,Y
C2/BAA3:	E8         	INX 
C2/BAA4:	E0 04 00   	CPX #$0004
C2/BAA7:	D0 F1      	BNE $BA9A
C2/BAA9:	A5 12      	LDA $12
C2/BAAB:	A8         	TAY
C2/BAAC:	99 14 00   	STA $0014,Y
C2/BAAF:	FA         	PLX 
C2/BAB0:	8E D6 64   	STX $64D6
C2/BAB3:	8E D8 64   	STX $64D8
C2/BAB6:	7B         	TDC 
C2/BAB7:	AA         	TAX 
C2/BAB8:	A8         	TAY 
C2/BAB9:	B9 14 00   	LDA $0014,Y
C2/BABC:	30 04      	BMI $BAC2
C2/BABE:	9D D6 64   	STA $64D6,X
C2/BAC1:	E8         	INX 
C2/BAC2:	C8         	INY 
C2/BAC3:	C0 04 00   	CPY #$0004
C2/BAC6:	D0 F1      	BNE $BAB9
C2/BAC8:	A6 8F      	LDX $8F
C2/BACA:	E8         	INX 
C2/BACB:	86 8F      	STX $8F
C2/BACD:	7B         	TDC 
C2/BACE:	AA         	TAX 
C2/BACF:	C2 20      	REP #$20
C2/BAD1:	A9 FF 21   	LDA #$21FF
C2/BAD4:	9D 95 5B   	STA $5B95,X
C2/BAD7:	E8         	INX 
C2/BAD8:	E8         	INX 
C2/BAD9:	E0 70 00   	CPX #$0070
C2/BADC:	D0 F6      	BNE $BAD4
C2/BADE:	7B         	TDC
C2/BADF:	E2 20      	SEP #$20
C2/BAE1:	6B         	RTL 

C2/BAE2:	20 27 BA   	JSR $BA27
C2/BAE5:	90 24      	BCC $BB0B
C2/BAE7:	A5 12      	LDA $12
C2/BAE9:	AA         	TAX 
C2/BAEA:	BF 01 1A C1	LDA $C11A01,X
C2/BAEE:	85 12      	STA $12
C2/BAF0:	B7 8F      	LDA [$8F],Y
C2/BAF2:	30 0A      	BMI $BAFE
C2/BAF4:	AD 4E 2F   	LDA $2F4E
C2/BAF7:	05 12      	ORA $12
C2/BAF9:	8D 4E 2F   	STA $2F4E
C2/BAFC:	80 0D      	BRA $BB0B
C2/BAFE:	AD 4C 2F   	LDA $2F4C
C2/BB01:	05 12      	ORA $12
C2/BB03:	8D 4C 2F   	STA $2F4C
C2/BB06:	A9 FF      	LDA #$FF
C2/BB08:	9D 01 40   	STA $4001,X
C2/BB0B:	A6 8F      	LDX $8F
C2/BB0D:	E8         	INX 
C2/BB0E:	86 8F      	STX $8F
C2/BB10:	6B         	RTL 

C2/BB11:	29 0F      	AND #$0F
C2/BB13:	0A         	ASL
C2/BB14:	AA         	TAX 
C2/BB15:	7C 18 BB   	JMP ($BB18,X)

; Data - function pointers
C2/BB18:	46BB
C2/BB1A:	1CBB

C2/BB1C:	A0 02 00   	LDY #$0002
C2/BB1F:	B1 76      	LDA ($76),Y
C2/BB21:	85 22      	STA $22
C2/BB23:	A9 0C      	LDA #$0C       ; SwdTech name length
C2/BB25:	85 24      	STA $24
C2/BB27:	22 D5 18 C1	JSL $C118D5    ; Multiplier function
C2/BB2B:	A6 26      	LDX $26
C2/BB2D:	7B         	TDC
C2/BB2E:	A8         	TAY 
C2/BB2F:	BF 40 3C CF	LDA $CF3C40,X  ; SwdTech names
C2/BB33:	C9 FF      	CMP #$FF
C2/BB35:	F0 0A      	BEQ $BB41
C2/BB37:	99 D5 57   	STA $57D5,Y
C2/BB3A:	E8         	INX 
C2/BB3B:	C8         	INY 
C2/BB3C:	C0 0C 00   	CPY #$000C
C2/BB3F:	D0 EE      	BNE $BB2F
C2/BB41:	7B         	TDC 
C2/BB42:	99 D5 57   	STA $57D5,Y
C2/BB45:	6B         	RTL 

C2/BB46:	A0 02 00   	LDY #$0002
C2/BB49:	B1 76      	LDA ($76),Y
C2/BB4B:	85 22      	STA $22
C2/BB4D:	A9 0A      	LDA #$0A       ; Esper attack name length
C2/BB4F:	85 24      	STA $24
C2/BB51:	22 D5 18 C1	JSL $C118D5    ; Multiplier function
C2/BB55:	A6 26      	LDX $26
C2/BB57:	7B         	TDC
C2/BB58:	A8         	TAY 
C2/BB59:	BF 8F FE E6	LDA $E6FE8F,X  ; Esper attack names
C2/BB5D:	C9 FF      	CMP #$FF
C2/BB5F:	F0 0A      	BEQ $BB6B
C2/BB61:	99 D5 57   	STA $57D5,Y
C2/BB64:	E8         	INX 
C2/BB65:	C8         	INY 
C2/BB66:	C0 0A 00   	CPY #$000A
C2/BB69:	D0 EE      	BNE $BB59
C2/BB6B:	7B         	TDC 
C2/BB6C:	99 D5 57   	STA $57D5,Y
C2/BB6F:	6B         	RTL 

; Number of bytes to shift enemy's Imp sprite forward in the monster
; Graphics buffer, so that it's centered properly.  Provides the
; Bottom byte of a 2-byte pointer, and is indexed from Bank C1 by
; [original enemy's width / 8] * 2.  Keep in mind that an 8x8-pixel
; Tile is 32 bytes.)
C2/BB70:	0000    	; If 000 pixels wide (don't shift right)
C2/BB72:	0000    	; If 008 pixels wide
C2/BB74:	0000    	; If 016 pixels wide
C2/BB76:	0000    	; If 024 pixels wide
C2/BB78:	0000    	; If 032 pixels wide
C2/BB7A:	2000    	; If 040 pixels wide (shift right 1 tile)
C2/BB7C:	2000    	; If 048 pixels wide
C2/BB7E:	4000    	; If 056 pixels wide (shift right 2 tiles)
C2/BB80:	4000    	; If 064 pixels wide
C2/BB82:	6000    	; If 072 pixels wide (shift right 3 tiles)
C2/BB84:	6000    	; If 080 pixels wide
C2/BB86:	8000    	; If 088 pixels wide (shift right 4 tiles)
C2/BB88:	8000    	; If 096 pixels wide
C2/BB8A:	A000    	; If 104 pixels wide (shift right 5 tiles)
C2/BB8C:	A000    	; If 112 pixels wide
C2/BB8E:	C000    	; If 120 pixels wide (shift right 6 tiles)
C2/BB90:	C000    	; If 128 pixels wide

; Number of bytes to shift enemy's Imp sprite forward in the monster
; Graphics buffer, so that it's centered properly.  Provides the top
; Byte of a 2-byte pointer, and is indexed from Bank C1 by
; [original enemy's height / 8] * 2.  Keep in mind that an 8x8-pixel
; Tile is 32 bytes, and each row in the buffer has 16 tiles.)
C2/BB92:	0000    	; If 0 pixels tall (don't shift down)
C2/BB94:	0000    	; If 8 pixels tall
C2/BB96:	0000    	; If 16 pixels tall
C2/BB98:	0000    	; If 24 pixels tall
C2/BB9A:	0000    	; If 32 pixels tall
C2/BB9C:	0002    	; If 40 pixels tall (shift down 1 tile)
C2/BB9E:	0002    	; If 48 pixels tall
C2/BBA0:	0004    	; If 56 pixels tall (shift down 2 tiles)
C2/BBA2:	0004    	; If 64 pixels tall
C2/BBA4:	0006    	; If 72 pixels tall (shift down 3 tiles)
C2/BBA6:	0006    	; If 80 pixels tall
C2/BBA8:	0008    	; If 88 pixels tall (shift down 4 tiles)
C2/BBAA:	0008    	; If 96 pixels tall
C2/BBAC:	000A    	; If 104 pixels tall (shift down 5 tiles)
C2/BBAE:	000A    	; If 112 pixels tall
C2/BBB0:	000C    	; If 120 pixels tall (shift down 6 tiles)
C2/BBB2:	000C    	; If 128 pixels tall

C2/BBB4:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/BBB7:	DA         	PHX 
C2/BBB8:	22 69 24 C1	JSR $C12469
C2/BBBC:	7B         	TDC 
C2/BBBD:	AA         	TAX 
C2/BBBE:	BD 60 7E   	LDA $7E60,X
C2/BBC1:	9D C0 7F   	STA $7FC0,X
C2/BBC4:	E8         	INX 
C2/BBC5:	E0 20 00   	CPX #$0020
C2/BBC8:	D0 F4      	BNE $BBBE
C2/BBCA:	EE B0 62   	INC $62B0
C2/BBCC:	FA         	PLX
C2/BBCD:	6B         	RTL

; Used by Crusader, for Purifier/Collapse of Heaven and Earth/
; Apocalypse attack
C2/BBCF:	AE 69 61   	LDX $6169      ; From C1/CBD6
C2/BBD2:	7B         	TDC            ; Set accumulator to 0
C2/BBD3:	A8         	TAY            ; Set Y to 0
C2/BBD4:	BF 40 78 D2	LDA $D27840,X
C2/BBD8:	99 E0 7F   	STA $7FE0,Y    ; Write over character 4's palette and
                                       ; Reflect's barrier palette, set's left
                                       ; Sprite palette
C2/BBDB:	99 E0 7D   	STA $7DE0,Y    ; Same as above
C2/BBDE:	E8         	INX 
C2/BBDF:	C8         	INY 
C2/BBE0:	C0 20 00   	CPY #$0020
C2/BBE3:	D0 EF      	BNE $BBD4
C2/BBE5:	6B         	RTL 

; Random number generator
C2/BBE6:	DA         	PHX            ; From C2/B1CF
C2/BBE7:	A5 72      	LDA $72
C2/BBE9:	AA         	TAX 
C2/BBEA:	E6 72      	INC $72
C2/BBEC:	BF 00 FD C0	LDA $C0FD00,X  ; Get a random number
C2/BBF0:	FA         	PLX 
C2/BBF1:	60         	RTS 

C2/BBF2:	C0
C2/BBF3:	C1
C2/BBF4:	C2
C2/BBF5:	C3
C2/BBF6:	C4
C2/BBF7:	C5
C2/BBF8:	C1
C2/BBF9:	C3

C2/BBFA:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/BBFD:	C2 20      	REP #$20
C2/BBFF:	9E CE 74   	STZ $74CE,X
C2/BC02:	9E D0 74   	STZ $74D0,X
C2/BC05:	E2 20      	SEP #$20
C2/BC07:	6B         	RTL 

C2/BC08:	A5 0E      	LDA $0E
C2/BC0A:	29 07      	AND #$07
C2/BC0C:	D0 29      	BNE $BC37

C2/BC0E:	20 E6 BB   	JSR $BBE6      ; Random number generator
C2/BC11:	29 07      	AND #$07
C2/BC13:	AA         	TAX
C2/BC14:	BF F2 BB C2	LDA $C2BBF2,X
C2/BC18:	C2 20      	REP #$20
C2/BC1A:	0A         	ASL 
C2/BC1B:	0A         	ASL 
C2/BC1C:	0A         	ASL 
C2/BC1D:	0A         	ASL 
C2/BC1E:	AA         	TAX 
C2/BC1F:	7B         	TDC 
C2/BC20:	A8         	TAY 
C2/BC21:	BF 00 60 D2	LDA $D26000,X
C2/BC25:	99 60 7F   	STA $7F60,Y
C2/BC28:	99 70 7F   	STA $7F70,Y
C2/BC2B:	E8         	INX 
C2/BC2C:	E8         	INX 
C2/BC2D:	C8         	INY 
C2/BC2E:	C8         	INY 
C2/BC2F:	C0 10 00   	CPY #$0010
C2/BC32:	D0 ED      	BNE $BC21
C2/BC34:	7B         	TDC 
C2/BC35:	E2 20      	SEP #$20
C2/BC37:	6B         	RTL 

C2/BC38:	A0 01 00   	LDY #$0001
C2/BC3B:	AD AE 62   	LDA $62AE
C2/BC3E:	18         	CLC 
C2/BC3F:	77 5B      	ADC [$5B],Y
C2/BC41:	8D AE 62   	STA $62AE
C2/BC44:	85 12      	STA $12
C2/BC46:	A9 E0      	LDA #$E0
C2/BC48:	8D 96 89   	STA $8996
C2/BC4B:	A2 5C 02   	LDX #$025C
C2/BC4E:	A0 04 00   	LDY #$0004
C2/BC51:	64 10      	STZ $10
C2/BC53:	A5 10      	LDA $10
C2/BC55:	4A         	LSR A
C2/BC56:	4A         	LSR A
C2/BC57:	38         	SEC 
C2/BC58:	E5 12      	SBC $12
C2/BC5A:	10 01      	BPL $BC5D
C2/BC5C:	7B         	TDC 
C2/BC5D:	09 80      	ORA #$80
C2/BC5F:	99 96 89   	STA $8996,Y
C2/BC62:	9D 96 89   	STA $8996,X
C2/BC65:	CA         	DEX 
C2/BC66:	CA         	DEX 
C2/BC67:	CA         	DEX 
C2/BC68:	CA         	DEX 
C2/BC69:	C8         	INY 
C2/BC6A:	C8         	INY 
C2/BC6B:	C8         	INY 
C2/BC6C:	C8         	INY 
C2/BC6D:	E6 10      	INC $10
C2/BC6F:	A5 10      	LDA $10
C2/BC71:	C9 4C      	CMP #$4C
C2/BC73:	D0 DE      	BNE $BC53
C2/BC75:	A4 5B      	LDY $5B
C2/BC77:	C8         	INY 
C2/BC78:	84 5B      	STY $5B
C2/BC7A:	EE AD 62   	INC $62AD
C2/BC7D:	AE F6 7A   	LDX $7AF6
C2/BC80:	6B         	RTL 

C2/BC81:	C2 20      	REP #$20
C2/BC83:	7B         	TDC 
C2/BC84:	AA         	TAX 
C2/BC85:	9D F5 44   	STA $44F5,X
C2/BC88:	9D 75 44   	STA $4475,X
C2/BC8B:	9D B0 63   	STA $63B0,X
C2/BC8E:	E8         	INX 
C2/BC8F:	E8         	INX 
C2/BC90:	E0 80 00   	CPX #$0080
C2/BC93:	D0 F0      	BNE $BC85
C2/BC95:	7B         	TDC 
C2/BC96:	E2 20      	SEP #$20
C2/BC98:	6B         	RTL 

C2/BC99:	7B         	TDC 
C2/BC9A:	AA         	TAX 
C2/BC9B:	BF 00 FD C0	LDA $C0FD00,X
C2/BC9F:	29 1F      	AND #$1F
C2/BCA1:	9D F5 44   	STA $44F5,X
C2/BCA4:	9E F6 44   	STZ $44F6,X
C2/BCA7:	9E 75 44   	STZ $4475,X
C2/BCAA:	9E 76 44   	STZ $4476,X
C2/BCAD:	E8         	INX 
C2/BCAE:	E8         	INX 
C2/BCAF:	E8         	INX 
C2/BCB0:	E8         	INX 
C2/BCB1:	E0 80 00   	CPX #$0080
C2/BCB4:	D0 E5      	BNE $BC9B
C2/BCB6:	6B         	RTL 

C2/BCB7:	C2 20      	REP #$20
C2/BCB9:	7B         	TDC 
C2/BCBA:	AA         	TAX 
C2/BCBB:	BD F5 44   	LDA $44F5,X
C2/BCBE:	F0 05      	BEQ $BCC5
C2/BCC0:	DE F5 44   	DEC $44F5,X
C2/BCC3:	80 11      	BRA $BCD6
C2/BCC5:	BD 75 44   	LDA $4475,X
C2/BCC8:	38         	SEC 
C2/BCC9:	E9 08 00   	SBC #$0008
C2/BCCC:	9D 75 44   	STA $4475,X
C2/BCCF:	18         	CLC 
C2/BCD0:	7D B0 63   	ADC $63B0,X
C2/BCD3:	9D B0 63   	STA $63B0,X
C2/BCD6:	E8         	INX 
C2/BCD7:	E8         	INX 
C2/BCD8:	E8         	INX 
C2/BCD9:	E8         	INX 
C2/BCDA:	E0 80 00   	CPX #$0080
C2/BCDD:	D0 DC      	BNE $BCBB
C2/BCDF:	7B         	TDC 
C2/BCE0:	E2 20      	SEP #$20
C2/BCE2:	6B         	RTL 

C2/BCE3:	A0 01 00   	LDY #$0001
C2/BCE6:	B7 5B      	LDA [$5B],Y
C2/BCE8:	D0 15      	BNE $BCFF
C2/BCEA:	7B         	TDC 
C2/BCEB:	AA         	TAX 
C2/BCEC:	C2 20      	REP #$20
C2/BCEE:	A9 08 F7   	LDA #$F708
C2/BCF1:	9D 21 9A   	STA $9A21,X
C2/BCF4:	E8         	INX 
C2/BCF5:	E8         	INX 
C2/BCF6:	E8         	INX 
C2/BCF7:	E8         	INX 
C2/BCF8:	E0 5C 02   	CPX #$025C
C2/BCFB:	D0 F4      	BNE $BCF1
C2/BCFD:	80 3B      	BRA $BD3A
C2/BCFF:	C2 20      	REP #$20
C2/BD01:	0A         	ASL A
C2/BD02:	0A         	ASL A
C2/BD03:	85 10      	STA $10
C2/BD05:	7B         	TDC 
C2/BD06:	AA         	TAX 
C2/BD07:	A0 5C 02   	LDY #$025C
C2/BD0A:	A9 FF 00   	LDA #$00FF
C2/BD0D:	9D 21 9A   	STA $9A21,X
C2/BD10:	99 21 9A   	STA $9A21,Y
C2/BD13:	E8         	INX 
C2/BD14:	E8         	INX 
C2/BD15:	E8         	INX 
C2/BD16:	E8         	INX 
C2/BD17:	88         	DEY 
C2/BD18:	88         	DEY 
C2/BD19:	88         	DEY 
C2/BD1A:	88         	DEY 
C2/BD1B:	E4 10      	CPX $10
C2/BD1D:	D0 EE      	BNE $BD0D
C2/BD1F:	E0 30 01   	CPX #$0130
C2/BD22:	F0 16      	BEQ $BD3A
C2/BD24:	A9 08 F7   	LDA #$F708
C2/BD27:	9D 21 9A   	STA $9A21,X
C2/BD2A:	99 21 9A   	STA $9A21,Y
C2/BD2D:	E8         	INX 
C2/BD2E:	E8         	INX 
C2/BD2F:	E8         	INX 
C2/BD30:	E8         	INX 
C2/BD31:	88         	DEY 
C2/BD32:	88         	DEY 
C2/BD33:	88         	DEY 
C2/BD34:	88         	DEY 
C2/BD35:	E0 30 01   	CPX #$0130
C2/BD38:	D0 ED      	BNE $BD27
C2/BD3A:	E6 5B      	INC $5B
C2/BD3C:	7B         	TDC 
C2/BD3D:	E2 20      	SEP #$20
C2/BD3F:	EE 97 61   	INC $6197
C2/BD42:	6B         	RTL 

C2/BD43:	A9 FF      	LDA #$FF
C2/BD45:	8D 9D 62   	STA $629D
C2/BD48:	9C 47 2F   	STZ $2F47
C2/BD4B:	9C 92 61   	STZ $6192
C2/BD4E:	C2 20      	REP #$20
C2/BD50:	7B         	TDC 
C2/BD51:	AA         	TAX 
C2/BD52:	A9 FF FF   	LDA #$FFFF
C2/BD55:	9D 46 62   	STA $6246,X
C2/BD58:	E8         	INX 
C2/BD59:	E8         	INX 
C2/BD5A:	E0 10 00   	CPX #$0010
C2/BD5D:	D0 F6      	BNE $BD55
C2/BD5F:	7B         	TDC 
C2/BD60:	E2 20      	SEP #$20
C2/BD62:	AD 49 2F   	LDA $2F49
C2/BD65:	10 2E      	BPL $BD95
C2/BD67:	AD 4A 2F   	LDA $2F4A
C2/BD6A:	85 22      	STA $22
C2/BD6C:	A9 18      	LDA #$18
C2/BD6E:	85 24      	STA $24
C2/BD70:	22 D5 18 C1	JSR $C118D5
C2/BD74:	A6 26      	LDX $26
C2/BD76:	BF 01 FD D0	LDA $D0FD01,X
C2/BD7A:	C9 FF      	CMP #$FF
C2/BD7C:	F0 06      	BEQ $BD84
C2/BD7E:	8D B8 EC   	STA $ECB8
C2/BD81:	9C B9 EC   	STZ $ECB9
C2/BD84:	BF 02 FD D0	LDA $D0FD02,X
C2/BD88:	8D 46 2F   	STA $2F46
C2/BD8B:	BF 03 FD D0	LDA $D0FD03,X
C2/BD8F:	8D 9D 62   	STA $629D
C2/BD92:	20 6E BE   	JSR $BE6E

C2/BD95:	AD 4B 2F    LDA $2F4B      ; Monster Aux. Byte 4
C2/BD98:	30 36       BMI $BDD0      ; Branch if "No music" bit is set
C2/BD9A:	EE ED E9    INC $E9ED  
C2/BD9D:	A9 10       LDA #$10    
C2/BD9F:	8D 00 13    STA $1300  
C2/BDA2:	A9 FF       LDA #$FF       ; Volume
C2/BDA4:	8D 02 13    STA $1302      ; Save volume
C2/BDA7:	AD 9D 62    LDA $629D  
C2/BDAA:	C9 FF       CMP #$FF        
C2/BDAC:	D0 11       BNE $BDBF    
C2/BDAE:	AD 4B 2F    LDA $2F4B      ; Monster Aux. Byte 4
C2/BDB1:	29 38       AND #$38       ; Isolate song
C2/BDB3:	4A          LSR A      
C2/BDB4:	4A          LSR A      
C2/BDB5:	4A          LSR A          ; Get an index from 0 to 7)
C2/BDB6:	AA          TAX        
C2/BDB7:	BF 3B BF C2 LDA $C2BF3B,X  ; Load song ID
C2/BDBB:	C9 FF       CMP #$FF       
C2/BDBD:	F0 0E       BEQ $BDCD      ; Branch if we keep the current music playing
C2/BDBF:	8D 01 13    STA $1301      ; Save song ID
C2/BDC2:	AD E4 11    LDA $11E4  
C2/BDC5:	29 08       AND #$08
C2/BDC7:	D0 04       BNE $BDCD
C2/BDC9:	22 04 00 C5 JSL $C50004    ; Play song

C2/BDCD:	9C ED E9   	STZ $E9ED
C2/BDD0:	7B         	TDC 
C2/BDD1:	AA         	TAX 
C2/BDD2:	A8         	TAY 
C2/BDD3:	C2 20      	REP #$20
C2/BDD5:	9E C7 2E   	STZ $2EC7,X
C2/BDD8:	B9 46 62   	LDA $6246,Y
C2/BDDB:	C9 FF FF   	CMP #$FFFF
C2/BDDE:	F0 03      	BEQ $BDE3
C2/BDE0:	FE C7 2E   	INC $2EC7,X
C2/BDE3:	98         	TYA 
C2/BDE4:	18         	CLC 
C2/BDE5:	69 04 00   	ADC #$0004
C2/BDE8:	A8         	TAY 
C2/BDE9:	8A         	TXA 
C2/BDEA:	18         	CLC 
C2/BDEB:	69 20 00   	ADC #$0020
C2/BDEE:	AA         	TAX 
C2/BDEF:	E0 80 00   	CPX #$0080
C2/BDF2:	D0 E1      	BNE $BDD5
C2/BDF4:	7B         	TDC 
C2/BDF5:	E2 20      	SEP #$20
C2/BDF7:	A9 01      	LDA #$01
C2/BDF9:	85 10      	STA $10
C2/BDFB:	7B         	TDC 
C2/BDFC:	AA         	TAX 
C2/BDFD:	BD C6 2E   	LDA $2EC6,X
C2/BE00:	C9 2F      	CMP #$2F
C2/BE02:	D0 08      	BNE $BE0C
C2/BE04:	AD 92 61   	LDA $6192
C2/BE07:	05 10      	ORA $10
C2/BE09:	8D 92 61   	STA $6192
C2/BE0C:	06 10      	ASL $10
C2/BE0E:	8A         	TXA 
C2/BE0F:	18         	CLC 
C2/BE10:	69 20      	ADC #$20
C2/BE12:	AA         	TAX 
C2/BE13:	C9 80      	CMP #$80
C2/BE15:	D0 E6      	BNE $BDFD
C2/BE17:	AD 92 61   	LDA $6192
C2/BE1A:	49 FF      	EOR #$FF
C2/BE1C:	8D 92 61   	STA $6192
C2/BE1F:	EE ED E9   	INC $E9ED
C2/BE22:	A9 82      	LDA #$82
C2/BE24:	8D 00 13   	STA $1300
C2/BE27:	7B         	TDC 
C2/BE28:	8D 01 13   	STA $1301
C2/BE2B:	3A         	DEC A
C2/BE2C:	8D 02 13   	STA $1302
C2/BE2F:	AD E4 11   	LDA $11E4
C2/BE32:	29 08      	AND #$08
C2/BE34:	D0 04      	BNE $BE3A
C2/BE36:	22 04 00 C5	JSR $C50004
C2/BE3A:	9C ED E9   	STZ $E9ED
C2/BE3D:	AF 4F 1D 00	LDA $001D4F
C2/BE41:	29 40      	AND #$40
C2/BE43:	8D 9C 62   	STA $629C
C2/BE46:	AF 54 1D 00	LDA $001D54
C2/BE4A:	10 19      	BPL $BE65
C2/BE4C:	AF 4F 1D 00	LDA $001D4F
C2/BE50:	85 10      	STA $10
C2/BE52:	7B         	TDC 
C2/BE53:	AA         	TAX 
C2/BE54:	A5 10      	LDA $10
C2/BE56:	29 01      	AND #$01
C2/BE58:	9D 98 61   	STA $6198,X
C2/BE5B:	46 10      	LSR $10
C2/BE5D:	E8         	INX 
C2/BE5E:	E0 04 00   	CPX #$0004
C2/BE61:	D0 F1      	BNE $BE54
C2/BE63:	80 08      	BRA $BE6D
C2/BE65:	7B         	TDC 
C2/BE66:	AA         	TAX 
C2/BE67:	8E 98 61   	STX $6198
C2/BE6A:	8E 9A 61   	STX $619A
C2/BE6D:	6B         	RTL 

C2/BE6E:	DA         	PHX 
C2/BE6F:	BF 00 FD D0	LDA $D0FD00,X
C2/BE73:	30 74      	BMI $BEE9
C2/BE75:	A9 04      	LDA #$04
C2/BE77:	85 10      	STA $10
C2/BE79:	BF 04 FD D0	LDA $D0FD04,X
C2/BE7D:	C9 FF      	CMP #$FF
C2/BE7F:	F0 66      	BEQ $BEE7
C2/BE81:	29 3F      	AND #$3F
C2/BE83:	85 12      	STA $12
C2/BE85:	64 14      	STZ $14
C2/BE87:	7B         	TDC 
C2/BE88:	A8         	TAY 
C2/BE89:	A9 01      	LDA #$01
C2/BE8B:	85 18      	STA $18
C2/BE8D:	B9 C6 2E   	LDA $2EC6,Y
C2/BE90:	C5 12      	CMP $12
C2/BE92:	D0 3D      	BNE $BED1
C2/BE94:	BF 04 FD D0	LDA $D0FD04,X
C2/BE98:	29 40      	AND #$40
C2/BE9A:	F0 05      	BEQ $BEA1
C2/BE9C:	A5 18      	LDA $18
C2/BE9E:	8D 47 2F   	STA $2F47
C2/BEA1:	BF 04 FD D0	LDA $D0FD04,X
C2/BEA5:	10 08      	BPL $BEAF
C2/BEA7:	A5 18      	LDA $18
C2/BEA9:	0D 92 61   	ORA $6192
C2/BEAC:	8D 92 61   	STA $6192
C2/BEAF:	A5 14      	LDA $14
C2/BEB1:	0A         	ASL A
C2/BEB2:	0A         	ASL A
C2/BEB3:	A8         	TAY 
C2/BEB4:	BF 07 FD D0	LDA $D0FD07,X
C2/BEB8:	C9 FF      	CMP #$FF
C2/BEBA:	F0 22      	BEQ $BEDE
C2/BEBC:	C2 20      	REP #$20
C2/BEBE:	0A         	ASL A
C2/BEBF:	99 46 62   	STA $6246,Y
C2/BEC2:	BF 08 FD D0	LDA $D0FD08,X
C2/BEC6:	29 FF 00   	AND #$00FF
C2/BEC9:	0A         	ASL A
C2/BECA:	99 48 62   	STA $6248,Y
C2/BECD:	E2 20      	SEP #$20
C2/BECF:	80 0D      	BRA $BEDE
C2/BED1:	06 18      	ASL $18
C2/BED3:	E6 14      	INC $14
C2/BED5:	98         	TYA 
C2/BED6:	18         	CLC 
C2/BED7:	69 20      	ADC #$20
C2/BED9:	A8         	TAY 
C2/BEDA:	C9 80      	CMP #$80
C2/BEDC:	D0 AF      	BNE $BE8D
C2/BEDE:	E8         	INX 
C2/BEDF:	E8         	INX 
C2/BEE0:	E8         	INX 
C2/BEE1:	E8         	INX 
C2/BEE2:	E8         	INX 
C2/BEE3:	C6 10      	DEC $10
C2/BEE5:	D0 92      	BNE $BE79
C2/BEE7:	FA         	PLX 
C2/BEE8:	60         	RTS 

C2/BEE9:	7B         	TDC 
C2/BEEA:	A8         	TAY 
C2/BEEB:	A9 01      	LDA #$01
C2/BEED:	85 10      	STA $10
C2/BEEF:	BF 04 FD D0	LDA $D0FD04,X
C2/BEF3:	C9 FF      	CMP #$FF
C2/BEF5:	F0 17      	BEQ $BF0E
C2/BEF7:	29 40      	AND #$40
C2/BEF9:	F0 05      	BEQ $BF00
C2/BEFB:	A5 10      	LDA $10
C2/BEFD:	8D 47 2F   	STA $2F47
C2/BF00:	BF 04 FD D0	LDA $D0FD04,X
C2/BF04:	10 08      	BPL $BF0E
C2/BF06:	A5 10      	LDA $10
C2/BF08:	0D 92 61   	ORA $6192
C2/BF0B:	8D 92 61   	STA $6192
C2/BF0E:	BF 07 FD D0	LDA $D0FD07,X
C2/BF12:	C9 FF      	CMP #$FF
C2/BF14:	F0 13      	BEQ $BF29
C2/BF16:	C2 20      	REP #$20
C2/BF18:	0A         	ASL A
C2/BF19:	99 46 62   	STA $6246,Y
C2/BF1C:	BF 08 FD D0	LDA $D0FD08,X
C2/BF20:	29 FF 00   	AND #$00FF
C2/BF23:	0A         	ASL A
C2/BF24:	99 48 62   	STA $6248,Y
C2/BF27:	E2 20      	SEP #$20
C2/BF29:	06 10      	ASL $10
C2/BF2B:	C8         	INY 
C2/BF2C:	C8         	INY 
C2/BF2D:	C8         	INY 
C2/BF2E:	C8         	INY 
C2/BF2F:	E8         	INX 
C2/BF30:	E8         	INX 
C2/BF31:	E8         	INX 
C2/BF32:	E8         	INX 
C2/BF33:	E8         	INX 
C2/BF34:	C0 10 00   	CPY #$0010
C2/BF37:	D0 B6      	BNE $BEEF      ; Does this answer your question, Wendy's lady?!
                                       ; Iterate 4 times
C2/BF39:	FA         	PLX 
C2/BF3A:	60         	RTS 

; Song index table
C2/BF3B:	24   (Battle Theme)
C2/BF3C:	14   (Boss Theme)
C2/BF3D:	33   (Atma Weapon)
C2/BF3E:	2E   (Returner)
C2/BF3F:	1A   (Factory)
C2/BF40:	3B   (Final)
C2/BF41:	FF   (current 1)
C2/BF42:	FF   (current 2)

; Data - indexed by C1/1105, pointer between 0 and 7
C2/BF43:	00
C2/BF44:	C2
C2/BF45:	40
C2/BF46:	C2
C2/BF47:	80
C2/BF48:	C2
C2/BF49:	C0
C2/BF4A:	C2

; 16-bit data.
C2/BF4B:	00C3
C2/BF4D:	40C3
C2/BF4F:	80C3
C2/BF51:	C0C3

; Condemned Numeral Graphics [?]

C2/BF53:	AD DB E9   	LDA $E9DB
C2/BF56:	29 03      	AND #$03
C2/BF58:	D0 30      	BNE $BF8A      ; +48
C2/BF5A:	AD DB E9   	LDA $E9DB
C2/BF5D:	4A         	LSR
C2/BF5E:	4A         	LSR
C2/BF5F:	29 03      	AND #$03
C2/BF61:	AA         	TAX
C2/BF62:	BD 2A 20   	LDA $202A,X
C2/BF65:	F0 05      	BEQ $BF6C      ; +5
C2/BF67:	20 8E BF   	JSR $BF8E
C2/BF6A:	80 1E      	BRA $BF8A
C2/BF6C:	8A         	TXA
C2/BF6D:	0A         	ASL
C2/BF6E:	AA         	TAX
C2/BF6F:	C2 20      	REP #$20       ; 16-bit A
C2/BF71:	BF 43 BF C2	LDA $C2BF43,X
C2/BF75:	AA         	TAX
C2/BF76:	7B         	TDC
C2/BF77:	A0 20 00   	LDY #$0020     ; 32
C2/BF7A:	9F 00 00 7F	STA $7F0000,X
C2/BF7E:	9F 00 01 7F	STA $7F0100,X
C2/BF82:	E8         	INX
C2/BF83:	E8         	INX
C2/BF84:	88         	DEY
C2/BF85:	D0 F3      	BNE $BF7A      ; -13
C2/BF87:	7B         	TDC
C2/BF88:	E2 20      	SEP #$20       ; 8-bit A
C2/BF8A:	EE DB E9   	INC $E9DB
C2/BF8D:	6B         	RTL

C2/BF8E:	A0 00 00   	LDY #$0000     ; 0
C2/BF91:	BD 2A 20   	LDA $202A,X
C2/BF94:	3A         	DEC
C2/BF95:	38         	SEC
C2/BF96:	E9 0A      	SBC #$0A       ; 10
C2/BF98:	90 03      	BCC $BF9D      ; +3
C2/BF9A:	C8         	INY
C2/BF9B:	80 F8      	BRA $BF95      ; -8
C2/BF9D:	18         	CLC
C2/BF9E:	69 0A      	ADC #$0A       ; 10
C2/BFA0:	85 10      	STA $10
C2/BFA2:	84 12      	STY $12
C2/BFA4:	8B         	PHB
C2/BFA5:	A9 7F      	LDA #$7F
C2/BFA7:	48         	PHA
C2/BFA8:	AB         	PLB
C2/BFA9:	8A         	TXA
C2/BFAA:	0A         	ASL
C2/BFAB:	AA         	TAX
C2/BFAC:	C2 20      	REP #$20       ; 16-bit A
C2/BFAE:	DA         	PHX
C2/BFAF:	BF 43 BF C2	LDA $C2BF43,X
C2/BFB3:	AA         	TAX
C2/BFB4:	A5 12      	LDA $12
C2/BFB6:	20 DF BF   	JSR $BFDF
C2/BFB9:	A5 10      	LDA $10
C2/BFBB:	20 DF BF   	JSR $BFDF
C2/BFBE:	FA         	PLX
C2/BFBF:	BF 4B BF C2	LDA $C2BF4B,X
C2/BFC3:	AA         	TAX
C2/BFC4:	A5 10      	LDA $10
C2/BFC6:	20 D3 BF   	JSR $BFD3
C2/BFC9:	A5 12      	LDA $12
C2/BFCB:	20 D3 BF   	JSR $BFD3
C2/BFCE:	7B         	TDC
C2/BFCF:	E2 20      	SEP #$20       ; 8-bit A
C2/BFD1:	AB         	PLB
C2/BFD2:	60         	RTS

C2/BFD3:	DA         	PHX
C2/BFD4:	29 FF 00   	AND #$00FF
C2/BFD7:	0A         	ASL
C2/BFD8:	AA         	TAX
C2/BFD9:	BF 13 C0 C2	LDA $C2C013,X
C2/BFDD:	80 0A      	BRA $BFE9      ; +10

C2/BFDF:	DA         	PHX
C2/BFE0:	29 FF 00   	AND #$00FF
C2/BFE3:	0A         	ASL
C2/BFE4:	AA         	TAX
C2/BFE5:	BF FF BF C2	LDA $C2BFFF,X
C2/BFE9:	A8         	TAY
C2/BFEA:	FA         	PLX
C2/BFEB:	A9 10 00   	LDA #$0010     ; 16
C2/BFEE:	85 14      	STA $14
C2/BFF0:	B9 00 00   	LDA $0000,Y
C2/BFF3:	9D 00 00   	STA $0000,X
C2/BFF6:	E8         	INX
C2/BFF7:	E8         	INX
C2/BFF8:	C8         	INY
C2/BFF9:	C8         	INY
C2/BFFA:	C6 14      	DEC $14
C2/BFFC:	D0 F2      	BNE $BFF0      ; -14
C2/BFFE:	60         	RTS

; 16-bit data.
C2/BFFF:	00BE
C2/C001:	20BE
C2/C003:	40BE
C2/C005:	60BE
C2/C007:	80BE
C2/C009:	A0BE
C2/C00B:	C0BE
C2/C00D:	E0BE
C2/C00F:	00BF
C2/C011:	20BF

C2/C013:	00C0
C2/C015:	20C0
C2/C017:	40C0
C2/C019:	60C0
C2/C01B:	80C0
C2/C01D:	A0C0
C2/C01F:	C0C0
C2/C021:	E0C0
C2/C023:	00C1
C2/C025:	20C1

C2/C027:	85 12      	STA $12
C2/C029:	86 10      	STX $10
C2/C02B:	8B         	PHB
C2/C02C:	A9 7F      	LDA #$7F
C2/C02E:	48         	PHA
C2/C02F:	AB         	PLB
C2/C030:	7B         	TDC            ; A = 0
C2/C031:	AA         	TAX            ; X = 0
C2/C032:	A9 08      	LDA #$08       ; 8
C2/C034:	85 18      	STA $18
C2/C036:	C2 20      	REP #$20       ; 16-bit A
C2/C038:	A0 10 00   	LDY #$0010     ; 16
C2/C03B:	A7 10      	LDA [$10]
C2/C03D:	85 1C      	STA $1C
C2/C03F:	B7 10      	LDA [$10],Y
C2/C041:	85 1A      	STA $1A
C2/C043:	7B         	TDC
C2/C044:	E2 20      	SEP #$20       ; 8-bit A
C2/C046:	A0 08 00   	LDY #$0008     ; 8
C2/C049:	7B         	TDC
C2/C04A:	06 1B      	ASL $1B
C2/C04C:	2A         	ROL
C2/C04D:	06 1A      	ASL $1A
C2/C04F:	2A         	ROL
C2/C050:	06 1D      	ASL $1D
C2/C052:	2A         	ROL
C2/C053:	06 1C      	ASL $1C
C2/C055:	2A         	ROL
C2/C056:	29 1F      	AND #$1F
C2/C058:	F0 02      	BEQ $C05C      ; +2
C2/C05A:	09 30      	ORA #$30
C2/C05C:	9D 01 C4   	STA $C401,X
C2/C05F:	E8         	INX
C2/C060:	E8         	INX
C2/C061:	88         	DEY
C2/C062:	D0 E5      	BNE $C049      ; -27
C2/C064:	A4 10      	LDY $10
C2/C066:	C8         	INY
C2/C067:	C8         	INY
C2/C068:	84 10      	STY $10
C2/C06A:	C6 18      	DEC $18
C2/C06C:	D0 C8      	BNE $C036      ; -56
C2/C06E:	C2 20      	REP #$20       ; 16-bit A
C2/C070:	A5 10      	LDA $10
C2/C072:	18         	CLC
C2/C073:	69 10 00   	ADC #$0010     ; 16
C2/C076:	85 10      	STA $10
C2/C078:	7B         	TDC
C2/C079:	E2 20      	SEP #$20       ; 8-bit A
C2/C07B:	C6 14      	DEC $14
C2/C07D:	D0 B3      	BNE $C032      ; -77
C2/C07F:	AB         	PLB
C2/C080:	6B         	RTL

; Spell animation command C7.
C2/C081:	A7 5B      	LDA [$5B]
C2/C083:	0A         	ASL
C2/C084:	AA         	TAX
C2/C085:	FC 8C C0   	JSR ($C08C,X)  ; Call a subroutine
C2/C088:	AE F6 7A   	LDX $7AF6
C2/C08B:	6B         	RTL

; Pointers called by C2/C085, indexed by [$5B].
C2/C08C:	9BC3	; 00:
C2/C08E:	62C3	; 01:
C2/C090:	1EC3	; 02:
C2/C092:	39C3	; 03:
C2/C094:	03C3	; 04:
C2/C096:	B7C2	; 05:
C2/C098:	6AC2	; 06:
C2/C09A:	47C2	; 07:
C2/C09C:	D6C1	; 08:
C2/C09E:	B3C1	; 09:
C2/C0A0:	94C1	; 0A:
C2/C0A2:	71C1	; 0B:
C2/C0A4:	36C1	; 0C:
C2/C0A6:	15C1	; 0D:
C2/C0A8:	F8C0	; 0E:
C2/C0AA:	F2C0	; 0F:
C2/C0AC:	B9C0	; 10:
C2/C0AE:	B0C0	; 11:

; Animation command C7 11.
C2/C0B0:	AD 4B 2F   	LDA $2F4B
C2/C0B3:	09 01      	ORA #$01       ; Ensures monster formation is not added to Veldt list
C2/C0B5:	8D 4B 2F   	STA $2F4B      ; TSB would've worked...
C2/C0B8:	60         	RTS

; Animation command C7 10.
C2/C0B9:	A0 01 00   	LDY #$0001     ; 1
C2/C0BC:	B7 5B      	LDA [$5B],Y
C2/C0BE:	20 D2 C0   	JSR $C0D2
C2/C0C1:	AA         	TAX
C2/C0C2:	BF 01 1A C1	LDA $C11A01,X
C2/C0C6:	0D 92 61   	ORA $6192
C2/C0C9:	8D 92 61   	STA $6192      ; TSB would've worked...
C2/C0CC:	A4 5B      	LDY $5B
C2/C0CE:	C8         	INY
C2/C0CF:	84 5B      	STY $5B
C2/C0D1:	60         	RTS

C2/C0D2:	85 10      	STA $10
C2/C0D4:	7B         	TDC            ; A = 0
C2/C0D5:	AA         	TAX            ; X = 0
C2/C0D6:	64 12      	STZ $12
C2/C0D8:	A5 10      	LDA $10
C2/C0DA:	DD C6 2E   	CMP $2EC6,X
C2/C0DD:	F0 0E      	BEQ $C0ED      ; +14
C2/C0DF:	E6 12      	INC $12
C2/C0E1:	8A         	TXA
C2/C0E2:	18         	CLC
C2/C0E3:	69 20      	ADC #$20       ; 32
C2/C0E5:	AA         	TAX
C2/C0E6:	E0 80 00   	CPX #$0080     ; 128
C2/C0E9:	D0 ED      	BNE $C0D8      ; -19
C2/C0EB:	7B         	TDC
C2/C0EC:	60         	RTS

C2/C0ED:	A5 12      	LDA $12
C2/C0EF:	29 03      	AND #$03
C2/C0F1:	60         	RTS

; Animation command C7 0F.
C2/C0F2:	A9 01      	LDA #$01       ; 1
C2/C0F4:	1C 52 2F   	TRB $2F52
C2/C0F7:	60         	RTS

; Animation command C7 0E.
C2/C0F8:	A0 01 00   	LDY #$0001     ; 1
C2/C0FB:	B7 5B      	LDA [$5B],Y
C2/C0FD:	F0 05      	BEQ $C104      ; +5
C2/C0FF:	8D 85 62   	STA $6285      ; Makes screen shaky
C2/C102:	80 0B      	BRA $C10F      ; +11
C2/C104:	9C 85 62   	STZ $6285      ; Makes screen not shaky
C2/C107:	7B         	TDC            ; A = 0
C2/C108:	AA         	TAX            ; X = 0
C2/C109:	8E B0 64   	STX $64B0      ; Background X-shift
C2/C10C:	8E B2 64   	STX $64B2      ; Background Y-shift
C2/C10F:	A4 5B      	LDY $5B
C2/C111:	C8         	INY
C2/C112:	84 5B      	STY $5B
C2/C114:	60         	RTS

; Animation command C7 0D.
C2/C115:	A0 01 00   	LDY #$0001     ; 1
C2/C118:	B7 5B      	LDA [$5B],Y
C2/C11A:	0A         	ASL
C2/C11B:	0A         	ASL
C2/C11C:	0A         	ASL
C2/C11D:	0A         	ASL
C2/C11E:	0A         	ASL
C2/C11F:	AA         	TAX
C2/C120:	7B         	TDC            ; A = 0
C2/C121:	A8         	TAY            ; Y = 0
C2/C122:	BF 99 D4 C2	LDA $C2D499,X
C2/C126:	99 00 7F   	STA $7F00,Y
C2/C129:	E8         	INX
C2/C12A:	C8         	INY
C2/C12B:	C0 20 00   	CPY #$0020     ; 32
C2/C12E:	D0 F2      	BNE $C122      ; -14
C2/C130:	A4 5B      	LDY $5B
C2/C132:	C8         	INY
C2/C133:	84 5B      	STY $5B
C2/C135:	60         	RTS

; Animation command C7 0C.
C2/C136:	A0 01 00   	LDY #$0001     ; 1
C2/C139:	B7 5B      	LDA [$5B],Y
C2/C13B:	85 12      	STA $12
C2/C13D:	7B         	TDC            ; A = 0
C2/C13E:	AA         	TAX            ; X = 0
C2/C13F:	64 10      	STZ $10
C2/C141:	BD C6 2E   	LDA $2EC6,X
C2/C144:	C5 12      	CMP $12
C2/C146:	F0 0E      	BEQ $C156      ; +14
C2/C148:	E6 10      	INC $10
C2/C14A:	8A         	TXA
C2/C14B:	18         	CLC
C2/C14C:	69 20      	ADC #$20       ; 32
C2/C14E:	AA         	TAX
C2/C14F:	E0 80 00   	CPX #$0080     ; 128
C2/C152:	D0 ED      	BNE $C141      ; -19
C2/C154:	80 14      	BRA $C16A      ; +20

C2/C156:	C8         	INY
C2/C157:	B7 5B      	LDA [$5B],Y
C2/C159:	9D AE 2E   	STA $2EAE,X
C2/C15C:	A5 10      	LDA $10
C2/C15E:	8D 78 7B   	STA $7B78
C2/C161:	AE F6 7A   	LDX $7AF6
C2/C164:	DA         	PHX
C2/C165:	22 75 2F C1	JSL $C12F75
C2/C169:	FA         	PLX
C2/C16A:	A4 5B      	LDY $5B
C2/C16C:	C8         	INY
C2/C16D:	C8         	INY
C2/C16E:	84 5B      	STY $5B
C2/C170:	60         	RTS

; Animation command C7 0B.
C2/C171:	A0 01 00   	LDY #$0001     ; 1
C2/C174:	EE ED E9   	INC $E9ED      ; Sound is not muted
C2/C177:	7B         	TDC            ; A = 0
C2/C178:	AA         	TAX            ; X = 0
C2/C179:	B7 5B      	LDA [$5B],Y
C2/C17B:	9D 00 13   	STA $1300,X	
C2/C17E:	C8         	INY
C2/C17F:	E8         	INX
C2/C180:	E0 03 00   	CPX #$0003     ; 3
C2/C183:	D0 F4      	BNE $C179      ; -12
C2/C185:	22 04 00 C5	JSL $C50004    ; Plays a song
C2/C189:	9C ED E9   	STZ $E9ED
C2/C18C:	A4 5B      	LDY $5B
C2/C18E:	C8         	INY
C2/C18F:	C8         	INY
C2/C190:	C8         	INY
C2/C191:	84 5B      	STY $5B
C2/C193:	60         	RTS

; Animation command C7 0A.
C2/C194:	A0 01 00   	LDY #$0001     ; 1
C2/C197:	B7 5B      	LDA [$5B],Y
C2/C199:	22 C6 BA C1	JSL $C1BAC6
C2/C19D:	A4 5B      	LDY $5B
C2/C19F:	C8         	INY
C2/C1A0:	84 5B      	STY $5B
C2/C1A2:	60         	RTS

; Data.
C2/C1A3:	19
C2/C1A4:	18
C2/C1A5:	18
C2/C1A6:	1A
C2/C1A7:	1A
C2/C1A8:	1B
C2/C1A9:	1B
C2/C1AA:	19
C2/C1AB:	1A
C2/C1AC:	18
C2/C1AD:	18
C2/C1AE:	19
C2/C1AF:	19
C2/C1B0:	1B
C2/C1B1:	1B
C2/C1B2:	1A

; Animation command C7 09.
C2/C1B3:	22 99 F9 C1	JSL $C1F999
C2/C1B7:	48         	PHA
C2/C1B8:	20 A7 C2   	JSR $C2A7
C2/C1BB:	BD 87 6F   	LDA $6F87,X
C2/C1BE:	F0 02      	BEQ $C1C2      ; +2
C2/C1C0:	A9 08      	LDA #$08       ; 8
C2/C1C2:	85 10      	STA $10
C2/C1C4:	68         	PLA
C2/C1C5:	4A         	LSR
C2/C1C6:	4A         	LSR
C2/C1C7:	4A         	LSR
C2/C1C8:	4A         	LSR
C2/C1C9:	4A         	LSR
C2/C1CA:	18         	CLC
C2/C1CB:	65 10      	ADC $10
C2/C1CD:	AA         	TAX
C2/C1CE:	BF A3 C1 C2	LDA $C2C1A3,X
C2/C1D2:	99 C0 61   	STA $61C0,Y
C2/C1D5:	60         	RTS

; Animation command C7 08.
C2/C1D6:	64 11      	STZ $11
C2/C1D8:	64 13      	STZ $13
C2/C1DA:	A0 01 00   	LDY #$0001     ; 1
C2/C1DD:	B7 5B      	LDA [$5B],Y
C2/C1DF:	10 02      	BPL $C1E3      ; +2
C2/C1E1:	C6 11      	DEC $11
C2/C1E3:	85 10      	STA $10
C2/C1E5:	C8         	INY
C2/C1E6:	B7 5B      	LDA [$5B],Y
C2/C1E8:	10 02      	BPL $C1EC      ; +2
C2/C1EA:	C6 13      	DEC $13
C2/C1EC:	85 12      	STA $12
C2/C1EE:	C2 20      	REP #$20       ; 16-bit A
C2/C1F0:	AE F6 7A   	LDX $7AF6
C2/C1F3:	BD 87 6F   	LDA $6F87,X
C2/C1F6:	29 FF 00   	AND #$00FF
C2/C1F9:	D0 1A      	BNE $C215      ; +26
C2/C1FB:	BD 7E 6F   	LDA $6F7E,X
C2/C1FE:	BD 82 6F   	LDA $6F82,X    ; ????
C2/C201:	18         	CLC
C2/C202:	65 10      	ADC $10
C2/C204:	9D 82 6F   	STA $6F82,X
C2/C207:	BD 80 6F   	LDA $6F80,X
C2/C20A:	BD 84 6F   	LDA $6F84,X    ; ????
C2/C20D:	18         	CLC
C2/C20E:	65 12      	ADC $12
C2/C210:	9D 84 6F   	STA $6F84,X
C2/C213:	80 1A      	BRA $C22F      ; +26

C2/C215:	A5 10      	LDA $10
C2/C217:	49 FF FF   	EOR #$FFFF
C2/C21A:	1A         	INC
C2/C21B:	85 10      	STA $10
C2/C21D:	BD 82 6F   	LDA $6F82,X
C2/C220:	18         	CLC
C2/C221:	65 10      	ADC $10        ; Could've used ADC $6F82,X instead...
C2/C223:	9D 82 6F   	STA $6F82,X
C2/C226:	BD 84 6F   	LDA $6F84,X
C2/C229:	18         	CLC
C2/C22A:	65 12      	ADC $12
C2/C22C:	9D 84 6F   	STA $6F84,X
C2/C22F:	E6 5B      	INC $5B
C2/C231:	E6 5B      	INC $5B
C2/C233:	7B         	TDC
C2/C234:	E2 20      	SEP #$20       ; 8-bit A
C2/C236:	60         	RTS

C2/C237:	03
C2/C238:	02
C2/C239:	02
C2/C23A:	04
C2/C23B:	04
C2/C23C:	05
C2/C23D:	05
C2/C23E:	03
C2/C23F:	04
C2/C240:	02
C2/C241:	02
C2/C242:	03
C2/C243:	03
C2/C244:	05
C2/C245:	05
C2/C246:	04

; Animation command C7 07.
C2/C247:	22 99 F9 C1	JSL $C1F999
C2/C24B:	48         	PHA
C2/C24C:	20 A7 C2   	JSR $C2A7
C2/C24F:	BD 87 6F   	LDA $6F87,X
C2/C252:	F0 02      	BEQ $C256      ; +2
C2/C254:	A9 08      	LDA #$08       ; 8
C2/C256:	85 10      	STA $10
C2/C258:	68         	PLA
C2/C259:	4A         	LSR
C2/C25A:	4A         	LSR
C2/C25B:	4A         	LSR
C2/C25C:	4A         	LSR
C2/C25D:	4A         	LSR
C2/C25E:	18         	CLC
C2/C25F:	65 10      	ADC $10
C2/C261:	AA         	TAX
C2/C262:	BF 37 C2 C2	LDA $C2C237,X
C2/C266:	99 C0 61   	STA $61C0,Y
C2/C269:	60         	RTS

; Animation command C7 06.
C2/C26A:	A0 01 00   	LDY #$0001     ; 1
C2/C26D:	B7 5B      	LDA [$5B],Y
C2/C26F:	85 10      	STA $10
C2/C271:	C8         	INY
C2/C272:	B7 5B      	LDA [$5B],Y
C2/C274:	85 12      	STA $12
C2/C276:	64 11      	STZ $11
C2/C278:	64 13      	STZ $13
C2/C27A:	20 A7 C2   	JSR $C2A7
C2/C27D:	C2 20      	REP #$20       ; 16-bit A
C2/C27F:	A5 10      	LDA $10
C2/C281:	99 B7 61   	STA $61B7,Y    ; X-coordinate
C2/C284:	7B         	TDC
C2/C285:	99 C5 61   	STA $61C5,Y    ; X-coordinate offset
C2/C288:	99 D4 61   	STA $61D4,Y    ; Something else to do with X-coordinate
C2/C28B:	A5 12      	LDA $12
C2/C28D:	99 B9 61   	STA $61B9,Y    ; Y-coordinate
C2/C290:	7B         	TDC
C2/C291:	99 C7 61   	STA $61C7,Y    ; Y-coordinate offset
C2/C294:	99 D2 61   	STA $61D2,Y    ; Y-coordinate on battle map
C2/C297:	E6 5B      	INC $5B
C2/C299:	E6 5B      	INC $5B
C2/C29B:	7B         	TDC
C2/C29C:	E2 20      	SEP #$20       ; 8-bit A
C2/C29E:	60         	RTS

C2/C29F:	AE F6 7A   	LDX $7AF6
C2/C2A2:	BD 39 6A   	LDA $6A39,X    ; Target's index
C2/C2A5:	80 06      	BRA $C2AD      ; +6

C2/C2A7:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/C2AA:	BD 38 6A   	LDA $6A38,X    ; Caster's index
C2/C2AD:	0A         	ASL
C2/C2AE:	0A         	ASL
C2/C2AF:	0A         	ASL
C2/C2B0:	0A         	ASL
C2/C2B1:	0A         	ASL
C2/C2B2:	A8         	TAY
C2/C2B3:	8C F8 7A   	STY $7AF8
C2/C2B6:	60         	RTS

; Animation command C7 05.
C2/C2B7:	A0 01 00   	LDY #$0001     ; 1
C2/C2BA:	B7 5B      	LDA [$5B],Y
C2/C2BC:	85 10      	STA $10
C2/C2BE:	7B         	TDC            ; A = 0
C2/C2BF:	A8         	TAY            ; Y = 0
C2/C2C0:	AA         	TAX            ; X = 0
C2/C2C1:	B9 C6 2E   	LDA $2EC6,Y
C2/C2C4:	C5 10      	CMP $10
C2/C2C6:	F0 0D      	BEQ $C2D5      ; +13
C2/C2C8:	E8         	INX
C2/C2C9:	98         	TYA
C2/C2CA:	18         	CLC
C2/C2CB:	69 20      	ADC #$20       ; 32
C2/C2CD:	A8         	TAY
C2/C2CE:	E0 04 00   	CPX #$0004     ; 4
C2/C2D1:	D0 EE      	BNE $C2C1      ; -18
C2/C2D3:	7B         	TDC            ; A = 0
C2/C2D4:	AA         	TAX            ; X = 0
C2/C2D5:	8A         	TXA
C2/C2D6:	0A         	ASL
C2/C2D7:	0A         	ASL
C2/C2D8:	0A         	ASL
C2/C2D9:	0A         	ASL
C2/C2DA:	0A         	ASL
C2/C2DB:	A8         	TAY
C2/C2DC:	AE F6 7A   	LDX $7AF6
C2/C2DF:	C2 20      	REP #$20       ; 16-bit A
C2/C2E1:	B9 B7 61   	LDA $61B7,Y
C2/C2E4:	18         	CLC
C2/C2E5:	79 C5 61   	ADC $61C5,Y
C2/C2E8:	18         	CLC
C2/C2E9:	79 D4 61   	ADC $61D4,Y
C2/C2EC:	9D 82 6F   	STA $6F82,X
C2/C2EF:	B9 B9 61   	LDA $61B9,Y
C2/C2F2:	18         	CLC
C2/C2F3:	79 C7 61   	ADC $61C7,Y
C2/C2F6:	18         	CLC
C2/C2F7:	79 D2 61   	ADC $61D2,Y
C2/C2FA:	9D 84 6F   	STA $6F84,X
C2/C2FD:	E6 5B      	INC $5B
C2/C2FF:	7B         	TDC
C2/C300:	E2 20      	SEP #$20       ; 8-bit A
C2/C302:	60         	RTS

; Animation command C7 04.
C2/C303:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/C306:	BD 38 6A   	LDA $6A38,X    ; Caster's index
C2/C309:	0A         	ASL
C2/C30A:	0A         	ASL
C2/C30B:	A8         	TAY
C2/C30C:	C2 20      	REP #$20       ; 16-bit A
C2/C30E:	B9 36 62   	LDA $6236,Y
C2/C311:	9D 82 6F   	STA $6F82,X
C2/C314:	B9 38 62   	LDA $6238,Y
C2/C317:	9D 84 6F   	STA $6F84,X
C2/C31A:	7B         	TDC
C2/C31B:	E2 20      	SEP #$20       ; 8-bit A
C2/C31D:	60         	RTS

; Animation command C7 02.
C2/C31E:	20 A7 C2   	JSR $C2A7
C2/C321:	BD 38 6A   	LDA $6A38,X    ; Caster's index
C2/C324:	0A         	ASL
C2/C325:	0A         	ASL
C2/C326:	AA         	TAX
C2/C327:	C2 20      	REP #$20       ; 16-bit A
C2/C329:	B9 B7 61   	LDA $61B7,Y
C2/C32C:	9D 36 62   	STA $6236,X
C2/C32F:	B9 B9 61   	LDA $61B9,Y
C2/C332:	9D 38 62   	STA $6238,X
C2/C335:	7B         	TDC
C2/C336:	E2 20      	SEP #$20       ; 8-bit A
C2/C338:	60         	RTS

; Animation command C7 03.
C2/C339:	20 A7 C2   	JSR $C2A7
C2/C33C:	BD 38 6A   	LDA $6A38,X    ; Caster's index
C2/C33F:	0A         	ASL
C2/C340:	0A         	ASL
C2/C341:	AA         	TAX
C2/C342:	C2 20      	REP #$20       ; 16-bit A
C2/C344:	BD 36 62   	LDA $6236,X
C2/C347:	99 B7 61   	STA $61B7,Y
C2/C34A:	7B         	TDC
C2/C34B:	99 C5 61   	STA $61C5,Y
C2/C34E:	99 D4 61   	STA $61D4,Y
C2/C351:	BD 38 62   	LDA $6238,X
C2/C354:	99 B9 61   	STA $61B9,Y
C2/C357:	7B         	TDC
C2/C358:	99 C7 61   	STA $61C7,Y
C2/C35B:	99 D2 61   	STA $61D2,Y
C2/C35E:	7B         	TDC            ; A = 0 already...
C2/C35F:	E2 20      	SEP #$20       ; 8-bit A
C2/C361:	60         	RTS

; Animation command C7 01.
C2/C362:	20 A7 C2   	JSR $C2A7
C2/C365:	C2 20      	REP #$20       ; 16-bit A
C2/C367:	B9 B7 61   	LDA $61B7,Y
C2/C36A:	18         	CLC
C2/C36B:	79 C5 61   	ADC $61C5,Y
C2/C36E:	18         	CLC
C2/C36F:	79 D4 61   	ADC $61D4,Y
C2/C372:	99 B7 61   	STA $61B7,Y
C2/C375:	9D 7E 6F   	STA $6F7E,X
C2/C378:	7B         	TDC
C2/C379:	99 C5 61   	STA $61C5,Y
C2/C37C:	99 D4 61   	STA $61D4,Y
C2/C37F:	B9 B9 61   	LDA $61B9,Y
C2/C382:	18         	CLC
C2/C383:	79 C7 61   	ADC $61C7,Y
C2/C386:	18         	CLC
C2/C387:	79 D2 61   	ADC $61D2,Y
C2/C38A:	99 B9 61   	STA $61B9,Y
C2/C38D:	9D 80 6F   	STA $6F80,X
C2/C390:	7B         	TDC
C2/C391:	99 C7 61   	STA $61C7,Y
C2/C394:	99 D2 61   	STA $61D2,Y
C2/C397:	7B         	TDC            ; A = 0 already...
C2/C398:	E2 20      	SEP #$20       ; 8-bit A
C2/C39A:	60         	RTS

; Animation command C7 00.
C2/C39B:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/C39E:	A4 5B      	LDY $5B
C2/C3A0:	C8         	INY
C2/C3A1:	84 5B      	STY $5B
C2/C3A3:	BD 38 6A   	LDA $6A38,X    ; Caster's index
C2/C3A6:	A8         	TAY
C2/C3A7:	A7 5B      	LDA [$5B]
C2/C3A9:	F0 14      	BEQ $C3BF      ; +20
C2/C3AB:	B9 10 7B   	LDA $7B10,Y    ; Facing direction
C2/C3AE:	D0 21      	BNE $C3D1      ; +33
C2/C3B0:	1A         	INC
C2/C3B1:	99 10 7B   	STA $7B10,Y
C2/C3B4:	9D 87 6F   	STA $6F87,X
C2/C3B7:	BD 38 6A   	LDA $6A38,X
C2/C3BA:	20 D5 C3   	JSR $C3D5
C2/C3BD:	80 12      	BRA $C3D1      ; +18

C2/C3BF:	B9 10 7B   	LDA $7B10,Y
C2/C3C2:	F0 0D      	BEQ $C3D1      ; +13
C2/C3C4:	7B         	TDC
C2/C3C5:	99 10 7B   	STA $7B10,Y
C2/C3C8:	9D 87 6F   	STA $6F87,X
C2/C3CB:	BD 38 6A   	LDA $6A38,X
C2/C3CE:	20 D5 C3   	JSR $C3D5
C2/C3D1:	AE F6 7A   	LDX $7AF6      ; Animation ID
C2/C3D4:	60         	RTS

C2/C3D5:	0A         	ASL
C2/C3D6:	0A         	ASL
C2/C3D7:	0A         	ASL
C2/C3D8:	0A         	ASL
C2/C3D9:	0A         	ASL
C2/C3DA:	AA         	TAX
C2/C3DB:	BD BE 61   	LDA $61BE,X
C2/C3DE:	49 40      	EOR #$40
C2/C3E0:	9D BE 61   	STA $61BE,X
C2/C3E3:	60         	RTS

; 16-bit data called from C1/26D8.
; RAM offsets for Sprite Animation Frame Data (by frame)
; Basically a multiplication table for (X * 84)

C2/C3E4:	3FCE ; 0
C2/C3E6:	93CE ; 1
C2/C3E8:	E7CE ; 2
C2/C3EA:	3BCF ; 3
C2/C3EC:	8FCF ; 4
C2/C3EE:	E3CF ; 5
C2/C3F0:	37D0 ; 6
C2/C3F2:	8BD0 ; 7
C2/C3F4:	DFD0 ; 8
C2/C3F6:	33D1 ; 9
C2/C3F8:	87D1 ; A
C2/C3FA:	DBD1 ; B
C2/C3FC:	2FD2 ; C
C2/C3FE:	83D2 ; D
C2/C400:	D7D2 ; E
C2/C402:	2BD3 ; F
C2/C404:	7FD3 ; 10
C2/C406:	D3D3 ; 11
C2/C408:	27D4 ; 12
C2/C40A:	7BD4 ; 13
C2/C40C:	CFD4 ; 14
C2/C40E:	23D5 ; 15
C2/C410:	77D5 ; 16
C2/C412:	CBD5 ; 17
C2/C414:	1FD6 ; 18
C2/C416:	73D6 ; 19
C2/C418:	C7D6 ; 1A
C2/C41A:	1BD7 ; 1B
C2/C41C:	6FD7 ; 1C
C2/C41E:	C3D7 ; 1D
C2/C420:	17D8 ; 1E
C2/C422:	6BD8 ; 1F

; Sprite Animation Frame Data RAM Offsets (Horizontally Flipped)
C2/C424:	BFD8
C2/C426:	13D9
C2/C428:	67D9
C2/C42A:	BBD9
C2/C42C:	0FDA
C2/C42E:	63DA
C2/C430:	B7DA
C2/C432:	0BDB
C2/C434:	5FDB
C2/C436:	B3DB
C2/C438:	07DC
C2/C43A:	5BDC
C2/C43C:	AFDC
C2/C43E:	03DD
C2/C440:	57DD
C2/C442:	ABDD
C2/C444:	FFDD
C2/C446:	53DE
C2/C448:	A7DE
C2/C44A:	FBDE
C2/C44C:	4FDF
C2/C44E:	A3DF
C2/C450:	F7DF
C2/C452:	4BE0
C2/C454:	9FE0
C2/C456:	F3E0
C2/C458:	47E1
C2/C45A:	9BE1
C2/C45C:	EFE1
C2/C45E:	43E2
C2/C460:	97E2
C2/C462:	EBE2

; 32-bit data called from C1/3962 and C1/3968.
C2/C464:	000074C4
C2/C468:	004080C4
C2/C46C:	00808CC4
C2/C470:	00C098C4

; 16-bit data called from C1/1F04 and C1/3F97.
C2/C474:	5982
C2/C476:	9D82
C2/C478:	E182
C2/C47A:	2583
C2/C47C:	6983
C2/C47E:	AD83
C2/C480:	F183
C2/C482:	3584
C2/C484:	7984
C2/C486:	BD84
C2/C488:	0185
C2/C48A:	4585
C2/C48C:	8985
C2/C48E:	CD85
C2/C490:	1186
C2/C492:	5586
C2/C494:	9986
C2/C496:	DD86
C2/C498:	2187
C2/C49A:	6587
C2/C49C:	A987
C2/C49E:	ED87
C2/C4A0:	3188
C2/C4A2:	7588

; Note: the game just loads the first pointer for each mold, then
; Consecutively reads all 6 entries' data.

; Pointers for monster formation Mold 0
C2/C4A4:	43C5
C2/C4A6:	4AC5
C2/C4A8:	51C5
C2/C4AA:	58C5
C2/C4AC:	40C5
C2/C4AE:	40C5

; Pointers for monster formation Mold 1
C2/C4B0:	5FC5
C2/C4B2:	66C5
C2/C4B4:	6DC5
C2/C4B6:	71C5
C2/C4B8:	75C5
C2/C4BA:	79C5

; Pointers for monster formation Mold 2
C2/C4BC:	7DC5
C2/C4BE:	86C5
C2/C4C0:	40C5
C2/C4C2:	40C5
C2/C4C4:	40C5
C2/C4C6:	40C5

; Pointers for monster formation Mold 3
C2/C4C8:	8FC5
C2/C4CA:	9AC5
C2/C4CC:	40C5
C2/C4CE:	40C5
C2/C4D0:	40C5
C2/C4D2:	40C5

; Pointers for monster formation Mold 4
C2/C4D4:	A5C5
C2/C4D6:	AEC5
C2/C4D8:	B5C5
C2/C4DA:	40C5
C2/C4DC:	40C5
C2/C4DE:	40C5

; Pointers for monster formation Mold 5
C2/C4E0:	BCC5
C2/C4E2:	C7C5
C2/C4E4:	CEC5
C2/C4E6:	40C5
C2/C4E8:	40C5
C2/C4EA:	40C5

; Pointers for monster formation Mold 6
C2/C4EC:	D5C5
C2/C4EE:	40C5
C2/C4F0:	40C5
C2/C4F2:	40C5
C2/C4F4:	40C5
C2/C4F6:	40C5

; Pointers for monster formation Mold 7
C2/C4F8:	E8C5
C2/C4FA:	F4C5
C2/C4FC:	FAC5
C2/C4FE:	FEC5
C2/C500:	02C6
C2/C502:	06C6

; Pointers for monster formation Mold 8
C2/C504:	0AC6
C2/C506:	11C6
C2/C508:	18C6
C2/C50A:	1DC6
C2/C50C:	40C5
C2/C50E:	40C5

; Pointers for monster formation Mold 9
C2/C510:	22C6
C2/C512:	40C5
C2/C514:	40C5
C2/C516:	40C5
C2/C518:	40C5
C2/C51A:	40C5

; Pointers for monster formation Mold 10
C2/C51C:	31C6
C2/C51E:	3AC6
C2/C520:	3FC6
C2/C522:	44C6
C2/C524:	48C6
C2/C526:	40C5

; Pointers for monster formation Mold 11
C2/C528:	4CC6
C2/C52A:	51C6
C2/C52C:	56C6
C2/C52E:	5BC6
C2/C530:	60C6
C2/C532:	40C5

; Pointers for monster formation Mold 12
C2/C534:	67C6
C2/C536:	6EC6
C2/C538:	75C6
C2/C53A:	7AC6
C2/C53C:	7FC6
C2/C53E:	84C6

; Mold data.  For context, picture a 4x4 grid of 32x32-pixel monster
; Subsprites with 16 possible positions on it:
; 
; 00 01 02 03
; 04 05 06 07
; 08 09 0A 0B
; 0C 0D 0E 0F
; 
; The data breakdown is:
; 1st byte: horizontal grid position of start of image * 32 ?
; 2nd byte: vertical grid position of start of image * 32 ?
; Variable # of bytes: list of the 0-15 grid positions for the
;                      32x32 subsprites that compose the monster image
; FF: terminates record data for current monster image )

; Null entry - used for mold slots which are undefined [nonexistent
; In the C2/D034 structure, and not meant to hold a monster]
C2/C540:	00
C2/C541:	00
C2/C542:	FF

; Mold 0 - Mold slot 0
C2/C543:	00
C2/C544:	00
C2/C545:	00
C2/C546:	01
C2/C547:	04
C2/C548:	05
C2/C549:	FF

; Mold 0 - Mold slot 1
C2/C54A:	40
C2/C54B:	00
C2/C54C:	02
C2/C54D:	03
C2/C54E:	06
C2/C54F:	07
C2/C550:	FF

; Mold 0 - Mold slot 2
C2/C551:	00
C2/C552:	40
C2/C553:	08
C2/C554:	09
C2/C555:	0C
C2/C556:	0D
C2/C557:	FF

; Mold 0 - Mold slot 3
C2/C558:	40
C2/C559:	40
C2/C55A:	0A
C2/C55B:	0B
C2/C55C:	0E
C2/C55D:	0F
C2/C55E:	FF

; Mold 1 - Mold slot 0
C2/C55F:	00
C2/C560:	00
C2/C561:	00
C2/C562:	01
C2/C563:	04
C2/C564:	05
C2/C565:	FF

; Mold 1 - Mold slot 1
C2/C566:	40
C2/C567:	00
C2/C568:	02
C2/C569:	03
C2/C56A:	06
C2/C56B:	07
C2/C56C:	FF

; Mold 1 - Mold slot 2
C2/C56D:	00
C2/C56E:	40
C2/C56F:	08
C2/C570:	FF

; Mold 1 - Mold slot 3
C2/C571:	20
C2/C572:	40
C2/C573:	09
C2/C574:	FF

; Mold 1 - Mold slot 4
C2/C575:	40
C2/C576:	40
C2/C577:	0A
C2/C578:	FF

; Mold 1 - Mold slot 5
C2/C579:	60
C2/C57A:	40
C2/C57B:	0B
C2/C57C:	FF

; Mold 2 - Mold slot 0
C2/C57D:	00
C2/C57E:	00
C2/C57F:	00
C2/C580:	01
C2/C581:	02
C2/C582:	04
C2/C583:	05
C2/C584:	06
C2/C585:	FF

; Mold 2 - Mold slot 1
C2/C586:	00
C2/C587:	40
C2/C588:	08
C2/C589:	09
C2/C58A:	0A
C2/C58B:	0C
C2/C58C:	0D
C2/C58D:	0E
C2/C58E:	FF

; Mold 3 - Mold slot 0
C2/C58F:	00
C2/C590:	00
C2/C591:	00
C2/C592:	01
C2/C593:	04
C2/C594:	05
C2/C595:	08
C2/C596:	09
C2/C597:	0C
C2/C598:	0D
C2/C599:	FF

; Mold 3 - Mold slot 1
C2/C59A:	40
C2/C59B:	00
C2/C59C:	02
C2/C59D:	03
C2/C59E:	06
C2/C59F:	07
C2/C5A0:	0A
C2/C5A1:	0B
C2/C5A2:	0E
C2/C5A3:	0F
C2/C5A4:	FF

; Mold 4 - Mold slot 0
C2/C5A5:	00
C2/C5A6:	00
C2/C5A7:	00
C2/C5A8:	01
C2/C5A9:	02
C2/C5AA:	04
C2/C5AB:	05
C2/C5AC:	06
C2/C5AD:	FF

; Mold 4 - Mold slot 1
C2/C5AE:	00
C2/C5AF:	40
C2/C5B0:	08
C2/C5B1:	09
C2/C5B2:	0C
C2/C5B3:	0D
C2/C5B4:	FF

; Mold 4 - Mold slot 2
C2/C5B5:	40
C2/C5B6:	40
C2/C5B7:	0A
C2/C5B8:	0B
C2/C5B9:	0E
C2/C5BA:	0F
C2/C5BB:	FF

; Mold 5 - Mold slot 0
C2/C5BC:	00
C2/C5BD:	00
C2/C5BE:	00
C2/C5BF:	01
C2/C5C0:	04
C2/C5C1:	05
C2/C5C2:	08
C2/C5C3:	09
C2/C5C4:	0C
C2/C5C5:	0D
C2/C5C6:	FF

; Mold 5 - Mold slot 1
C2/C5C7:	40
C2/C5C8:	00
C2/C5C9:	02
C2/C5CA:	03
C2/C5CB:	06
C2/C5CC:	07
C2/C5CD:	FF

; Mold 5 - Mold slot 2
C2/C5CE:	40
C2/C5CF:	40
C2/C5D0:	0A
C2/C5D1:	0B
C2/C5D2:	0E
C2/C5D3:	0F
C2/C5D4:	FF

; Mold 6 - Mold slot 0
C2/C5D5:	00
C2/C5D6:	00
C2/C5D7:	00
C2/C5D8:	01
C2/C5D9:	02
C2/C5DA:	03
C2/C5DB:	04
C2/C5DC:	05
C2/C5DD:	06
C2/C5DE:	07
C2/C5DF:	08
C2/C5E0:	09
C2/C5E1:	0A
C2/C5E2:	0B
C2/C5E3:	0C
C2/C5E4:	0D
C2/C5E5:	0E
C2/C5E6:	0F
C2/C5E7:	FF

; Mold 7 - Mold slot 0
C2/C5E8:	00
C2/C5E9:	00
C2/C5EA:	00
C2/C5EB:	01
C2/C5EC:	02
C2/C5ED:	04
C2/C5EE:	05
C2/C5EF:	06
C2/C5F0:	08
C2/C5F1:	09
C2/C5F2:	0A
C2/C5F3:	FF

; Mold 7 - Mold slot 1
C2/C5F4:	60
C2/C5F5:	00
C2/C5F6:	03
C2/C5F7:	07
C2/C5F8:	0B
C2/C5F9:	FF

; Mold 7 - Mold slot 2
C2/C5FA:	00
C2/C5FB:	60
C2/C5FC:	0C
C2/C5FD:	FF

; Mold 7 - Mold slot 3
C2/C5FE:	20
C2/C5FF:	60
C2/C600:	0D
C2/C601:	FF

; Mold 7 - Mold slot 4
C2/C602:	40
C2/C603:	60
C2/C604:	0E
C2/C605:	FF

; Mold 7 - Mold slot 5
C2/C606:	60
C2/C607:	60
C2/C608:	0F
C2/C609:	FF

; Mold 8 - Mold slot 0
C2/C60A:	00
C2/C60B:	00
C2/C60C:	00
C2/C60D:	01
C2/C60E:	04
C2/C60F:	05
C2/C610:	FF

; Mold 8 - Mold slot 1
C2/C611:	00
C2/C612:	40
C2/C613:	08
C2/C614:	09
C2/C615:	0C
C2/C616:	0D
C2/C617:	FF

; Mold 8 - Mold slot 2
C2/C618:	40
C2/C619:	00
C2/C61A:	02
C2/C61B:	06
C2/C61C:	FF

; Mold 8 - Mold slot 3
C2/C61D:	40
C2/C61E:	40
C2/C61F:	0A
C2/C620:	0E
C2/C621:	FF

; Mold 9 - Mold slot 0
C2/C622:	00
C2/C623:	00
C2/C624:	00
C2/C625:	01
C2/C626:	02
C2/C627:	04
C2/C628:	05
C2/C629:	06
C2/C62A:	08
C2/C62B:	09
C2/C62C:	0A
C2/C62D:	0C
C2/C62E:	0D
C2/C62F:	0E
C2/C630:	FF
; Interesting; The above data suggests that the sprite
; In Mold 9 is 96 x 128, but the Mold data at C2/D0B0
; Indicates it's only 96 x 96.  best abide by the smaller
; Dimensions.

; Mold 10 - Mold slot 0
C2/C631:	00
C2/C632:	00
C2/C633:	00
C2/C634:	01
C2/C635:	04
C2/C636:	05
C2/C637:	08
C2/C638:	09
C2/C639:	FF

; Mold 10 - Mold slot 1
C2/C63A:	40
C2/C63B:	00
C2/C63C:	02
C2/C63D:	06
C2/C63E:	FF

; Mold 10 - Mold slot 2
C2/C63F:	40
C2/C640:	40
C2/C641:	0A
C2/C642:	0E
C2/C643:	FF

; Mold 10 - Mold slot 3
C2/C644:	00
C2/C645:	60
C2/C646:	0C
C2/C647:	FF

; Mold 10 - Mold slot 4
C2/C648:	20
C2/C649:	60
C2/C64A:	0D
C2/C64B:	FF

; Mold 11 - Mold slot 0
C2/C64C:	00
C2/C64D:	00
C2/C64E:	00
C2/C64F:	04
C2/C650:	FF

; Mold 11 - Mold slot 1
C2/C651:	20
C2/C652:	00
C2/C653:	01
C2/C654:	05
C2/C655:	FF

; Mold 11 - Mold slot 2
C2/C656:	40
C2/C657:	00
C2/C658:	02
C2/C659:	06
C2/C65A:	FF

; Mold 11 - Mold slot 3
C2/C65B:	40
C2/C65C:	40
C2/C65D:	0A
C2/C65E:	0E
C2/C65F:	FF

; Mold 11 - Mold slot 4
C2/C660:	00
C2/C661:	40
C2/C662:	08
C2/C663:	09
C2/C664:	0C
C2/C665:	0D
C2/C666:	FF

; Mold 12 - Mold slot 0
C2/C667:	00
C2/C668:	00
C2/C669:	00
C2/C66A:	01
C2/C66B:	04
C2/C66C:	05
C2/C66D:	FF

; Mold 12 - Mold slot 1
C2/C66E:	40
C2/C66F:	00
C2/C670:	02
C2/C671:	03
C2/C672:	06
C2/C673:	07
C2/C674:	FF

; Mold 12 - Mold slot 2
C2/C675:	00
C2/C676:	40
C2/C677:	08
C2/C678:	0C
C2/C679:	FF

; Mold 12 - Mold slot 3
C2/C67A:	20
C2/C67B:	40
C2/C67C:	09
C2/C67D:	0D
C2/C67E:	FF

; Mold 12 - Mold slot 4
C2/C67F:	40
C2/C680:	40
C2/C681:	0A
C2/C682:	0E
C2/C683:	FF

; Mold 12 - Mold slot 5
C2/C684:	60
C2/C685:	40
C2/C686:	0B
C2/C687:	0F
C2/C688:	FF

; C2/C4A3-C2/C688 is well-documented. Here's some 64-bit data called from C1/3E4F.
C2/C689:	6314FE7F14636F4E
C2/C691:	6314F64BFF2BCD26
C2/C699:	63147B521546F041
C2/C6A1:	FD43F13FE003E002

; Party sprite animation data. This is the sequence of four graphical actions used in different animations.
C2/C6A9:	FFFFFFFF
C2/C6AD:	00000000	; Wounded
C2/C6B1:	01020302
C2/C6B5:	34353635	; Running away
C2/C6B9:	04050605
C2/C6BD:	0E0F100F
C2/C6C1:	11111111	; Standing still
C2/C6C5:	12041204
C2/C6C9:	13061306
C2/C6CD:	08090809	; Chanting
C2/C6D1:	14141414	; Kneeling
C2/C6D5:	15151515	; Ready to fight
C2/C6D9:	16161616
C2/C6DD:	0A0A0A0A
C2/C6E1:	020B020B
C2/C6E5:	353D353D
C2/C6E9:	050D050D
C2/C6ED:	323C323C
C2/C6F1:	020C020C
C2/C6F5:	02021717
C2/C6F9:	35353737
C2/C6FD:	05050707
C2/C701:	0F0F1818
C2/C705:	19191919
C2/C709:	17171717
C2/C70D:	37373737
C2/C711:	07070707
C2/C715:	18181818
C2/C719:	00000000
C2/C71D:	00000000
C2/C721:	00000000
C2/C725:	00000000
C2/C729:	1E1F1E1F
C2/C72D:	4E4F4E4F
C2/C731:	1D024D02
C2/C735:	1A1B1A1B
C2/C739:	00000000
C2/C73D:	17371807	; Muddled
C2/C741:	4A4A074B

; Sprite tile offsets.
C2/C745:	E00A
C2/C747:	000B
C2/C749:	400B
C2/C74B:	600B
C2/C74D:	200B
C2/C74F:	FFFF
C2/C751:	800B
C2/C753:	FFFF
C2/C755:	FFFF
C2/C757:	FFFF
C2/C759:	0000
C2/C75B:	2000
C2/C75D:	4000
C2/C75F:	6000
C2/C761:	8000
C2/C763:	A000
C2/C765:	FFFF
C2/C767:	FFFF
C2/C769:	0000
C2/C76B:	2000
C2/C76D:	C000
C2/C76F:	E000
C2/C771:	0001
C2/C773:	2001
C2/C775:	FFFF
C2/C777:	FFFF
C2/C779:	0000
C2/C77B:	2000
C2/C77D:	4001
C2/C77F:	6001
C2/C781:	A000
C2/C783:	8000
C2/C785:	FFFF
C2/C787:	FFFF
C2/C789:	0003
C2/C78B:	2003
C2/C78D:	4003
C2/C78F:	6003
C2/C791:	8003
C2/C793:	A003
C2/C795:	FFFF
C2/C797:	FFFF
C2/C799:	C003
C2/C79B:	E003
C2/C79D:	0004
C2/C79F:	2004
C2/C7A1:	4004
C2/C7A3:	6004
C2/C7A5:	FFFF
C2/C7A7:	FFFF
C2/C7A9:	0003
C2/C7AB:	2003
C2/C7AD:	8004
C2/C7AF:	A004
C2/C7B1:	C004
C2/C7B3:	E004
C2/C7B5:	FFFF
C2/C7B7:	FFFF
C2/C7B9:	C003
C2/C7BB:	6006
C2/C7BD:	8006
C2/C7BF:	A006
C2/C7C1:	C006
C2/C7C3:	E006
C2/C7C5:	FFFF
C2/C7C7:	FFFF
C2/C7C9:	4009
C2/C7CB:	6009
C2/C7CD:	8009
C2/C7CF:	A009
C2/C7D1:	C009
C2/C7D3:	E009
C2/C7D5:	FFFF
C2/C7D7:	FFFF
C2/C7D9:	4009
C2/C7DB:	6009
C2/C7DD:	000A
C2/C7DF:	A009
C2/C7E1:	C009
C2/C7E3:	E009
C2/C7E5:	FFFF
C2/C7E7:	FFFF
C2/C7E9:	200A
C2/C7EB:	400A
C2/C7ED:	600A
C2/C7EF:	800A
C2/C7F1:	A00A
C2/C7F3:	C00A
C2/C7F5:	FFFF
C2/C7F7:	FFFF
C2/C7F9:	0000
C2/C7FB:	2000
C2/C7FD:	A00B
C2/C7FF:	C00B
C2/C801:	0001
C2/C803:	2001
C2/C805:	FFFF
C2/C807:	FFFF
C2/C809:	0000
C2/C80B:	2000
C2/C80D:	C000
C2/C80F:	E00B
C2/C811:	0001
C2/C813:	2001
C2/C815:	FFFF
C2/C817:	FFFF
C2/C819:	C012
C2/C81B:	E003
C2/C81D:	E012
C2/C81F:	2004
C2/C821:	4004
C2/C823:	6004
C2/C825:	FFFF
C2/C827:	FFFF
C2/C829:	8001
C2/C82B:	A001
C2/C82D:	C001
C2/C82F:	E001
C2/C831:	0002
C2/C833:	2002
C2/C835:	FFFF
C2/C837:	FFFF
C2/C839:	8001
C2/C83B:	A001
C2/C83D:	4002
C2/C83F:	6002
C2/C841:	8002
C2/C843:	A002
C2/C845:	FFFF
C2/C847:	FFFF
C2/C849:	8001
C2/C84B:	A001
C2/C84D:	C002
C2/C84F:	E002
C2/C851:	2002
C2/C853:	0002
C2/C855:	FFFF
C2/C857:	FFFF
C2/C859:	C003
C2/C85B:	E003
C2/C85D:	0005
C2/C85F:	2005
C2/C861:	4005
C2/C863:	6005
C2/C865:	FFFF
C2/C867:	FFFF
C2/C869:	0003
C2/C86B:	2003
C2/C86D:	8005
C2/C86F:	6003
C2/C871:	A005
C2/C873:	A003
C2/C875:	FFFF
C2/C877:	FFFF
C2/C879:	0003
C2/C87B:	C005
C2/C87D:	E005
C2/C87F:	0006
C2/C881:	2006
C2/C883:	4006
C2/C885:	FFFF
C2/C887:	FFFF
C2/C889:	0007
C2/C88B:	2007
C2/C88D:	4007
C2/C88F:	6007
C2/C891:	8007
C2/C893:	A007
C2/C895:	FFFF
C2/C897:	FFFF
C2/C899:	C007
C2/C89B:	E007
C2/C89D:	0008
C2/C89F:	2008
C2/C8A1:	4008
C2/C8A3:	6008
C2/C8A5:	FFFF
C2/C8A7:	FFFF
C2/C8A9:	8008
C2/C8AB:	A008
C2/C8AD:	C008
C2/C8AF:	E008
C2/C8B1:	0009
C2/C8B3:	2009
C2/C8B5:	FFFF
C2/C8B7:	FFFF
C2/C8B9:	400D
C2/C8BB:	600D
C2/C8BD:	800D
C2/C8BF:	A00D
C2/C8C1:	C00D
C2/C8C3:	E00D
C2/C8C5:	FFFF
C2/C8C7:	FFFF
C2/C8C9:	000E
C2/C8CB:	200E
C2/C8CD:	400E
C2/C8CF:	600E
C2/C8D1:	800E
C2/C8D3:	A00E
C2/C8D5:	FFFF
C2/C8D7:	FFFF
C2/C8D9:	2006
C2/C8DB:	4006
C2/C8DD:	6006
C2/C8DF:	8006
C2/C8E1:	A006
C2/C8E3:	C006
C2/C8E5:	FFFF
C2/C8E7:	FFFF
C2/C8E9:	000C
C2/C8EB:	200C
C2/C8ED:	400C
C2/C8EF:	600C
C2/C8F1:	800C
C2/C8F3:	A00C
C2/C8F5:	FFFF
C2/C8F7:	FFFF
C2/C8F9:	C00C
C2/C8FB:	E00C
C2/C8FD:	000D
C2/C8FF:	200D
C2/C901:	800C
C2/C903:	A00C
C2/C905:	FFFF
C2/C907:	FFFF
C2/C909:	800F
C2/C90B:	A00F
C2/C90D:	C00F
C2/C90F:	E00F
C2/C911:	0010
C2/C913:	2010
C2/C915:	FFFF
C2/C917:	FFFF
C2/C919:	4012
C2/C91B:	6012
C2/C91D:	8012
C2/C91F:	A012
C2/C921:	0001
C2/C923:	2001
C2/C925:	FFFF
C2/C927:	FFFF
C2/C929:	6014
C2/C92B:	8014
C2/C92D:	0013
C2/C92F:	2013
C2/C931:	4013
C2/C933:	6013
C2/C935:	FFFF
C2/C937:	FFFF
C2/C939:	6014
C2/C93B:	8014
C2/C93D:	8013
C2/C93F:	2013
C2/C941:	4013
C2/C943:	6013

C2/C945:	40000000000000000000000000000000
C2/C955:	00000000000000000000000000000000
C2/C965:	4020120D0A0806060504040403030302
C2/C975:	02020202010101010101010101010101
C2/C985:	402D2017120F0D0B0A09080706060605
C2/C995:	05040404040404030303030303020202
C2/C9A5:	403228201A1512100E0D0B0B0A090908
C2/C9B5:	07070606060605050504040404040404
C2/C9C5:	40352D26201B171512100F0E0D0C0B0A
C2/C9D5:	0A090908080707060606060606050505
C2/C9E5:	4037302A24201C1917151211100F0E0D
C2/C9F5:	0C0B0B0A0A0909090808070707060606
C2/CA05:	4039322D2824201C1A1715141211100F
C2/CA15:	0E0E0D0C0B0B0B0A0A09090909080807
C2/CA25:	403A352F2B2623201D1A181715141212
C2/CA35:	10100F0E0E0D0C0B0B0B0B0A0A090909
C2/CA45:	403A35312D292622201D1B1A17161514
C2/CA55:	121210100F0E0E0E0D0C0C0B0B0B0A0A
C2/CA65:	403B37322F2B282522201D1C1A181715
C2/CA75:	151312121110100F0E0E0E0D0C0C0B0B
C2/CA85:	403C3734302D2A272422201E1C1A1917
C2/CA95:	1715151312121110100F0F0E0E0E0D0C
C2/CAA5:	403C3835322E2B29262421201E1C1B1A
C2/CAB5:	1817161514131212111010100F0E0E0E
C2/CAC5:	403C393532302D2A28262421201E1C1B
C2/CAD5:	1A191717151514131212111010100F0F
C2/CAE5:	403C3A3733302E2B2927252321201E1C
C2/CAF5:	1C1A1918171615151413121211111010
C2/CB05:	403C3A3735322F2D2B2926242321201F
C2/CB15:	1D1C1A1A181717161515141312121211
C2/CB25:	403D3A373532302E2B2A282624232120
C2/CB35:	1F1D1C1B1A1918171715151514131212
C2/CB45:	403D3A383533312F2D2B292726242221
C2/CB55:	201F1D1C1B1A1A181717161515141413
C2/CB65:	403D3B38363432302E2C2A2926252422
C2/CB75:	21201F1D1C1B1A1A1918171716151514
C2/CB85:	403D3B39373532302F2D2B2928262524
C2/CB95:	2221201F1D1C1C1B1A19181717161515
C2/CBA5:	403D3B3A37353331302E2C2A29272624
C2/CBB5:	232221201F1E1C1C1B1A1A1918171716
C2/CBC5:	403E3C3A37353432302E2D2B2A282726
C2/CBD5:	24232221201F1E1D1C1B1A1A19181717
C2/CBE5:	403E3C3A38363532312F2E2C2B292826
C2/CBF5:	2524232121201F1E1D1C1B1A1A191818
C2/CC05:	403E3C3A3837353332302E2D2B2A2927
C2/CC15:	262524232121201F1E1D1C1C1B1A1A19
C2/CC25:	403E3C3A3937353432302F2E2C2B2928
C2/CC35:	27262424222121201F1E1D1C1C1B1A1A
C2/CC45:	403E3C3A393735343231302E2D2B2A29
C2/CC55:	2826262424222121201F1E1D1C1C1B1A
C2/CC65:	403E3C3B393736353332302F2E2C2B2A
C2/CC75:	292726252423222121201F1E1D1C1C1B
C2/CC85:	403E3C3B3A383735333230302E2D2B2B
C2/CC95:	29282726252423222121201F1E1D1C1C
C2/CCA5:	403E3C3B3A383735343231302F2E2C2B
C2/CCB5:	2A29282626252423222121201F1E1D1D
C2/CCC5:	403E3C3B3A383735353332302F2E2D2B
C2/CCD5:	2B2929272626242423222121201F1F1E
C2/CCE5:	403F3D3C3A39373635333231302E2E2C
C2/CCF5:	2B2A2928272625242423222121201F1F
C2/CD05:	403F3D3C3A39373635343231302F2E2D
C2/CD15:	2B2B2A2928272625242423222120201F
C2/CD25:	403F3D3C3A3938373534333230302E2E
C2/CD35:	2C2B2A29292726262524242221212020

; C2/CD45-C2/CE2A is compressed data.
C2/CD45:	E600    	; Size: 230 bytes

C2/CD47:	BB      	; First byte of each of these blocks you will see is always the "control byte"; Comments will explain. Take note: the bits of this control are 10111011.
C2/CD48:	00      	; XXXXXXX1: Single tile 00. The 1 is actually the LSB of the control byte. 1 means a single tile, while 0 means several tiles copied from another place in the decompression array; See later for details. The X means we don't care about that bit for this tile or group of tiles.
C2/CD49:	08      	; XXXXXX1X: Single tile 08
C2/CD4A:	DFE7    	; XXXXX0XX: Copy 31 tiles starting at $FFDF; FFDFh = F800 OR [E7DF AND 07FF]. Decompression array population always starts at $FFDE and cycles through $F800-$FFFF which means $FFDF = #$08 currently. Thus, this will add 31 more 08-tiles. To get the number 31, we take #$1F = #$E0 DIV 8 + 3.
C2/CD4C:	03      	; XXXX1XXX: Single tile 03
C2/CD4D:	07      	; XXX1XXXX: Single tile 07
C2/CD4E:	07      	; XX1XXXXX: Single tile 07
C2/CD4F:	DFCF    	; X0XXXXXX: Copy 28 tiles starting at $FFDF; #$08 times 28.
C2/CD51:	10      	; 1XXXXXXX: Single tile 10

C2/CD52:	77
C2/CD53:	02
C2/CD54:	05
C2/CD55:	06
C2/CD56:	00C8
C2/CD58:	18
C2/CD59:	01
C2/CD5A:	04
C2/CD5B:	2008

C2/CD5D:	8E
C2/CD5E:	00B0
C2/CD60:	20
C2/CD61:	01
C2/CD62:	03
C2/CD63:	4000
C2/CD65:	4210
C2/CD67:	0190
C2/CD69:	28

C2/CD6A:	CF
C2/CD6B:	01
C2/CD6C:	02
C2/CD6D:	04
C2/CD6E:	05
C2/CD6F:	6228
C2/CD71:	0180
C2/CD73:	30
C2/CD74:	01

C2/CD75:	11
C2/CD76:	02
C2/CD77:	6000
C2/CD79:	8330
C2/CD7B:	0070
C2/CD7D:	38
C2/CD7E:	9F08
C2/CD80:	8110
C2/CD82:	A630

C2/CD84:	46
C2/CD85:	0150
C2/CD87:	40
C2/CD88:	00
C2/CD89:	9F18
C2/CD8B:	C550
C2/CD8D:	0040
C2/CD8F:	48
C2/CD90:	DF10

C2/CD92:	84
C2/CD93:	E320
C2/CD95:	E980
C2/CD97:	50
C2/CD98:	DF08
C2/CD9A:	C128
C2/CD9C:	E850
C2/CD9E:	0018
C2/CDA0:	58

C2/CDA1:	10
C2/CDA2:	DF00
C2/CDA4:	0141
C2/CDA6:	2C59
C2/CDA8:	0000
C2/CDAA:	60
C2/CDAB:	3F11
C2/CDAD:	4341
C2/CDAF:	4D61

C2/CDB1:	39
C2/CDB2:	68
C2/CDB3:	5F29
C2/CDB5:	66A1
C2/CDB7:	70
C2/CDB8:	00
C2/CDB9:	01
C2/CDBA:	8071
C2/CDBC:	E948

C2/CDBE:	49
C2/CDBF:	78
C2/CDC0:	9F51
C2/CDC2:	AB79
C2/CDC4:	80
C2/CDC5:	9F21
C2/CDC7:	C5A9
C2/CDC9:	88
C2/CDCA:	9F11

C2/CDCC:	88
C2/CDCD:	8219
C2/CDCF:	C849
C2/CDD1:	A628
C2/CDD3:	90
C2/CDD4:	FF29
C2/CDD6:	C529
C2/CDD8:	0E62
C2/CDDA:	98

C2/CDDB:	88
C2/CDDC:	9F01
C2/CDDE:	E131
C2/CDE0:	2A82
C2/CDE2:	A0
C2/CDE3:	3F1A
C2/CDE5:	4492
C2/CDE7:	4208
C2/CDE9:	A8

C2/CDEA:	64
C2/CDEB:	5F82
C2/CDED:	714A
C2/CDEF:	B0
C2/CDF0:	5F3A
C2/CDF2:	888A
C2/CDF4:	06
C2/CDF5:	B8
C2/CDF6:	5F22

C2/CDF8:	4C
C2/CDF9:	442A
C2/CDFB:	8C6A
C2/CDFD:	C0
C2/CDFE:	00
C2/CDFF:	9F92
C2/CE01:	0E32
C2/CE03:	C8
C2/CE04:	DF6A

C2/CE06:	92EE
C2/CE08:	62
C2/CE09:	D0DF
C2/CE0B:	2A
C2/CE0C:	06A3
C2/CE0E:	D8
C2/CE0F:	1F
C2/CE10:	27B3

C2/CE12:	19E0
C2/CE14:	441F
C2/CE16:	534B
C2/CE18:	7BE8
C2/CE1A:	DF12
C2/CE1C:	235B
C2/CE1E:	EE
C2/CE1F:	4A
C2/CE20:	F0

C2/CE21:	7F
C2/CE22:	5B
C2/CE23:	02
C2/CE24:	4B
C2/CE25:	73
C2/CE26:	F8
C2/CE27:	9F
C2/CE28:	8B
C2/CE29:	5043

; Battle character palettes.
C2/CE2B:	02      	; Terra
C2/CE2C:	01      	; Locke
C2/CE2D:	04      	; Cyan
C2/CE2E:	04      	; Shadow
C2/CE2F:	00      	; Edgar
C2/CE30:	00      	; Sabin
C2/CE31:	00      	; Celes
C2/CE32:	03      	; Strago
C2/CE33:	03      	; Relm
C2/CE34:	04      	; Setzer
C2/CE35:	05      	; Mog
C2/CE36:	03      	; Gau
C2/CE37:	03      	; Gogo
C2/CE38:	05      	; Umaro
C2/CE39:	01      	; Vicks & Wedge
C2/CE3A:	00      	; Imp
C2/CE3B:	00      	; Leo
C2/CE3C:	03      	; Banon
C2/CE3D:	06      	; Esper Terra
C2/CE3E:	01      	; Merchant
C2/CE3F:	00      	; Ghost
C2/CE40:	03      	; Kefka
C2/CE41:	03      	; Gestahl
C2/CE42:	00      	; Imperial Soldier

; 24-bit pointers to character sprite data.
C2/CE43:	0000D5  	; Terra
C2/CE46:	A016D5  	; Locke
C2/CE49:	402DD5  	; Cyan
C2/CE4C:	E043D5  	; Shadow
C2/CE4F:	805AD5  	; Edgar
C2/CE52:	2071D5  	; Sabin
C2/CE55:	C087D5  	; Celes
C2/CE58:	609ED5  	; Strago
C2/CE5B:	00B5D5  	; Relm
C2/CE5E:	A0CBD5  	; Setzer
C2/CE61:	40E2D5  	; Mog
C2/CE64:	E0F8D5  	; Gau
C2/CE67:	800FD6  	; Gogo
C2/CE6A:	2026D6  	; Umaro
C2/CE6D:	C03CD6  	; Vicks & Wedge
C2/CE70:	6053D6  	; Imp
C2/CE73:	006AD6  	; Leo
C2/CE76:	607FD6  	; Banon
C2/CE79:	C094D6  	; Esper Terra
C2/CE7C:	20AAD6  	; Merchant
C2/CE7F:	80BFD6  	; Ghost
C2/CE82:	E0D4D6  	; Kefka
C2/CE85:	40EAD6  	; Gestahl
C2/CE88:	C03CD6  	; Imperial Soldier

; Multiplication lookup (x128)
; Used for battlefield entity data offsets

C2/CE8B:	00 00     ; 0 x 128 = 0
C2/CE8D:	80 00     ; 1 x 128 = 128
C2/CE8F:	00 01     ; 2 x 128 = 256
C2/CE91:	80 01     ; 3 x 128 = 384
C2/CE93:	00 02     ; 4 x 128 = 512
C2/CE95:	80 02
C2/CE97:	00 03
C2/CE99:	80 03
C2/CE9B:	00 04
C2/CE9D:	80 04
C2/CE9F:	00 05
C2/CEA1:	80 05

; 32-bit data, used in the animation of character sprites.
C2/CEA3:	00F80000
C2/CEA7:	00080200
C2/CEAB:	FC080000
C2/CEAF:	0C080200

C2/CEB3:	00F80040
C2/CEB7:	00080240
C2/CEBB:	04080040
C2/CEBF:	F4080240

C2/CEC3:	00000280
C2/CEC7:	00100080
C2/CECB:	FC080080
C2/CECF:	0C080280

C2/CED3:	000002C0
C2/CED7:	001000C0
C2/CEDB:	040800C0
C2/CEDF:	F40802C0

; Data - indexed by encounter type, code in Bank C1
; How much to horizontally shift each character if in back row
; Front - moves further to right
; Back - moves further to left (hence the negative numbers)
; Pincer - horizontal position unchanged, as everybody considered front row to start
; Side - characters 0 and 1 on the right side are moved further right.
;        characters 2 and 3 on the left side are moved further left. 
C2/CEE3:	0C00    	; Front
C2/CEE5:	0C00
C2/CEE7:	0C00
C2/CEE9:	0C00

C2/CEEB:	F4FF    	; Back
C2/CEED:	F4FF
C2/CEEF:	F4FF
C2/CEF1:	F4FF
				
C2/CEF3:	0000    	; Pincer
C2/CEF5:	0000
C2/CEF7:	0000
C2/CEF9:	0000
				
C2/CEFB:	0C00    	; Side
C2/CEFD:	0C00
C2/CEFF:	F4FF
C2/CF01:	F4FF

; Data - indexed by encounter type, code in Bank C1
; Looks like character vertical coordinates to me.  Front, Back, Pincer all the same.
; And with Side, characters 0 and 2 and characters 1 and 3 end up at same heights
C2/CF03:	44      	; Front
C2/CF04:	56      	
C2/CF05:	68      	
C2/CF06:	7A      	
						
C2/CF07:	44      	; Back
C2/CF08:	56      	
C2/CF09:	68      	
C2/CF0A:	7A      	
						
C2/CF0B:	44      	; Pincer
C2/CF0C:	56      	
C2/CF0D:	68      	
C2/CF0E:	7A      	
						
C2/CF0F:	4E      	; Side
C2/CF10:	7A      	
C2/CF11:	4E      	
C2/CF12:	7A      	

C2/CF13:	50
C2/CF14:	5E
C2/CF15:	6C
C2/CF16:	7A 

; Data - indexed by encounter type, code in bank C1
C2/CF17:	7001    	; Front
C2/CF19:	7001    	
C2/CF1B:	7001    	
C2/CF1D:	7001    	
						
C2/CF1F:	9000    	; Back
C2/CF21:	9000    	
C2/CF23:	9000    	
C2/CF25:	9000    	
						
C2/CF27:	0001    	; Pincer
C2/CF29:	0001    	
C2/CF2B:	0001    	
C2/CF2D:	0001    	
						
C2/CF2F:	7001    	; Side
C2/CF31:	7001    	
C2/CF33:	9000    	
C2/CF35:	9000    	

; Data used at C1/3248.
C2/CF37:	C030
C2/CF39:	C031
C2/CF3B:	C032
C2/CF3D:	C033
C2/CF3F:	C034
C2/CF41:	C035
C2/CF43:	C036
C2/CF45:	C037
C2/CF47:	C038
C2/CF49:	C039
C2/CF4B:	C03A
C2/CF4D:	C03B
C2/CF4F:	C03C
C2/CF51:	C03D
C2/CF53:	C03E
C2/CF55:	C03F

; Data used by C1/34E6.
C2/CF57:	0004080C

; Data indexed by code in bank C1.
C2/CF5B:	00204060

; Pointers of some sort. Used at C1/3223.
C2/CF5F:	0045D800
C2/CF63:	0048D800
C2/CF67:	0049D800
C2/CF6B:	004CD800
C2/CF6F:	004DD800

; Indices for the above pointers.
C2/CF73:	00
C2/CF74:	00
C2/CF75:	00
C2/CF76:	00
C2/CF77:	00
C2/CF78:	01
C2/CF79:	00
C2/CF7A:	02
C2/CF7B:	03
C2/CF7C:	03
C2/CF7D:	03
C2/CF7E:	03
C2/CF7F:	04
C2/CF80:	04
C2/CF81:	04
C2/CF82:	04

C2/CF83:	F7FC0C01
C2/CF87:	F7FC4C01
C2/CF8B:	F7FC8C01
C2/CF8F:	F7FCCC01

C2/CF93:	03
C2/CF94:	06
C2/CF95:	08
C2/CF96:	0A
C2/CF97:	0B
C2/CF98:	0D
C2/CF99:	0E
C2/CF9A:	0F
C2/CF9B:	0F
C2/CF9C:	10
C2/CF9D:	10
C2/CF9E:	10
C2/CF9F:	10
C2/CFA0:	10
C2/CFA1:	0F
C2/CFA2:	0F
C2/CFA3:	0E
C2/CFA4:	0D
C2/CFA5:	0B
C2/CFA6:	0A
C2/CFA7:	08
C2/CFA8:	06
C2/CFA9:	03
C2/CFAA:	00

C2/CFAB:	03
C2/CFAC:	04
C2/CFAD:	05
C2/CFAE:	06
C2/CFAF:	07
C2/CFB0:	07
C2/CFB1:	08
C2/CFB2:	08
C2/CFB3:	07
C2/CFB4:	07
C2/CFB5:	06
C2/CFB6:	05
C2/CFB7:	04
C2/CFB8:	03

C2/CFB9:	00
C2/CFBA:	00
C2/CFBB:	00
C2/CFBC:	00
C2/CFBD:	00
C2/CFBE:	00
C2/CFBF:	00
C2/CFC0:	00
C2/CFC1:	00
C2/CFC2:	00
C2/CFC3:	00
C2/CFC4:	00
C2/CFC5:	00
C2/CFC6:	00
C2/CFC7:	00
C2/CFC8:	00
C2/CFC9:	00
C2/CFCA:	00
C2/CFCB:	00
C2/CFCC:	00
C2/CFCD:	00
C2/CFCE:	00
C2/CFCF:	00
C2/CFD0:	00
C2/CFD1:	00
C2/CFD2:	00
C2/CFD3:	00

; Data - indexed by loop in Bank C1 that has 24 iterations
C2/CFD4:	BF
C2/CFD5:	00
C2/CFD6:	63
C2/CFD7:	0C
C2/CFD8:	6C
C2/CFD9:	19
C2/CFDA:	10
C2/CFDB:	2E
C2/CFDC:	F7
C2/CFDD:	42
C2/CFDE:	0E
C2/CFDF:	11
C2/CFE0:	BC
C2/CFE1:	2E
C2/CFE2:	9F
C2/CFE3:	4B
C2/CFE4:	AD
C2/CFE5:	41
C2/CFE6:	39
C2/CFE7:	67
C2/CFE8:	FF
C2/CFE9:	7F
C2/CFEA:	92
C2/CFEB:	21

; Data - indexed by loop in Bank C1 with 22 iterations
C2/CFEC:	42
C2/CFED:	08       
C2/CFEE:	5A       
C2/CFEF:	6B       
C2/CFF0:	C6
C2/CFF1:	18    
C2/CFF2:	10
C2/CFF3:	42    
C2/CFF4:	4A       
C2/CFF5:	29
C2/CFF6:	5A
C2/CFF7:	6B 
C2/CFF8:	73
C2/CFF9:	4E
C2/CFFA:	18
C2/CFFB:	63
C2/CFFC:	EF
C2/CFFD:	3D
C2/CFFE:	73
C2/CFFF:	4E
C2/D000:	4A
C2/D001:	29

C2/D002:	00
C2/D003:	00

; Data - indexed by loop in Bank C1 with 22 iterations
C2/D004:	C6 
C2/D005:	44
C2/D006:	FF
C2/D007:	7F
C2/D008:	60
C2/D009:	3C
C2/D00A:	F7
C2/D00B:	7E
C2/D00C:	AD
C2/D00D:	7D
C2/D00E:	FF
C2/D00F:	7F
C2/D010:	18
C2/D011:	7F
C2/D012:	52
C2/D013:	7E
C2/D014:	8C
C2/D015:	7D
C2/D016:	52
C2/D017:	7E
C2/D018:	29
C2/D019:	7D

; Pointers to monster formation size templates (aka molds)
C2/D01A:	34D0
C2/D01C:	44D0
C2/D01E:	5CD0
C2/D020:	64D0
C2/D022:	6CD0
C2/D024:	78D0
C2/D026:	84D0
C2/D028:	88D0
C2/D02A:	A0D0
C2/D02C:	B0D0
C2/D02E:	B4D0
C2/D030:	C8D0
C2/D032:	DCD0

; Monster formation size templates (aka molds)
; Byte 0 and 1: 16-bit pointer indicating where relative to start of
;               tiles buffer [RAM Address $AE3F] to begin outputting
;               this monster's tiles.
; Byte 2: maximum width in 8-pixel tiles for a monster in this slot.
; Byte 3: maximum height in 8-pixel tiles for a monster in this slot.)

; Template 0:
C2/D034:	00000808	; Enemy 1: 64 x 64
C2/D038:	00010808	; Enemy 2: 64 x 64
C2/D03C:	00100808	; Enemy 3: 64 x 64
C2/D040:	00110808	; Enemy 4: 64 x 64

; Template 1:
C2/D044:	00000808	; Enemy 1: 64 x 64
C2/D048:	00010808	; Enemy 2: 64 x 64
C2/D04C:	00100404	; Enemy 3: 32 x 32
C2/D050:	80100404	; Enemy 4: 32 x 32
C2/D054:	00110404	; Enemy 5: 32 x 32
C2/D058:	80110404	; Enemy 6: 32 x 32

; Template 2:
C2/D05C:	00000C08	; Enemy 1: 96 x 64
C2/D060:	00100C08	; Enemy 2: 96 x 64

; Template 3:
C2/D064:	00000810	; Enemy 1: 64 x 128
C2/D068:	00010810	; Enemy 2: 64 x 128

; Template 4:
C2/D06C:	00000C08	; Enemy 1: 96 x 64
C2/D070:	00100808	; Enemy 2: 64 x 64
C2/D074:	00110808	; Enemy 3: 64 x 64

; Template 5:
C2/D078:	00000810	; Enemy 1: 64 x 128
C2/D07C:	00010808	; Enemy 2: 64 x 64
C2/D080:	00110808	; Enemy 3: 64 x 64

; Template 6:
C2/D084:	00001010	; Enemy 1: 128 x 128

; Template 7:
C2/D088:	00000C0C	; Enemy 1: 96 x 96
C2/D08C:	8001040C	; Enemy 2: 32 x 96
C2/D090:	00180404	; Enemy 3: 32 x 32
C2/D094:	80180404	; Enemy 4: 32 x 32
C2/D098:	00190404	; Enemy 5: 32 x 32
C2/D09C:	80190404	; Enemy 6: 32 x 32

; Template 8:
C2/D0A0:	00000808	; Enemy 1: 64 x 64
C2/D0A4:	00100808	; Enemy 2: 64 x 64
C2/D0A8:	00010408	; Enemy 3: 32 x 64
C2/D0AC:	00110408	; Enemy 4: 32 x 64

; Template 9:
C2/D0B0:	00000C0C	; Enemy 1: 96 x 96

; Template 10:
C2/D0B4:	0000080C	; Enemy 1: 64 x 96
C2/D0B8:	00010408	; Enemy 2: 32 x 64
C2/D0BC:	00110408	; Enemy 3: 32 x 64
C2/D0C0:	00180404	; Enemy 4: 32 x 32
C2/D0C4:	80180404	; Enemy 5: 32 x 32

; Template 11:
C2/D0C8:	00000408	; Enemy 1: 32 x 64
C2/D0CC:	80000408	; Enemy 2: 32 x 64
C2/D0D0:	00010408	; Enemy 3: 32 x 64
C2/D0D4:	00110408	; Enemy 4: 32 x 64
C2/D0D8:	00100808	; Enemy 5: 64 x 64

; Template 12:
C2/D0DC:	00000808	; Enemy 1: 64 x 64
C2/D0E0:	00010808	; Enemy 2: 64 x 64
C2/D0E4:	00100408	; Enemy 3: 32 x 64
C2/D0E8:	80100408	; Enemy 4: 32 x 64
C2/D0EC:	00110408	; Enemy 5: 32 x 64
C2/D0F0:	80110408	; Enemy 6: 32 x 64

; HDMA tables (pointers at C2/D368-C2/D39A)
; (used by C1/02FA: HDMA #3,5
;          C1/0347: HDMA #7
;          C1/0373: HDMA #6
;          C1/03A2: HDMA #0-6)

; (From C2/D386)
; HDMA #6 (Slot mode), copy 4 bytes to +++$2109
;  $897B BG3 VRAM Location        -> $2109 (Battlefield Region)
;  $897C BG4 VRAM Location        -> $210A (Battlefield Region)
;  $897D BG1/BG2 VRAM Location HB -> $210B (Battlefield Region)
;  $897E BG3/BG4 VRAM Location HB -> $210C (Battlefield Region)
;  $897F BG3 VRAM Location        -> $2109 (Menu Region)
;  $8980 BG4 VRAM Location        -> $210A (Menu Region)
;  $8981 BG1/BG2 VRAM Location HB -> $210B (Menu Region)
;  $8982 BG3/BG4 VRAM Location HB -> $210C (Menu Region)
C2/D0F4:	64 7B89 	; From 7E/897B, once (skip 99 lines)
C2/D0F7:	33 7B89 	; From 7E/897B, once (skip 50 lines)
C2/D0FA:	49 7F89 	; From 7E/897F, once (skip 73 lines)
C2/D0FD:	00      	; End

; (From C2/D395)
; HDMA #7, Copy 4 bytes to +++$212A
;  +$8987 Mask Logic Settings     -> +$212A (Top and Bottom Region)
;   $8989 Main Screen Designation ->  $212C (Top and Bottom Region) all layers are disabled
;   $898A Sub Screen Designation  ->  $212D (Top and Bottom Region)
;  +$898B Mask Logic Settings     -> +$212A (Battlefield Region)
;   $898D Main Screen Designation ->  $212C (Battlefield Region)
;   $898E Sub Screen Designation  ->  $212D (Battlefield Region)
;  +$898F Mask Logic Settings     -> +$212A (menu region)
;   $8991 Main Screen Designation ->  $212C (menu region)
;   $8992 Sub Screen Designation  ->  $212D (menu region)
C2/D0FE:	04 8789 	; From 7E/8987, once (skip 3 lines)
C2/D101:	60 8B89 	; From 7E/898B, once (skip 95 lines)
C2/D104:	33 8B89 	; From 7E/898B, once (skip 50 lines)
C2/D107:	44 8F89 	; From 7E/898F, once (skip 67 lines)
C2/D10A:	05 8789 	; From 7E/8987, once (skip 4 lines)
C2/D10D:	00      	; End

; (From C2/D390)
; HDMA #6, Copy 4 bytes to +++$2109
;  $897B BG3 VRAM Location        -> $2109 (Battlefield Region)
;  $897C BG4 VRAM Location        -> $210A (Battlefield Region)
;  $897D BG1/BG2 VRAM Location HB -> $210B (Battlefield Region)
;  $897E BG3/BG4 VRAM Location HB -> $210C (Battlefield Region)
;  $897F BG3 VRAM Location        -> $2109 (Menu Region)
;  $8980 BG4 VRAM Location        -> $210A (Menu Region)
;  $8981 BG1/BG2 VRAM Location HB -> $210B (Menu Region)
;  $8982 BG3/BG4 VRAM Location HB -> $210C (Menu Region)
;  $8983 BG3 VRAM Location        -> $2109 (Slot Region)
;  $8984 BG4 VRAM Location        -> $210A (Slot Region)
;  $8985 BG1/BG2 VRAM Location HB -> $210B (Slot Region)
;  $8986 BG3/BG4 VRAM Location HB -> $210C (Slot Region)
C2/D10E:	64 7B89 	; From 7E/897B, once (skip 99 lines)
C2/D111:	33 7B89 	; From 7E/897B, once (skip 50 lines)
C2/D114:	0C 7F89 	; From 7E/897F, once (skip 11 lines)
C2/D117:	30 8389 	; From 7E/8983, once (skip 47 lines)
C2/D11A:	0D 7F89 	; From 7E/897F, once (skip 12 lines)
C2/D11D:	00      	; End

; (From C2/D38B)
; HDMA #3 (normal mode), Copy 4 bytes to +++$2105
;  $896F Screen Mode       -> $2105 (Battlefield Region)
;  $8970 Screen Mosaic     -> $2106 (Battlefield Region)
;  $8971 BG1 VRAM Location -> $2107 (Battlefield Region)
;  $8972 BG2 VRAM Location -> $2108 (Battlefield Region)
;  $8973 Screen Mode       -> $2105 (Menu Region)
;  $8974 Screen Pixelation -> $2106 (Menu Region)
;  $8975 BG1 VRAM Location -> $2107 (Menu Region)
;  $8976 BG2 VRAM Location -> $2108 (Menu Region)
;  $8977 Screen Mode       -> $2105 (Slot Region)
;  $8978 Screen Pixelation -> $2106 (Slot Region)
;  $8979 BG1 VRAM Location -> $2107 (Slot Region)
;  $897A BG2 VRAM Location -> $2108 (Slot Region)
C2/D11E:	64 6F89 	; From 7E/896F, once (skip 99 lines)
C2/D121:	33 6F89 	; From 7E/896F, once (skip 50 lines)
C2/D124:	0C 7389 	; From 7E/8973, once (skip 11 lines)
C2/D127:	30 7789 	; From 7E/8977, once (skip 47 lines)
C2/D12A:	0D 7389 	; From 7E/8973, once (skip 12 lines)
C2/D12D:	00      	; End

; (From C2/D379)
; HDMA #3 (Slot mode), Copy 4 bytes to +++$2105
;  $896F Screen Mode       -> $2105 (Battlefield Region)
;  $8970 Screen Mosaic     -> $2106 (Battlefield Region)
;  $8971 BG1 VRAM Location -> $2107 (Battlefield Region)
;  $8972 BG2 VRAM Location -> $2108 (Battlefield Region)
;  $8973 Screen Mode       -> $2105 (Menu Region)
;  $8974 Screen Pixelation -> $2106 (Menu Region)
;  $8975 BG1 VRAM Location -> $2107 (Menu Region)
;  $8976 BG2 VRAM Location -> $2108 (Menu Region)
C2/D12E:	64 6F89 	; From 7E/896F, once (skip 99 lines)
C2/D131:	33 6F89 	; From 7E/896F, once (skip 50 lines)
C2/D134:	49 7389 	; From 7E/8973, once (skip 72 lines)
C2/D137:	00      	; End

; (From C2/D37C)
; HDMA #4, Copy 4 bytes to +++$212F
;   $8993 Subscreen Window Mask  -> $212F
;   $8994 Fixed Color +/-        -> $2130
;   $8995 Fixed Color +/- Enable -> $2131
;   $8996 Fixed Color HDMA data  -> $2132
C2/D138:	F0 9389 	; From 7E/8993, for 112 scanlines
C2/D13B:	F0 538B 	; From 7E/8B53, for 112 scanlines
C2/D13E:	00      	; End

; (From C2/D39A)
; HDMA #5 Copy 4 bytes to +++$2126
C2/D13F:	CC 1F9F 	; From 7E/9F1F, for 76 scanlines
C2/D142:	CC 4FA0 	; From 7E/A04F, for 76 scanlines
C2/D145:	C8 7F9C 	; From 7E/9C7F, for 72 scanlines
C2/D148:	00      	; End

; (From C2/D381)
C2/D149:	F0 32EA 	; From 7E/EA32, for 112 scanlines
C2/D14C:	F0 12EB 	; From 7E/EB12, for 112 scanlines
C2/D14F:	00      	; End

; A lot of these pointers seem to be repeated after the first 12...
; HDMA pointers (A)
C2/D150:	BDD1    	; 00:
C2/D152:	C4D1    	; 01:
C2/D154:	CBD1    	; 02:
C2/D156:	F2D1    	; 03: HDMA #0 update (BG1 Scroll: Normal?)
C2/D158:	25D2    	; 04: HDMA #1 update (BG2 Scroll: Normal?)
C2/D15A:	4BD2    	; 05: HDMA #2 update (BG3 Scroll: Normal?)
C2/D15C:	D2D1    	; 06: HDMA #0 update (BG1 Scroll)
C2/D15E:	38D2    	; 07:
C2/D160:	E5D1    	; 08:
C2/D162:	80D1    	; 09:
C2/D164:	12D2    	; 0A: HDMA #1 update (BG2 Scroll: Phantom Train/Mine cart)
C2/D166:	FFD1    	; 0B: HDMA #1 update (BG2 Scroll: Cyan's Dream)

; HDMA pointers (B)
C2/D168:	BDD1    	; 0C: (Same as 00)
C2/D16A:	C4D1    	; 0D: (Same as 01)
C2/D16C:	58D2    	; 0E: 
C2/D16E:	F2D1    	; 0F: (Same as 03)
C2/D170:	25D2    	; 10: (Same as 04)
C2/D172:	81D2    	; 11: HDMA #2 update (BG3 Scroll)
C2/D174:	D2D1    	; 12: (Same as 06)
C2/D176:	68D2    	; 13: 
C2/D178:	E5D1    	; 14: (Same as 08)
C2/D17A:	80D1    	; 15: (Same as 09)
C2/D17C:	12D2    	; 16: (Same as 0A)
C2/D17E:	FFD1    	; 17: (Same as 0B)

; This looks like 24-bit data
C2/D180:	08F543  	; From C2/D162, C2/D17A
C2/D183:	08F943
C2/D186:	08FD43
C2/D189:	080144
C2/D18C:	080544
C2/D18F:	080944
C2/D192:	080D44
C2/D195:	081144
C2/D198:	081544
C2/D19B:	081944
C2/D19E:	081D44
C2/D1A1:	082144
C2/D1A4:	082544
C2/D1A7:	082944
C2/D1AA:	082D44
C2/D1AD:	083144
C2/D1B0:	083544
C2/D1B3:	083944
C2/D1B6:	073D44

; HDMA tables (pointers at C2/D150)
; (used by C1/03FB: HDMA #0-2)

; HDMA #?? From ???
; $4651-$4774 BG1 Scroll HDMA Data (menu region) -> +$210D
C2/D1B9:	C9 5146 	; From 7E/4651, for 73 scanlines
C2/D1BC:	00      	; End

; From C2/D150 (A0), C2/D168 (B0)
C2/D1BD:	F0 F543 	; From 7E/43F5, for 112 scanlines
C2/D1C0:	F0 B545 	; From 7E/45B5, for 112 scanlines
C2/D1C3:	00      	; End

; From C2/D152 (A1), C2/D16A (B1)
C2/D1C4:	F0 7547 	; From 7E/4775, for 112 scanlines
C2/D1C7:	F0 3549 	; From 7E/4935, for 112 scanlines
C2/D1CA:	00      	; End

; From C2/D154 (A2)
C2/D1CB:	F0 F54A 	; From 7E/4AF5, for 112 scanlines
C2/D1CE:	F0 B54C 	; From 7E/4CB5, for 112 scanlines
C2/D1D1:	00      	; End

; From C2/D15C (A6), C2/D174 (B6)
C2/D1D2:	A0 F543 	; From 7E/43F5, for 32 scanlines
C2/D1D5:	A0 F543 	; From 7E/43F5, for 32 scanlines
C2/D1D8:	A0 F543 	; From 7E/43F5, for 32 scanlines
C2/D1DB:	A0 F543 	; From 7E/43F5, for 32 scanlines
C2/D1DE:	97 F543 	; From 7E/43F5, for 23 scanlines
C2/D1E1:	C9 5146 	; From 7E/4651, for 73 scanlines
C2/D1E4:	00      	; End

; From C2/D160 (A8), C2/D178 (B8)
C2/D1E5:	C0 F543 	; From 7E/43F5, for 64 scanlines
C2/D1E8:	C0 F543 	; From 7E/43F5, for 64 scanlines
C2/D1EB:	97 F543 	; From 7E/43F5, for 23 scanlines
C2/D1EE:	C9 5146 	; From 7E/4651, for 73 scanlines
C2/D1F1:	00      	; End

; From C2/D156 (A3), C2/D16E (B3), and C2/D36A
; HDMA #0 (write mode 3, 2+2 bytes, to +$210D)
; $43F5-$4650 BG1 Scroll HDMA Data (battlefield region) -> +$210D (BG1 Scroll Register)
; $4651-$4774 BG1 Scroll HDMA Data (menu region) -> +$210D (BG1 Scroll Register)
C2/D1F2:	40 F543 	; From 7E/43F5 once (skip 63 lines)
C2/D1F5:	40 F543 	; From 7E/43F5 once (skip 63 lines)
C2/D1F8:	17 F543 	; From 7E/43F5 once (skip 22 lines)
C2/D1FB:	C9 5146 	; From 7E/4651 for 73 scanlines
C2/D1FE:	00      	; End


; From C2/D166 (A11), C2/D17E (B11)
C2/D1FF:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D202:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D205:	90 7547 	; From 7E/4775, for 16 scanlines
C2/D208:	B0 7548 	; From 7E/4875, for 48 scanlines
C2/D20B:	97 7548 	; From 7E/4875, for 23 scanlines
C2/D20E:	C9 D149 	; From 7E/49D1, for 73 scanlines
C2/D211:	00      	; End

; From C2/D164 (A10), C2/D17C (B10)
C2/D212:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D215:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D218:	97 7547 	; From 7E/4775, for 23 scanlines
C2/D21B:	A9 7548 	; From 7E/4875, for 41 scanlines
C2/D21E:	97 7548 	; From 7E/4875, for 23 scanlines
C2/D221:	C9 D149 	; From 7E/49D1, for 73 scanlines
C2/D224:	00      	; End

; From C2/D158 (A4), C2/D170 (B4), and C2/D36F
; HDMA #1 (write mode 3, 2+2 bytes, to +$210F)
; $4775-$49D0 BG2 Scroll HDMA Data (battlefield region) -> +$210F
; $49D1-$4AF4 BG2 Scroll HDMA Data (menu region) -> +$210F
C2/D225:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D228:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D22B:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D22E:	A0 7547 	; From 7E/4775, for 32 scanlines
C2/D231:	97 7547 	; From 7E/4775, for 23 scanlines
C2/D234:	C9 D149 	; From 7E/49D1, for 73 scanlines
C2/D237:	00      	; End

; From C2/D15E (A7)
C2/D238:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D23B:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D23E:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D241:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D244:	97 F54A 	; From 7E/4AF5, for 23 scanlines
C2/D247:	C9 514D 	; From 7E/4D51, for 73 scanlines
C2/D24A:	00      	; End

; From C2/D15A (A5) and C2/D374
; HDMA #2 (write mode 3, 2+2 bytes, to +$2111)
; $4AF5-$4D50 Current BG3 Scroll HDMA Data (battlefield region) -> +$2111
; $4D51-$4E74 Current BG3 Scroll HDMA Data (menu region) -> +$2111
C2/D24B:	40 F54A 	; From 7E/4AF5, once (skip 63 lines)
C2/D24E:	40 F54A 	; From 7E/4AF5, once (skip 63 lines)
C2/D251:	17 F54A 	; From 7E/4AF5, once (skip 22 lines)
C2/D254:	C9 514D 	; From 7E/4D51, for 73 scanlines
C2/D257:	00      	; End

; From C2/D16C (B2)
C2/D258:	E4 F54A 	; From 7E/4AF5, for 100 scanlines
C2/D25B:	B3 854C 	; From 7E/4C85, for 51 scanlines
C2/D25E:	8C 514D 	; From 7E/4D51, for 12 scanlines
C2/D261:	30 867B 	; From 7E/7B86, once (skip 47 lines)
C2/D264:	8D 414E 	; From 7E/4E41, for 13 scanlines
C2/D267:	00      	; End

; From C2/D176 (B7)
C2/D268:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D26B:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D26E:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D271:	A0 F54A 	; From 7E/4AF5, for 32 scanlines
C2/D274:	97 F54A 	; From 7E/4AF5, for 23 scanlines
C2/D277:	8C 514D 	; From 7E/4D51, for 12 scanlines
C2/D27A:	30 867B 	; From 7E/7B86, once (skip 47 lines)
C2/D27D:	8D 414E 	; From 7E/4E41, for 13 scanlines
C2/D280:	00      	; End

; From C2/D172 (B5)
C2/D281:	40 F54A 	; From 7E/4AF5, once (skip 63 lines)
C2/D284:	40 F54A 	; From 7E/4AF5, once (skip 63 lines)
C2/D287:	17 F54A 	; From 7E/4AF5, once (skip 22 lines)
C2/D28A:	8C 514D 	; From 7E/4D51, for 12 scanlines
C2/D28D:	30 867B 	; From 7E/7B86, once (skip 47 lines)
C2/D290:	8D 414E 	; From 7E/4E41, for 13 scanlines
C2/D293:	00      	; End

; Data - indexed in routine C1/04CA with a pointer between 0 and Eh, 16 bits at a time
C2/D294:	0000
C2/D296:	2000
C2/D298:	4000
C2/D29A:	6000
C2/D29C:	8000
C2/D29E:	A000
C2/D2A0:	C000
C2/D2A2:	E000

; Data - indexed in routine C1/0461 with a pointer between 0 and Eh, 16 bits at a time
C2/D2A4:	4071
C2/D2A6:	6071
C2/D2A8:	8071
C2/D2AA:	A071
C2/D2AC:	C071
C2/D2AE:	E071
C2/D2B0:	0072
C2/D2B2:	2072

; Data - indexed in routine C1/0461 with a pointer between 0 and Eh, 16 bits at a time
C2/D2B4:	0000
C2/D2B6:	4000
C2/D2B8:	8000
C2/D2BA:	C000
C2/D2BC:	0001
C2/D2BE:	4001
C2/D2C0:	8001
C2/D2C2:	C001

; Called in a function located at C1/09DE:
C2/D2C4:	00A0
C2/D2C6:	80A0
C2/D2C8:	00A1
C2/D2CA:	80A1

C2/D2CC:	00A2
C2/D2CE:	80A2
C2/D2D0:	00A3
C2/D2D2:	80A3

C2/D2D4:	0020
C2/D2D6:	4020
C2/D2D8:	8020
C2/D2DA:	C020

C2/D2DC:	0021
C2/D2DE:	4021
C2/D2E0:	8021
C2/D2E2:	C021

; Data - indexed in routine C1/0A16 with a pointer between 0 and 3Eh, 16 bits at a time
; DMA #7 source addresses (gets written to $004372-73, bank $7F)
; Character graphics stuff? (hide characters during esper summons)
C2/D2E4:	00A4
C2/D2E6:	00A6
C2/D2E8:	80A4
C2/D2EA:	80A6
C2/D2EC:	00A5
C2/D2EE:	00A7
C2/D2F0:	80A5
C2/D2F2:	80A7
C2/D2F4:	00A8
C2/D2F6:	00AA
C2/D2F8:	80A8
C2/D2FA:	80AA
C2/D2FC:	00A9
C2/D2FE:	00AB
C2/D300:	80A9
C2/D302:	80AB
C2/D304:	00AC
C2/D306:	00AE
C2/D308:	80AC
C2/D30A:	80AE
C2/D30C:	00AD
C2/D30E:	00AF
C2/D310:	80AD
C2/D312:	80AF
C2/D314:	00B0
C2/D316:	00B2
C2/D318:	80B0
C2/D31A:	80B2
C2/D31C:	00B1
C2/D31E:	00B3
C2/D320:	80B1
C2/D322:	80A7

; Data - indexed in routine C1/0A16 with a pointer between 0 and 3Eh, 16-bits at a time
; VRAM addresses (gets written to $002116)
C2/D324:	0022
C2/D326:	0023
C2/D328:	4022
C2/D32A:	4023
C2/D32C:	8022
C2/D32E:	8023
C2/D330:	C022
C2/D332:	C023
C2/D334:	0022
C2/D336:	0023
C2/D338:	4022
C2/D33A:	4023
C2/D33C:	8022
C2/D33E:	8023
C2/D340:	C022
C2/D342:	C023
C2/D344:	0022
C2/D346:	0023
C2/D348:	4022
C2/D34A:	4023
C2/D34C:	8022
C2/D34E:	8023
C2/D350:	C022
C2/D352:	C023
C2/D354:	0022
C2/D356:	0023
C2/D358:	4022
C2/D35A:	4023
C2/D35C:	8022
C2/D35E:	8023
C2/D360:	C022
C2/D362:	C023

; Data - used by code in Bank C1
C2/D364:	0E
C2/D365:	2A
C2/D366:	46
C2/D367:	62

; Data - setup HDMA transfer from WRAM (bank $7E) into various registers
; (code in C1 copies these 5 bytes to $43n0-$43n4, then sets $43n7 to #$7E)

; HDMA #0
C2/D368:	43      	; Mode: copy 2+2 bytes (indirect, auto increment)
C2/D369:	0D      	; To +$210D (BG1 H/V Scroll Registers)
C2/D36A:	F2D1C2  	; HDMA table at $C2/D1F2

; HDMA #1
C2/D36D:	43      	; Mode: copy 2+2 bytes (indirect, auto increment)
C2/D36E:	0F      	; To +$210F (BG2 H/V Scroll Registers)
C2/D36F:	25D2C2  	; HDMA table at $C2/D225

; HDMA #2
C2/D372:	43      	; Mode: copy 2+2 bytes (indirect, auto increment)
C2/D373:	11      	; To +$2111 (BG3 H/V Scroll Registers)
C2/D374:	4BD2C2  	; HDMA table at $C2/D24B

; HDMA #3 (Slot mode)
C2/D377:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D378:	05      	; To +++$2105 (BG Mode and Character Size)
C2/D379:	2ED1C2  	; HDMA table at $C2/D12E

; HDMA #4
C2/D37C:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D37D:	2F      	; To +++$212F (Subscreen Window Mask, Color math)
C2/D37E:	38D1C2  	; HDMA table at $C2/D138

; HDMA #5
C2/D381:	41      	; Mode: copy 2 bytes (indirect, auto increment)
C2/D382:	31      	; Destination +$2131 (Color math)
C2/D383:	49D1C2  	; HDMA table at $C2/D149

; HDMA #6 (Slot mode)
C2/D386:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D387:	09      	; To +++$2109 (BG3/BG4 Tilemap, BG1/2/3/4 Tileset addresses)
C2/D388:	F4D0C2  	; HDMA table at $C2/D0F4

; HDMA #3 (Normal mode)
C2/D38B:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D38C:	05      	; To +++$2105 (BG Mode, Mosaic, BG1/2 Tilemap address and size)
C2/D38D:	1ED1C2  	; HDMA table at $C2/D11E

; HDMA #6 (Normal mode)
C2/D390:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D391:	09      	; To +++$2109 (BG3 Tilemap Address and Size)
C2/D392:	0ED1C2  	; HDMA table at $C2/D10E

; HDMA #7
C2/D395:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D396:	2A      	; To +++$212A (Window mask logic for BGs)
C2/D397:	FED0C2  	; HDMA table at $C2/D0FE

; HDMA #5
C2/D39A:	44      	; Mode: copy 4 bytes (indirect, auto increment)
C2/D39B:	26      	; To +++$2126 (Window Positions)
C2/D39C:	3FD1C2  	; HDMA table at $C2/D13F

; 16-bit data called from a few places in bank C1.
C2/D39F:	0101
C2/D3A1:	0101
C2/D3A3:	0102
C2/D3A5:	0102
C2/D3A7:	0102
C2/D3A9:	0203
C2/D3AB:	0203
C2/D3AD:	0303
C2/D3AF:	0403
C2/D3B1:	0404
C2/D3B3:	0405
C2/D3B5:	0405
C2/D3B7:	0505
C2/D3B9:	0505
C2/D3BB:	0505
C2/D3BD:	0504
C2/D3BF:	0504
C2/D3C1:	0404
C2/D3C3:	0304
C2/D3C5:	0303
C2/D3C7:	0302
C2/D3C9:	0302
C2/D3CB:	0201
C2/D3CD:	0201
C2/D3CF:	0201
C2/D3D1:	0101
C2/D3D3:	0101

C2/D3D5:	A9 00      	LDA #$00       ; 0
C2/D3D7:	48         	PHA
C2/D3D8:	AB         	PLB            ; Data bank register now points to bank $00
C2/D3D9:	8D 00 42   	STA $4200      ; ($004200)
C2/D3DC:	A2 00 00   	LDX #$0000     ; 0
C2/D3DF:	DA         	PHX            ; PEA would've worked...
C2/D3E0:	2B         	PLD            ; Direct page register now points to bank $00, page $00
C2/D3E1:	A9 80      	LDA #$80       ; -128
C2/D3E3:	8D 00 21   	STA $2100      ; ($002100)
C2/D3E6:	A9 61      	LDA #$61       ; 97
C2/D3E8:	8D 01 21   	STA $2101      ; ($002101)
C2/D3EB:	A9 80      	LDA #$80       ; -128
C2/D3ED:	8D 15 21   	STA $2115      ; ($002115)
C2/D3F0:	A9 00      	LDA #$00
C2/D3F2:	AA         	TAX
C2/D3F3:	8D 13 21   	STA $2113      ; ($002113)
C2/D3F6:	8D 13 21   	STA $2113       
C2/D3F9:	8D 14 21   	STA $2114      ; ($002114)
C2/D3FC:	8D 14 21   	STA $2114       
C2/D3FF:	8D 2E 21   	STA $212E      ; ($00212E)
C2/D402:	8D 2F 21   	STA $212F      ; ($00212F)
C2/D405:	8D 0B 42   	STA $420B      ; ($00420B)
C2/D408:	8D 0C 42   	STA $420C      ; ($00420C)
C2/D40B:	8D 31 21   	STA $2131      ; ($002131)
C2/D40E:	8D 33 21   	STA $2133      ; ($002133)
C2/D411:	8D 30 21   	STA $2130      ; ($002130)
C2/D414:	8D 28 21   	STA $2128      ; ($002128)
C2/D417:	8D 29 21   	STA $2129      ; ($002129)
C2/D41A:	A9 C1      	LDA #$C1       ; -63
C2/D41C:	8D 03 15   	STA $1503      ; ($001503)
C2/D41F:	A9 C1      	LDA #$C1       ; A = -63 already!
C2/D421:	8D 07 15   	STA $1507      ; ($001507)
C2/D424:	A2 A7 0B   	LDX #$0BA7     ; 2,983
C2/D427:	8E 01 15   	STX $1501      ; ($001501)
C2/D42A:	A2 4A 0D   	LDX #$0D4A     ; 3,402
C2/D42D:	8E 05 15   	STX $1505      ; ($001505)
C2/D430:	A9 5C      	LDA #$5C       ; 92
C2/D432:	8D 00 15   	STA $1500      ; ($001500)
C2/D435:	8D 04 15   	STA $1504      ; ($001504)
C2/D438:	A9 01      	LDA #$01       ; 1
C2/D43A:	8F 0D 42 00	STA $00420D    ; Do we really need a 24-bit address?
C2/D43E:	A9 33      	LDA #$33       ; 51
C2/D440:	8D 23 21   	STA $2123      ; ($002123)
C2/D443:	8D 24 21   	STA $2124      ; ($002124)
C2/D446:	8D 25 21   	STA $2125      ; ($002125)
C2/D449:	A9 7E      	LDA #$7E
C2/D44B:	48         	PHA
C2/D44C:	AB         	PLB            ; Data bank register now points to bank $7E
C2/D44D:	A2 00 00   	LDX #$0000
C2/D450:	9E 00 00   	STZ $0000,X
C2/D453:	E8         	INX
C2/D454:	E0 9C 00   	CPX #$009C     ; 156
C2/D457:	D0 F7      	BNE $D450      ; -9
C2/D459:	A2 78 61   	LDX #$6178     ; 24,952
C2/D45C:	9E 00 00   	STZ $0000,X
C2/D45F:	E8         	INX
C2/D460:	E0 13 8D   	CPX #$8D13     ; 36,115
C2/D463:	D0 F7      	BNE $D45C      ; -9
C2/D465:	7B         	TDC            ; A = 0
C2/D466:	AA         	TAX            ; X = 0
C2/D467:	9D 00 7E   	STA $7E00,X
C2/D46A:	E8         	INX
C2/D46B:	E0 00 02   	CPX #$0200     ; 512
C2/D46E:	D0 F7      	BNE $D467      ; -9
C2/D470:	6B         	RTL

; Some 32-bit data called from C1/24B6 and C1/24BB.
C2/D471:	3FAE0024
C2/D475:	3FB00025
C2/D479:	3FB20026
C2/D47D:	3FB40027
C2/D481:	3FB60028
C2/D485:	3FB80029
C2/D489:	3FBA002A
C2/D48D:	3FBC002B
C2/D491:	3FBE002C
C2/D495:	3FC4002D

; RAM palette 8 data.
C2/D499:	2925
C2/D49B:	4308
C2/D49D:	FE7F
C2/D49F:	327F
C2/D4A1:	2A5A
C2/D4A3:	4445
C2/D4A5:	A230
C2/D4A7:	F256
C2/D4A9:	0A2A
C2/D4AB:	2111
C2/D4AD:	D919
C2/D4AF:	D210
C2/D4B1:	8A0C
C2/D4B3:	BD0E
C2/D4B5:	F109
C2/D4B7:	0A05

C2/D4B9:	6B2D
C2/D4BB:	4308
C2/D4BD:	2A5A
C2/D4BF:	FE7F
C2/D4C1:	327F
C2/D4C3:	2A5A
C2/D4C5:	4445
C2/D4C7:	F256
C2/D4C9:	0A2A
C2/D4CB:	2111
C2/D4CD:	D919
C2/D4CF:	D210
C2/D4D1:	8A0C
C2/D4D3:	BD0E
C2/D4D5:	F109
C2/D4D7:	0A05

C2/D4D9:	6B2D
C2/D4DB:	4308
C2/D4DD:	4445
C2/D4DF:	2A5A
C2/D4E1:	FE7F
C2/D4E3:	327F
C2/D4E5:	2A5A
C2/D4E7:	F256
C2/D4E9:	0A2A
C2/D4EB:	2111
C2/D4ED:	D919
C2/D4EF:	D210
C2/D4F1:	8A0C
C2/D4F3:	BD0E
C2/D4F5:	F109
C2/D4F7:	0A05

C2/D4F9:	6B2D
C2/D4FB:	4308
C2/D4FD:	2A5A
C2/D4FF:	4445
C2/D501:	2A5A
C2/D503:	FE7F
C2/D505:	327F
C2/D507:	F256
C2/D509:	0A2A
C2/D50B:	2111
C2/D50D:	D919
C2/D50F:	D210
C2/D511:	8A0C
C2/D513:	BD0E
C2/D515:	F109
C2/D517:	0A05

C2/D519:	6B2D
C2/D51B:	4308
C2/D51D:	F16E
C2/D51F:	2A5A
C2/D521:	4445
C2/D523:	2A5A
C2/D525:	FE7F
C2/D527:	F256
C2/D529:	0A2A
C2/D52B:	2111
C2/D52D:	D919
C2/D52F:	D210
C2/D531:	8A0C
C2/D533:	BD0E
C2/D535:	F109
C2/D537:	0A05

; Clip plane dynamics function.
C2/D539:	AD 1B 96   	LDA $961B      ; Load clip plane shape
C2/D53C:	0A         	ASL
C2/D53D:	AA         	TAX
C2/D53E:	7C 41 D5   	JMP ($D541,X)

; Pointers chosen based on clip plane shape.
C2/D541:	77 D7		(Null - square?)
C2/D543:	AD D7		(Circle)
C2/D545:	12 D8		(Wavy)
C2/D547:	CD D6		(Pillar)
C2/D549:	27 D6		(Tall oval)
C2/D54B:	18 D8		(Wavy in)
C2/D54D:	ED D6		(Wide oval)
C2/D54F:	53 D5		(Dome)
C2/D551:	0C D8		(Wavy out)

; Called if clip plane shape is a dome.
C2/D553:	A2 FE      	LDX #$FE       ; -2
C2/D555:	64 22      	STZ $22
C2/D557:	64 26      	STZ $26
C2/D559:	A5 26      	LDA $26        ; TDC?
C2/D55B:	29 01      	AND #$01
C2/D55D:	D0 2E      	BNE $D58D      ; +46
C2/D55F:	A5 16      	LDA $16
C2/D561:	38         	SEC
C2/D562:	F9 1F 9E   	SBC $9E1F,Y
C2/D565:	90 04      	BCC $D56B      ; +4
C2/D567:	C9 08      	CMP #$08       ; 8
C2/D569:	B0 02      	BCS $D56D      ; +2
C2/D56B:	A9 08      	LDA #$08       ; 8
C2/D56D:	8F 80 21 00	STA $002180
C2/D571:	9D 1F 96   	STA $961F,X
C2/D574:	B9 1F 9E   	LDA $9E1F,Y
C2/D577:	18         	CLC
C2/D578:	65 18      	ADC $18
C2/D57A:	B0 04      	BCS $D580      ; +4
C2/D57C:	C9 F7      	CMP #$F7       ; -9
C2/D57E:	90 02      	BCC $D582      ; +2
C2/D580:	A9 F7      	LDA #$F7       ; -9
C2/D582:	8F 80 21 00	STA $002180
C2/D586:	9D 20 96   	STA $9620,X
C2/D589:	CA         	DEX
C2/D58A:	CA         	DEX
C2/D58B:	80 24      	BRA $D5B1      ; +36

C2/D58D:	A5 16      	LDA $16
C2/D58F:	38         	SEC
C2/D590:	F9 1F 9E   	SBC $9E1F,Y
C2/D593:	90 04      	BCC $D599      ; +4
C2/D595:	C9 08      	CMP #$08       ; 8
C2/D597:	B0 02      	BCS $D59B      ; +2
C2/D599:	A9 08      	LDA #$08       ; 8
C2/D59B:	9D 1F 96   	STA $961F,X
C2/D59E:	B9 1F 9E   	LDA $9E1F,Y
C2/D5A1:	18         	CLC
C2/D5A2:	65 18      	ADC $18
C2/D5A4:	B0 04      	BCS $D5AA      ; +4
C2/D5A6:	C9 F7      	CMP #$F7       ; -9
C2/D5A8:	90 02      	BCC $D5AC      ; +2
C2/D5AA:	A9 F7      	LDA #$F7       ; -9
C2/D5AC:	9D 20 96   	STA $9620,X
C2/D5AF:	CA         	DEX
C2/D5B0:	CA         	DEX
C2/D5B1:	E6 26      	INC $26
C2/D5B3:	C8         	INY
C2/D5B4:	C4 12      	CPY $12
C2/D5B6:	D0 A1      	BNE $D559      ; -95
C2/D5B8:	7B         	TDC
C2/D5B9:	99 1F 9E   	STA $9E1F,Y
C2/D5BC:	88         	DEY
C2/D5BD:	B9 1F 9E   	LDA $9E1F,Y
C2/D5C0:	3A         	DEC
C2/D5C1:	85 12      	STA $12
C2/D5C3:	B9 1F 9E   	LDA $9E1F,Y
C2/D5C6:	D9 1E 9E   	CMP $9E1E,Y
C2/D5C9:	F0 56      	BEQ $D621      ; +86
C2/D5CB:	A5 26      	LDA $26
C2/D5CD:	29 01      	AND #$01
C2/D5CF:	D0 2C      	BNE $D5FD      ; +44
C2/D5D1:	A5 16      	LDA $16
C2/D5D3:	38         	SEC
C2/D5D4:	E5 12      	SBC $12
C2/D5D6:	90 04      	BCC $D5DC      ; +4
C2/D5D8:	C9 08      	CMP #$08       ; 8
C2/D5DA:	B0 02      	BCS $D5DE      ; +2
C2/D5DC:	A9 08      	LDA #$08       ; 8
C2/D5DE:	8F 80 21 00	STA $002180
C2/D5E2:	9D 1F 96   	STA $961F,X
C2/D5E5:	A5 12      	LDA $12
C2/D5E7:	18         	CLC
C2/D5E8:	65 18      	ADC $18
C2/D5EA:	B0 04      	BCS $D5F0      ; +4
C2/D5EC:	C9 F7      	CMP #$F7       ; -9
C2/D5EE:	90 02      	BCC $D5F2      ; +2
C2/D5F0:	A9 F7      	LDA #$F7       ; -9
C2/D5F2:	8F 80 21 00	STA $002180
C2/D5F6:	9D 20 96   	STA $9620,X
C2/D5F9:	CA         	DEX
C2/D5FA:	CA         	DEX
C2/D5FB:	80 22      	BRA $D61F      ; +34

C2/D5FD:	A5 16      	LDA $16
C2/D5FF:	38         	SEC
C2/D600:	E5 12      	SBC $12
C2/D602:	90 04      	BCC $D608      ; +4
C2/D604:	C9 08      	CMP #$08       ; 8
C2/D606:	B0 02      	BCS $D60A      ; +2
C2/D608:	A9 08      	LDA #$08       ; 8
C2/D60A:	9D 1F 96   	STA $961F,X
C2/D60D:	A5 12      	LDA $12
C2/D60F:	18         	CLC
C2/D610:	65 18      	ADC $18
C2/D612:	B0 04      	BCS $D618      ; +4
C2/D614:	C9 F7      	CMP #$F7       ; -9
C2/D616:	90 02      	BCC $D61A      ; +2
C2/D618:	A9 F7      	LDA #$F7       ; -9
C2/D61A:	9D 20 96   	STA $9620,X
C2/D61D:	CA         	DEX
C2/D61E:	CA         	DEX
C2/D61F:	E6 26      	INC $26
C2/D621:	C6 12      	DEC $12
C2/D623:	88         	DEY
C2/D624:	D0 9D      	BNE $D5C3      ; -99
C2/D626:	60         	RTS

; Called if clip plane shape is a tall oval.
C2/D627:	A2 FC      	LDX #$FC       ; -4
C2/D629:	A5 16      	LDA $16
C2/D62B:	38         	SEC
C2/D62C:	F9 1F 9E   	SBC $9E1F,Y
C2/D62F:	90 04      	BCC $D635      ; +4
C2/D631:	C9 08      	CMP #$08       ; 8
C2/D633:	B0 02      	BCS $D637      ; +2
C2/D635:	A9 08      	LDA #$08       ; 8
C2/D637:	8F 80 21 00	STA $002180
C2/D63B:	85 22      	STA $22
C2/D63D:	9D 1F 96   	STA $961F,X
C2/D640:	9D 21 96   	STA $9621,X
C2/D643:	B9 1F 9E   	LDA $9E1F,Y
C2/D646:	18         	CLC
C2/D647:	65 18      	ADC $18
C2/D649:	B0 04      	BCS $D64F      ; +4
C2/D64B:	C9 F7      	CMP #$F7       ; -9
C2/D64D:	90 02      	BCC $D651      ; +2
C2/D64F:	A9 F7      	LDA #$F7       ; -9
C2/D651:	8F 80 21 00	STA $002180
C2/D655:	85 23      	STA $23
C2/D657:	9D 20 96   	STA $9620,X
C2/D65A:	9D 22 96   	STA $9622,X
C2/D65D:	A5 22      	LDA $22
C2/D65F:	8F 80 21 00	STA $002180
C2/D663:	A5 23      	LDA $23
C2/D665:	8F 80 21 00	STA $002180
C2/D669:	CA         	DEX
C2/D669:	CA         	DEX
C2/D669:	CA         	DEX
C2/D669:	CA         	DEX
C2/D66D:	C8         	INY
C2/D66E:	C4 12      	CPY $12
C2/D670:	D0 B7      	BNE $D629      ; -73
C2/D672:	7B         	TDC
C2/D673:	99 1F 9E   	STA $9E1F,Y
C2/D676:	88         	DEY
C2/D677:	B9 1F 9E   	LDA $9E1F,Y
C2/D67A:	3A         	DEC A
C2/D67B:	85 12      	STA $12
C2/D67D:	B9 1F 9E   	LDA $9E1F,Y
C2/D680:	D9 1E 9E   	CMP $9E1E,Y
C2/D683:	F0 42      	BEQ $D6C7      ; +66
C2/D685:	A5 16      	LDA $16
C2/D687:	38         	SEC
C2/D688:	E5 12      	SBC $12
C2/D68A:	90 04      	BCC $D690      ; +4
C2/D68C:	C9 08      	CMP #$08       ; 8
C2/D68E:	B0 02      	BCS $D692      ; +2
C2/D690:	A9 08      	LDA #$08       ; 8
C2/D692:	8F 80 21 00	STA $002180
C2/D696:	85 22      	STA $22
C2/D698:	9D 1F 96   	STA $961F,X
C2/D69B:	9D 21 96   	STA $9621,X
C2/D69E:	A5 12      	LDA $12
C2/D6A0:	18         	CLC
C2/D6A1:	65 18      	ADC $18
C2/D6A3:	B0 04      	BCS $D6A9      ; +4
C2/D6A5:	C9 F7      	CMP #$F7       ; -9
C2/D6A7:	90 02      	BCC $D6AB      ; +2
C2/D6A9:	A9 F7      	LDA #$F7       ; -9
C2/D6AB:	8F 80 21 00	STA $002180
C2/D6AF:	85 23      	STA $23
C2/D6B1:	9D 20 96   	STA $9620,X
C2/D6B4:	9D 22 96   	STA $9622,X
C2/D6B7:	A5 22      	LDA $22
C2/D6B9:	8F 80 21 00	STA $002180
C2/D6BD:	A5 23      	LDA $23
C2/D6BF:	8F 80 21 00	STA $002180
C2/D6C3:	CA CA CA CA	DEX #4
C2/D6C7:	C6 12      	DEC $12
C2/D6C9:	88         	DEY
C2/D6CA:	D0 B1      	BNE $D67D      ; -79
C2/D6CC:	60         	RTS

; Called if clip plane shape is a pillar.
C2/D6CD:	20 77 D7   	JSR $D777
C2/D6D0:	C2 20      	REP #$20       ; 16-bit A
C2/D6D2:	7B         	TDC            ; A = 0
C2/D6D3:	AA         	TAX            ; X = 0
C2/D6D4:	AD 1F 97   	LDA $971F
C2/D6D7:	9D 1F 96   	STA $961F,X
C2/D6DA:	9D 5F 96   	STA $965F,X
C2/D6DD:	9D 9F 96   	STA $969F,X
C2/D6E0:	9D DF 96   	STA $96DF,X
C2/D6E3:	E8         	INX
C2/D6E4:	E8         	INX
C2/D6E5:	E0 40      	CPX #$40       ; 64
C2/D6E7:	D0 EE      	BNE $D6D7      ; -18
C2/D6E9:	7B         	TDC
C2/D6EA:	E2 20      	SEP #$20       ; 8-bit A
C2/D6EC:	60         	RTS

; Called if clip plane shape is a wide oval.
C2/D6ED:	A2 FE      	LDX #$FE       ; -2
C2/D6EF:	64 22      	STZ $22
C2/D6F1:	64 26      	STZ $26
C2/D6F3:	A5 26      	LDA $26
C2/D6F5:	29 01      	AND #$01
C2/D6F7:	D0 2C      	BNE $D725      ; +44
C2/D6F9:	A5 16      	LDA $16
C2/D6FB:	38         	SEC
C2/D6FC:	F9 1F 9E   	SBC $9E1F,Y
C2/D6FF:	90 04      	BCC $D705      ; +4
C2/D701:	C9 08      	CMP #$08       ; 8
C2/D703:	B0 02      	BCS $D707      ; +2
C2/D705:	A9 08      	LDA #$08       ; 8
C2/D707:	8F 80 21 00	STA $002180
C2/D70B:	9D 1F 96   	STA $961F,X
C2/D70E:	B9 1F 9E   	LDA $9E1F,Y
C2/D711:	18         	CLC
C2/D712:	65 18      	ADC $18
C2/D714:	B0 04      	BCS $D71A      ; +4
C2/D716:	C9 F7      	CMP #$F7       ; -9
C2/D718:	90 02      	BCC $D71C      ; +2
C2/D71A:	A9 F7      	LDA #$F7       ; -9
C2/D71C:	8F 80 21 00	STA $002180
C2/D720:	9D 20 96   	STA $9620,X
C2/D723:	CA         	DEX
C2/D724:	CA         	DEX
C2/D725:	E6 26      	INC $26
C2/D727:	C8         	INY
C2/D728:	C4 12      	CPY $12
C2/D72A:	D0 C7      	BNE $D6F3      ; -57
C2/D72C:	7B         	TDC
C2/D72D:	99 1F 9E   	STA $9E1F,Y
C2/D730:	88         	DEY
C2/D731:	B9 1F 9E   	LDA $9E1F,Y
C2/D734:	3A         	DEC
C2/D735:	85 12      	STA $12
C2/D737:	B9 1F 9E   	LDA $9E1F,Y    ; INC would've worked...
C2/D73A:	D9 1E 9E   	CMP $9E1E,Y
C2/D73D:	F0 32      	BEQ $D771      ; +50
C2/D73F:	A5 26      	LDA $26
C2/D741:	29 01      	AND #$01
C2/D743:	D0 2A      	BNE $D76F      ; +42
C2/D745:	A5 16      	LDA $16
C2/D747:	38         	SEC
C2/D748:	E5 12      	SBC $12
C2/D74A:	90 04      	BCC $D750      ; +4
C2/D74C:	C9 08      	CMP #$08       ; 8
C2/D74E:	B0 02      	BCS $D752      ; +2
C2/D750:	A9 08      	LDA #$08       ; 8
C2/D752:	8F 80 21 00	STA $002180
C2/D756:	9D 1F 96   	STA $961F,X
C2/D759:	A5 12      	LDA $12
C2/D75B:	18         	CLC
C2/D75C:	65 18      	ADC $18
C2/D75E:	B0 04      	BCS $D764      ; +4
C2/D760:	C9 F7      	CMP #$F7       ; -9
C2/D762:	90 02      	BCC $D766      ; +2
C2/D764:	A9 F7      	LDA #$F7       ; -9
C2/D766:	8F 80 21 00	STA $002180
C2/D76A:	9D 20 96   	STA $9620,X
C2/D76D:	CA         	DEX
C2/D76E:	CA         	DEX
C2/D76F:	E6 26      	INC $26
C2/D771:	C6 12      	DEC $12
C2/D773:	88         	DEY
C2/D774:	D0 C1      	BNE $D737      ; -63
C2/D776:	60         	RTS

; Called if clip plane shape has been reset.
C2/D777:	A2 FE      	LDX #$FE       ; -2
C2/D779:	A5 16      	LDA $16
C2/D77B:	38         	SEC
C2/D77C:	F9 1F 9E   	SBC $9E1F,Y
C2/D77F:	90 04      	BCC $D785      ; +4
C2/D781:	C9 08      	CMP #$08       ; 8
C2/D783:	B0 02      	BCS $D787      ; +2
C2/D785:	A9 08      	LDA #$08       ; 8
C2/D787:	8F 80 21 00	STA $002180
C2/D78B:	9D 1F 96   	STA $961F,X
C2/D78E:	B9 1F 9E   	LDA $9E1F,Y
C2/D791:	18         	CLC
C2/D792:	65 18      	ADC $18
C2/D794:	B0 04      	BCS $D79A      ; +4
C2/D796:	C9 F7      	CMP #$F7       ; -9
C2/D798:	90 02      	BCC $D79C      ; +2
C2/D79A:	A9 F7      	LDA #$F7       ; -9
C2/D79C:	8F 80 21 00	STA $002180
C2/D7A0:	9D 20 96   	STA $9620,X
C2/D7A3:	CA         	DEX
C2/D7A4:	CA         	DEX
C2/D7A5:	C8         	INY
C2/D7A6:	C4 12      	CPY $12
C2/D7A8:	D0 CF      	BNE $D779      ; -49
C2/D7AA:	4C 6E D8   	JMP $D86E

; Called if clip plane shape is a circle.
C2/D7AD:	A2 FE      	LDX #$FE       ; -2
C2/D7AF:	AD 1A 96   	LDA $961A
C2/D7B2:	18         	CLC
C2/D7B3:	69 02      	ADC #$02       ; Why not INC x2?
C2/D7B5:	85 26      	STA $26
C2/D7B7:	8D 1A 96   	STA $961A
C2/D7BA:	A5 26      	LDA $26
C2/D7BC:	18         	CLC
C2/D7BD:	69 04      	ADC #$04       ; 4
C2/D7BF:	85 26      	STA $26
C2/D7C1:	DA         	PHX
C2/D7C2:	20 1D DD   	JSR $DD1D
C2/D7C5:	85 18      	STA $18
C2/D7C7:	85 16      	STA $16
C2/D7C9:	A5 1A      	LDA $1A
C2/D7CB:	18         	CLC
C2/D7CC:	65 18      	ADC $18
C2/D7CE:	85 18      	STA $18
C2/D7D0:	A5 1A      	LDA $1A
C2/D7D2:	18         	CLC
C2/D7D3:	65 16      	ADC $16
C2/D7D5:	85 16      	STA $16
C2/D7D7:	FA         	PLX
C2/D7D8:	A5 16      	LDA $16
C2/D7DA:	38         	SEC
C2/D7DB:	F9 1F 9E   	SBC $9E1F,Y
C2/D7DE:	90 04      	BCC $D7E4      ; +4
C2/D7E0:	C9 08      	CMP #$08       ; 8
C2/D7E2:	B0 02      	BCS $D7E6      ; +2
C2/D7E4:	A9 08      	LDA #$08       ; 8
C2/D7E6:	8F 80 21 00	STA $002180
C2/D7EA:	9D 1F 96   	STA $961F,X
C2/D7ED:	B9 1F 9E   	LDA $9E1F,Y
C2/D7F0:	18         	CLC
C2/D7F1:	65 18      	ADC $18
C2/D7F3:	B0 04      	BCS $D7F9      ; +4
C2/D7F5:	C9 F7      	CMP #$F7       ; -9
C2/D7F7:	90 02      	BCC $D7FB      ; +2
C2/D7F9:	A9 F7      	LDA #$F7       ; -9
C2/D7FB:	8F 80 21 00	STA $002180
C2/D7FF:	9D 20 96   	STA $9620,X
C2/D802:	CA         	DEX
C2/D803:	CA         	DEX
C2/D804:	C8         	INY
C2/D805:	C4 12      	CPY $12
C2/D807:	D0 B1      	BNE $D7BA
C2/D809:	4C 6E D8   	JMP $D86E      ; BRA would've worked...

; Called if clip plane shape is wavy out.
C2/D80C:	20 1E D8   	JSR $D81E
C2/D80F:	4C DE D9   	JMP $D9DE

; Called if clip plane shape is wavy.
C2/D812:	20 1E D8   	JSR $D81E
C2/D815:	4C 04 DA   	JMP $DA04

; Called if clip plane shape is wavy in.
C2/D818:	20 1E D8   	JSR $D81E
C2/D81B:	4C F1 D9   	JMP $D9F1

; Called from C2/D80C, C2/D812 and C2/D818.
C2/D81E:	A2 FE      	LDX #$FE       ; -2
C2/D820:	A9 00      	LDA #$00       ; 0
C2/D822:	38         	SEC
C2/D823:	F9 1F 9E   	SBC $9E1F,Y
C2/D826:	8F 80 21 00	STA $002180
C2/D82A:	9D 1F 96   	STA $961F,X
C2/D82D:	B9 1F 9E   	LDA $9E1F,Y
C2/D830:	8F 80 21 00	STA $002180
C2/D834:	9D 20 96   	STA $9620,X
C2/D837:	CA         	DEX
C2/D838:	CA         	DEX
C2/D839:	C8         	INY
C2/D83A:	C4 12      	CPY $12
C2/D83C:	D0 E2      	BNE $D820      ; -30
C2/D83E:	7B         	TDC
C2/D83F:	99 1F 9E   	STA $9E1F,Y
C2/D842:	88         	DEY
C2/D843:	B9 1F 9E   	LDA $9E1F,Y
C2/D846:	3A         	DEC
C2/D847:	85 12      	STA $12
C2/D849:	B9 1F 9E   	LDA $9E1F,Y
C2/D84C:	D9 1E 9E   	CMP $9E1E,Y
C2/D84F:	F0 17      	BEQ $D868      ; +23
C2/D851:	A9 00      	LDA #$00       ; 0
C2/D853:	38         	SEC
C2/D854:	E5 12      	SBC $12
C2/D856:	8F 80 21 00	STA $002180
C2/D85A:	9D 1F 96   	STA $961F,X
C2/D85D:	A5 12      	LDA $12
C2/D85F:	8F 80 21 00	STA $002180
C2/D863:	9D 20 96   	STA $9620,X
C2/D866:	CA         	DEX
C2/D867:	CA         	DEX
C2/D868:	C6 12      	DEC $12
C2/D86A:	88         	DEY
C2/D86B:	D0 DC      	BNE $D849      ; -36
C2/D86D:	60         	RTS

C2/D86E:	7B         	TDC            ; A = 0
C2/D86F:	99 1F 9E   	STA $9E1F,Y
C2/D872:	88         	DEY
C2/D873:	B9 1F 9E   	LDA $9E1F,Y
C2/D876:	3A         	DEC
C2/D877:	85 12      	STA $12
C2/D879:	B9 1F 9E   	LDA $9E1F,Y    ; INC would've worked...
C2/D87C:	D9 1E 9E   	CMP $9E1E,Y
C2/D87F:	F0 2A      	BEQ $D8AB      ; +42
C2/D881:	A5 16      	LDA $16
C2/D883:	38         	SEC
C2/D884:	E5 12      	SBC $12
C2/D886:	90 04      	BCC $D88C      ; +4
C2/D888:	C9 08      	CMP #$08       ; 8
C2/D88A:	B0 02      	BCS $D88E      ; +2
C2/D88C:	A9 08      	LDA #$08       ; 8
C2/D88E:	8F 80 21 00	STA $002180
C2/D892:	9D 1F 96   	STA $961F,X
C2/D895:	A5 12      	LDA $12
C2/D897:	18         	CLC
C2/D898:	65 18      	ADC $18
C2/D89A:	B0 04      	BCS $D8A0      ; +4
C2/D89C:	C9 F7      	CMP #$F7       ; -9
C2/D89E:	90 02      	BCC $D8A2      ; +2
C2/D8A0:	A9 F7      	LDA #$F7       ; -9
C2/D8A2:	8F 80 21 00	STA $002180
C2/D8A6:	9D 20 96   	STA $9620,X
C2/D8A9:	CA         	DEX
C2/D8AA:	CA         	DEX
C2/D8AB:	C6 12      	DEC $12
C2/D8AD:	88         	DEY
C2/D8AE:	D0 C9      	BNE $D879      ; -55
C2/D8B0:	60         	RTS

C2/D8B1:	7B         	TDC            ; A = 0
C2/D8B2:	AA         	TAX            ; X = 0
C2/D8B3:	C2 20      	REP #$20       ; 16-bit A
C2/D8B5:	E2 10      	SEP #$10       ; 8-bit X & Y
C2/D8B7:	A9 FF 00   	LDA #$00FF
C2/D8BA:	9D 1F 96   	STA $961F,X
C2/D8BD:	9D 5F 96   	STA $965F,X
C2/D8C0:	9D 9F 96   	STA $969F,X
C2/D8C3:	9D DF 96   	STA $96DF,X
C2/D8C6:	9D 1F 97   	STA $971F,X
C2/D8C9:	9D 5F 97   	STA $975F,X
C2/D8CC:	9D 9F 97   	STA $979F,X
C2/D8CF:	9D DF 97   	STA $97DF,X
C2/D8D2:	E8         	INX
C2/D8D3:	E8         	INX
C2/D8D4:	E0 40      	CPX #$40
C2/D8D6:	D0 E2      	BNE $D8BA      ; -30
C2/D8D8:	C2 10      	REP #$10       ; 16-bit X & Y
C2/D8DA:	E2 20      	SEP #$20       ; 8-bit A
C2/D8DC:	60         	RTS

C2/D8DD:	20 E1 D8   	JSR $D8E1
C2/D8E0:	6B         	RTL

C2/D8E1:	20 B1 D8   	JSR $D8B1
C2/D8E4:	AD 13 96   	LDA $9613      ; Clip plane width
C2/D8E7:	29 7F      	AND #$7F
C2/D8E9:	D0 01      	BNE $D8EC      ; +1
C2/D8EB:	60         	RTS

C2/D8EC:	E2 10      	SEP #$10       ; 8-bit X & Y
C2/D8EE:	85 14      	STA $14
C2/D8F0:	85 1E      	STA $1E
C2/D8F2:	AD 14 96   	LDA $9614      ; Clip plane X-coordinate
C2/D8F5:	85 1A      	STA $1A
C2/D8F7:	64 20      	STZ $20
C2/D8F9:	AD 19 96   	LDA $9619
C2/D8FC:	85 24      	STA $24
C2/D8FE:	AD 1B 96   	LDA $961B      ; Load clip plane shape
C2/D901:	C9 08      	CMP #$08       ; Branch if not a dome...
C2/D903:	F0 08      	BEQ $D90D      ; +8
C2/D905:	C9 05      	CMP #$05       ; ...wavy in...
C2/D907:	F0 04      	BEQ $D90D      ; +4
C2/D909:	C9 02      	CMP #$02       ; ...or wavy
C2/D90B:	D0 15      	BNE $D922      ; +21
C2/D90D:	A5 14      	LDA $14
C2/D90F:	85 24      	STA $24
C2/D911:	AD 1A 96   	LDA $961A
C2/D914:	20 1D DD   	JSR $DD1D
C2/D917:	85 24      	STA $24
C2/D919:	A5 14      	LDA $14
C2/D91B:	18         	CLC
C2/D91C:	65 24      	ADC $24
C2/D91E:	85 14      	STA $14
C2/D920:	85 1E      	STA $1E
C2/D922:	7B         	TDC            ; A = 0
C2/D923:	A8         	TAY            ; Y = 0
C2/D924:	3A         	DEC            ; A = -1
C2/D925:	85 12      	STA $12
C2/D927:	A5 1E      	LDA $1E
C2/D929:	C5 20      	CMP $20
C2/D92B:	90 23      	BCC $D950      ; +35
C2/D92D:	99 1F 9E   	STA $9E1F,Y
C2/D930:	A5 20      	LDA $20
C2/D932:	0A         	ASL A
C2/D933:	3A         	DEC A
C2/D934:	85 10      	STA $10
C2/D936:	C8         	INY
C2/D937:	E6 20      	INC $20
C2/D939:	A5 14      	LDA $14
C2/D93B:	38         	SEC
C2/D93C:	E5 10      	SBC $10
C2/D93E:	85 14      	STA $14
C2/D940:	C5 12      	CMP $12
C2/D942:	90 E1      	BCC $D925      ; -31
C2/D944:	C6 1E      	DEC $1E
C2/D946:	A5 1E      	LDA $1E
C2/D948:	0A         	ASL
C2/D949:	18         	CLC
C2/D94A:	65 14      	ADC $14
C2/D94C:	85 14      	STA $14
C2/D94E:	80 D5      	BRA $D925      ; -43
C2/D950:	84 12      	STY $12
C2/D952:	A9 1F      	LDA #$1F       ; 31
C2/D954:	8F 81 21 00	STA $002181
C2/D958:	A9 97      	LDA #$97       ; -105
C2/D95A:	8F 82 21 00	STA $002182
C2/D95E:	A9 7E      	LDA #$7E       ; 126
C2/D960:	8F 83 21 00	STA $002183
C2/D964:	7B         	TDC            ; A = 0
C2/D965:	A8         	TAY            ; Y = 0
C2/D966:	A5 1A      	LDA $1A
C2/D968:	85 16      	STA $16
C2/D96A:	85 18      	STA $18
C2/D96C:	20 39 D5   	JSR $D539
C2/D96F:	C2 10      	REP #$10       ; 16-bit X & Y
C2/D971:	AD 15 96   	LDA $9615      ; Clip plane Y-coordinate
C2/D974:	C9 81      	CMP #$81       ; 129
C2/D976:	90 2B      	BCC $D9A3      ; +43
C2/D978:	38         	SEC            ; Carry bit already set...
C2/D979:	E9 80      	SBC #$80       ; 128
C2/D97B:	F0 26      	BEQ $D9A3      ; +38
C2/D97D:	C2 20      	REP #$20       ; 16-bit A
C2/D97F:	0A         	ASL
C2/D980:	0A         	ASL
C2/D981:	85 22      	STA $22
C2/D983:	7B         	TDC            ; A = 0
C2/D984:	AA         	TAX            ; X = 0
C2/D985:	AD 1B 96   	LDA $961B      ; Load clip plane shape
C2/D988:	29 FF 00   	AND #$00FF
C2/D98B:	C9 03 00   	CMP #$0003     ; Branch if not a pillar
C2/D98E:	D0 05      	BNE $D995      ; +5
C2/D990:	AD 1F 96   	LDA $961F
C2/D993:	80 03      	BRA $D998      ; +3
C2/D995:	A9 FF 00   	LDA #$00FF
C2/D998:	9D 21 9A   	STA $9A21,X
C2/D99B:	E8         	INX
C2/D99C:	E8         	INX
C2/D99D:	E8         	INX
C2/D99E:	E8         	INX
C2/D99F:	E4 22      	CPX $22
C2/D9A1:	D0 F5      	BNE $D998      ; -11
C2/D9A3:	AD 15 96   	LDA $9615      ; Clip plane Y-coordinate
C2/D9A6:	C2 20      	REP #$20       ; 16-bit A
C2/D9A8:	29 FF 00   	AND #$00FF
C2/D9AB:	0A         	ASL
C2/D9AC:	0A         	ASL
C2/D9AD:	AA         	TAX
C2/D9AE:	7B         	TDC            ; A = 0
C2/D9AF:	A8         	TAY            ; Y = 0
C2/D9B0:	B9 1F 96   	LDA $961F,Y
C2/D9B3:	9D 21 98   	STA $9821,X
C2/D9B6:	C8         	INY
C2/D9B7:	C8         	INY
C2/D9B8:	C0 00 02   	CPY #$0200     ; 512
C2/D9BB:	D0 11      	BNE $D9CE      ; +17
C2/D9BD:	A9 FF 00   	LDA #$00FF
C2/D9C0:	9D 21 98   	STA $9821,X
C2/D9C3:	E8 E8 E8 E8	INX #4
C2/D9C7:	E0 5C 04   	CPX #$045C     ; 1,116
C2/D9CA:	D0 F4      	BNE $D9C0      ; -12
C2/D9CC:	80 09      	BRA $D9D7      ; +9
C2/D9CE:	E8 E8 E8 E8	INX #4
C2/D9D2:	E0 5C 04   	CPX #$045C     ; 1,116
C2/D9D5:	D0 D9      	BNE $D9B0      ; -39
C2/D9D7:	7B         	TDC
C2/D9D8:	E2 20      	SEP #$20       ; 8-bit A
C2/D9DA:	EE 97 61   	INC $6197
C2/D9DD:	60         	RTS

; Called from C2/D80F.
C2/D9DE:	C2 10      	REP #$10       ; 16-bit X & Y
C2/D9E0:	A9 08      	LDA #$08       ; 8
C2/D9E2:	8D 1C 96   	STA $961C
C2/D9E5:	A9 10      	LDA #$10       ; Wouldn't ASL also work?
C2/D9E7:	8D 1E 96   	STA $961E
C2/D9EA:	A9 04      	LDA #$04       ; 4
C2/D9EC:	8D 1D 96   	STA $961D
C2/D9EF:	80 24      	BRA $DA15      ; +36

; Called from C2/D81B.
C2/D9F1:	C2 10      	REP #$10       ; 16-bit X & Y
C2/D9F3:	A9 04      	LDA #$04       ; 4
C2/D9F5:	8D 1C 96   	STA $961C
C2/D9F8:	A9 0A      	LDA #$0A       ; 10
C2/D9FA:	8D 1E 96   	STA $961E
C2/D9FD:	A9 08      	LDA #$08       ; 8
C2/D9FF:	8D 1D 96   	STA $961D
C2/DA02:	80 11      	BRA $DA15      ; +17

; Called from C2/D815.
C2/DA04:	C2 10      	REP #$10
C2/DA06:	A9 08      	LDA #$08       ; 8
C2/DA08:	8D 1C 96   	STA $961C
C2/DA0B:	A9 20      	LDA #$20       ; 32
C2/DA0D:	8D 1E 96   	STA $961E
C2/DA10:	A9 04      	LDA #$04       ; 4
C2/DA12:	8D 1D 96   	STA $961D
C2/DA15:	AD 1A 96   	LDA $961A
C2/DA18:	18         	CLC
C2/DA19:	6D 1C 96   	ADC $961C
C2/DA1C:	8D 1A 96   	STA $961A
C2/DA1F:	85 26      	STA $26
C2/DA21:	AD 1E 96   	LDA $961E
C2/DA24:	85 24      	STA $24
C2/DA26:	AD 1D 96   	LDA $961D
C2/DA29:	85 28      	STA $28
C2/DA2B:	7B         	TDC            ; A = 0
C2/DA2C:	A8         	TAY            ; Y = 0
C2/DA2D:	A5 26      	LDA $26
C2/DA2F:	18         	CLC
C2/DA30:	65 28      	ADC $28
C2/DA32:	85 26      	STA $26
C2/DA34:	B9 20 96   	LDA $9620,Y
C2/DA37:	F0 2C      	BEQ $DA65
C2/DA39:	A5 26      	LDA $26
C2/DA3B:	20 1D DD   	JSR $DD1D
C2/DA3E:	18         	CLC
C2/DA3F:	65 16      	ADC $16
C2/DA41:	85 22      	STA $22
C2/DA43:	B9 1F 96   	LDA $961F,Y
C2/DA46:	18         	CLC
C2/DA47:	65 22      	ADC $22        ; Could've used ADC $961F,Y instead...
C2/DA49:	90 04      	BCC $DA4F      ; +4
C2/DA4B:	C9 08      	CMP #$08       ; 8
C2/DA4D:	B0 02      	BCS $DA51      ; +2
C2/DA4F:	A9 08      	LDA #$08       ; 8
C2/DA51:	99 1F 96   	STA $961F,Y
C2/DA54:	B9 20 96   	LDA $9620,Y
C2/DA57:	18         	CLC
C2/DA58:	65 22      	ADC $22
C2/DA5A:	B0 04      	BCS $DA60      ; +4
C2/DA5C:	C9 F7      	CMP #$F7
C2/DA5E:	90 02      	BCC $DA62      ; +2
C2/DA60:	A9 F7      	LDA #$F7
C2/DA62:	99 20 96   	STA $9620,Y
C2/DA65:	C8         	INY
C2/DA66:	C8         	INY
C2/DA67:	C0 00 02   	CPY #$0200     ; 512
C2/DA6A:	D0 C1      	BNE $DA2D      ; -63
C2/DA6C:	60         	RTS

C2/DA6D:	20 71 DA   	JSR $DA71
C2/DA70:	6B         	RTL

C2/DA71:	20 B1 D8   	JSR $D8B1
C2/DA74:	AD 5C 61   	LDA $615C
C2/DA77:	CD 5E 61   	CMP $615E
C2/DA7A:	F0 20      	BEQ $DA9C      ; +32
C2/DA7C:	90 1E      	BCC $DA9C      ; +30
C2/DA7E:	AD 60 61   	LDA $6160
C2/DA81:	CD 5E 61   	CMP $615E
C2/DA84:	F0 1D      	BEQ $DAA3      ; +29
C2/DA86:	90 1B      	BCC $DAA3      ; +27
C2/DA88:	AE 5B 61   	LDX $615B
C2/DA8B:	8E 65 61   	STX $6165
C2/DA8E:	AE 5D 61   	LDX $615D
C2/DA91:	8E 61 61   	STX $6161
C2/DA94:	AE 5F 61   	LDX $615F
C2/DA97:	8E 63 61   	STX $6163
C2/DA9A:	80 2D      	BRA $DAC9      ; +45
C2/DA9C:	CD 60 61   	CMP $6160
C2/DA9F:	F0 16      	BEQ $DAB7      ; +22
C2/DAA1:	90 14      	BCC $DAB7      ; +20
C2/DAA3:	AE 5F 61   	LDX $615F
C2/DAA6:	8E 61 61   	STX $6161
C2/DAA9:	AE 5B 61   	LDX $615B
C2/DAAC:	8E 63 61   	STX $6163
C2/DAAF:	AE 5D 61   	LDX $615D
C2/DAB2:	8E 65 61   	STX $6165
C2/DAB5:	80 12      	BRA $DAC9      ; +18
C2/DAB7:	AE 5B 61   	LDX $615B
C2/DABA:	8E 61 61   	STX $6161
C2/DABD:	AE 5D 61   	LDX $615D
C2/DAC0:	8E 63 61   	STX $6163
C2/DAC3:	AE 5F 61   	LDX $615F
C2/DAC6:	8E 65 61   	STX $6165
C2/DAC9:	AD 63 61   	LDA $6163
C2/DACC:	CD 65 61   	CMP $6165
C2/DACF:	F0 10      	BEQ $DAE1      ; +16
C2/DAD1:	90 0E      	BCC $DAE1      ; +14
C2/DAD3:	AE 63 61   	LDX $6163
C2/DAD6:	DA         	PHX
C2/DAD7:	AE 65 61   	LDX $6165
C2/DADA:	8E 63 61   	STX $6163
C2/DADD:	FA         	PLX
C2/DADE:	8E 65 61   	STX $6165
C2/DAE1:	AE 61 61   	LDX $6161
C2/DAE4:	8E 4C 61   	STX $614C
C2/DAE7:	AE 63 61   	LDX $6163
C2/DAEA:	8E 4E 61   	STX $614E
C2/DAED:	22 C8 DC C2	JSL $C2DCC8
C2/DAF1:	AD 61 61   	LDA $6161
C2/DAF4:	85 1E      	STA $1E
C2/DAF6:	AD 62 61   	LDA $6162
C2/DAF9:	85 20      	STA $20
C2/DAFB:	20 6A DB   	JSR $DB6A
C2/DAFE:	AE 61 61   	LDX $6161
C2/DB01:	8E 4C 61   	STX $614C
C2/DB04:	AE 65 61   	LDX $6165
C2/DB07:	8E 4E 61   	STX $614E
C2/DB0A:	22 C8 DC C2	JSL $C2DCC8
C2/DB0E:	AD 61 61   	LDA $6161
C2/DB11:	85 1E      	STA $1E
C2/DB13:	AD 62 61   	LDA $6162
C2/DB16:	85 20      	STA $20
C2/DB18:	20 19 DC   	JSR $DC19
C2/DB1B:	AD 64 61   	LDA $6164
C2/DB1E:	CD 66 61   	CMP $6166
C2/DB21:	F0 21      	BEQ $DB44      ; +33
C2/DB23:	90 1F      	BCC $DB44      ; +31
C2/DB25:	AE 65 61   	LDX $6165
C2/DB28:	8E 4C 61   	STX $614C
C2/DB2B:	AE 63 61   	LDX $6163
C2/DB2E:	8E 4E 61   	STX $614E
C2/DB31:	22 C8 DC C2	JSL $C2DCC8
C2/DB35:	AD 65 61   	LDA $6165
C2/DB38:	85 1E      	STA $1E
C2/DB3A:	AD 66 61   	LDA $6166
C2/DB3D:	85 20      	STA $20
C2/DB3F:	20 19 DC   	JSR $DC19
C2/DB42:	80 1D      	BRA $DB61      ; +29
C2/DB44:	AE 63 61   	LDX $6163
C2/DB47:	8E 4C 61   	STX $614C
C2/DB4A:	AE 65 61   	LDX $6165
C2/DB4D:	8E 4E 61   	STX $614E
C2/DB50:	22 C8 DC C2	JSL $C2DCC8
C2/DB54:	AD 63 61   	LDA $6163
C2/DB57:	85 1E      	STA $1E
C2/DB59:	AD 64 61   	LDA $6164
C2/DB5C:	85 20      	STA $20
C2/DB5E:	20 6A DB   	JSR $DB6A
C2/DB61:	AD 55 61   	LDA $6155      ; Animation Y-coordinate in Mode 7
C2/DB64:	8D 15 96   	STA $9615      ; Clip plane Y-coordinate
C2/DB67:	4C 6F D9   	JMP $D96F

C2/DB6A:	AD 54 61   	LDA $6154      ; Animation X-coordinate in Mode 7
C2/DB6D:	85 10      	STA $10
C2/DB6F:	30 04      	BMI $DB75      ; +4
C2/DB71:	A9 08      	LDA #$08
C2/DB73:	80 02      	BRA $DB77      ; +2
C2/DB75:	A9 F7      	LDA #$F7
C2/DB77:	85 14      	STA $14
C2/DB79:	64 11      	STZ $11
C2/DB7B:	64 15      	STZ $15
C2/DB7D:	64 1F      	STZ $1F
C2/DB7F:	A5 20      	LDA $20
C2/DB81:	C2 20      	REP #$20       ; 16-bit A
C2/DB83:	0A         	ASL
C2/DB84:	A8         	TAY
C2/DB85:	A5 10      	LDA $10
C2/DB87:	38         	SEC
C2/DB88:	E9 80 00   	SBC #$0080     ; 128
C2/DB8B:	85 10      	STA $10
C2/DB8D:	7B         	TDC
C2/DB8E:	E2 20      	SEP #$20       ; 8-bit A
C2/DB90:	AE 52 61   	LDX $6152
C2/DB93:	86 22      	STX $22
C2/DB95:	86 24      	STX $24
C2/DB97:	A5 23      	LDA $23
C2/DB99:	D0 01      	BNE $DB9C      ; +1
C2/DB9B:	60         	RTS

C2/DB9C:	AD 50 61   	LDA $6150
C2/DB9F:	30 3C      	BMI $DBDD      ; +60
C2/DBA1:	A5 24      	LDA $24
C2/DBA3:	C5 23      	CMP $23
C2/DBA5:	90 07      	BCC $DBAE      ; +7
C2/DBA7:	38         	SEC            ; Carry bit should be set already...
C2/DBA8:	E5 23      	SBC $23
C2/DBAA:	E6 1E      	INC $1E
C2/DBAC:	80 F5      	BRA $DBA3      ; -11
C2/DBAE:	18         	CLC
C2/DBAF:	65 22      	ADC $22
C2/DBB1:	85 24      	STA $24
C2/DBB3:	C2 20      	REP #$20       ; 16-bit A
C2/DBB5:	A5 1E      	LDA $1E
C2/DBB7:	18         	CLC
C2/DBB8:	65 10      	ADC $10
C2/DBBA:	C9 09 00   	CMP #$0009     ; 9
C2/DBBD:	90 05      	BCC $DBC4      ; +5
C2/DBBF:	C9 F8 00   	CMP #$00F8     ; 248
C2/DBC2:	90 02      	BCC $DBC6      ; +2
C2/DBC4:	A5 14      	LDA $14
C2/DBC6:	85 12      	STA $12
C2/DBC8:	7B         	TDC
C2/DBC9:	E2 20      	SEP #$20       ; 8-bit A
C2/DBCB:	A5 12      	LDA $12
C2/DBCD:	D9 20 96   	CMP $9620,Y
C2/DBD0:	D0 01      	BNE $DBD3      ; +1
C2/DBD2:	1A         	INC
C2/DBD3:	99 1F 96   	STA $961F,Y
C2/DBD6:	C8         	INY
C2/DBD7:	C8         	INY
C2/DBD8:	C6 25      	DEC $25
C2/DBDA:	D0 C5      	BNE $DBA1      ; -59
C2/DBDC:	60         	RTS

C2/DBDD:	A5 24      	LDA $24
C2/DBDF:	C5 23      	CMP $23
C2/DBE1:	90 07      	BCC $DBEA      ; +7
C2/DBE3:	38         	SEC
C2/DBE4:	E5 23      	SBC $23
C2/DBE6:	C6 1E      	DEC $1E
C2/DBE8:	80 F5      	BRA $DBDF      ; -11
C2/DBEA:	18         	CLC
C2/DBEB:	65 22      	ADC $22
C2/DBED:	85 24      	STA $24
C2/DBEF:	C2 20      	REP #$20       ; 16-bit A
C2/DBF1:	A5 1E      	LDA $1E
C2/DBF3:	18         	CLC
C2/DBF4:	65 10      	ADC $10
C2/DBF6:	C9 09 00   	CMP #$0009     ; 9
C2/DBF9:	90 05      	BCC $DC00      ; +5
C2/DBFB:	C9 F8 00   	CMP #$00F8     ; 248
C2/DBFE:	90 02      	BCC $DC02      ; +2
C2/DC00:	A5 14      	LDA $14
C2/DC02:	85 12      	STA $12
C2/DC04:	7B         	TDC
C2/DC05:	E2 20      	SEP #$20       ; 8-bit A
C2/DC07:	A5 12      	LDA $12
C2/DC09:	D9 20 96   	CMP $9620,Y
C2/DC0C:	D0 01      	BNE $DC0F      ; +1
C2/DC0E:	1A         	INC
C2/DC0F:	99 1F 96   	STA $961F,Y
C2/DC12:	C8         	INY
C2/DC13:	C8         	INY
C2/DC14:	C6 25      	DEC $25
C2/DC16:	D0 C5      	BNE $DBDD      ; -59
C2/DC18:	60         	RTS

C2/DC19:	AD 54 61   	LDA $6154      ; Animation X-coordinate in Mode 7
C2/DC1C:	85 10      	STA $10
C2/DC1E:	30 04      	BMI $DC24      ; +4
C2/DC20:	A9 08      	LDA #$08
C2/DC22:	80 02      	BRA $DC26      ; +2
C2/DC24:	A9 F7      	LDA #$F7
C2/DC26:	85 14      	STA $14
C2/DC28:	64 15      	STZ $15
C2/DC2A:	64 11      	STZ $11
C2/DC2C:	64 1F      	STZ $1F
C2/DC2E:	A5 20      	LDA $20
C2/DC30:	C2 20      	REP #$20       ; 16-bit A
C2/DC32:	0A         	ASL
C2/DC33:	A8         	TAY
C2/DC34:	A5 10      	LDA $10
C2/DC36:	38         	SEC
C2/DC37:	E9 80 00   	SBC #$0080     ; 128
C2/DC3A:	85 10      	STA $10
C2/DC3C:	7B         	TDC
C2/DC3D:	E2 20      	SEP #$20       ; 8-bit A
C2/DC3F:	AE 52 61   	LDX $6152
C2/DC42:	86 22      	STX $22
C2/DC44:	86 24      	STX $24
C2/DC46:	A5 23      	LDA $23
C2/DC48:	D0 01      	BNE $DC4B      ; +1
C2/DC4A:	60         	RTS

C2/DC4B:	AD 50 61   	LDA $6150
C2/DC4E:	30 3C      	BMI $DC8C      ; +60
C2/DC50:	A5 24      	LDA $24
C2/DC52:	C5 23      	CMP $23
C2/DC54:	90 07      	BCC $DC5D      ; +7
C2/DC56:	38         	SEC            ; Carry bit should be set already...
C2/DC57:	E5 23      	SBC $23
C2/DC59:	E6 1E      	INC $1E
C2/DC5B:	80 F5      	BRA $DC52      ; -11
C2/DC5D:	18         	CLC
C2/DC5E:	65 22      	ADC $22
C2/DC60:	85 24      	STA $24
C2/DC62:	C2 20      	REP #$20       ; 16-bit A
C2/DC64:	A5 1E      	LDA $1E
C2/DC66:	18         	CLC
C2/DC67:	65 10      	ADC $10
C2/DC69:	C9 09 00   	CMP #$0009     ; 9
C2/DC6C:	90 05      	BCC $DC73      ; +5
C2/DC6E:	C9 F8 00   	CMP #$00F8     ; 248
C2/DC71:	90 02      	BCC $DC75      ; +2
C2/DC73:	A5 14      	LDA $14
C2/DC75:	85 12      	STA $12
C2/DC77:	7B         	TDC
C2/DC78:	E2 20      	SEP #$20       ; 8-bit A
C2/DC7A:	A5 12      	LDA $12
C2/DC7C:	D9 1F 96   	CMP $961F,Y
C2/DC7F:	D0 01      	BNE $DC82      ; +1
C2/DC81:	3A         	DEC
C2/DC82:	99 20 96   	STA $9620,Y
C2/DC85:	C8         	INY
C2/DC86:	C8         	INY
C2/DC87:	C6 25      	DEC $25
C2/DC89:	D0 C5      	BNE $DC50      ; -59
C2/DC8B:	60         	RTS

C2/DC8C:	A5 24      	LDA $24
C2/DC8E:	C5 23      	CMP $23
C2/DC90:	90 07      	BCC $DC99      ; +7
C2/DC92:	38         	SEC
C2/DC93:	E5 23      	SBC $23
C2/DC95:	C6 1E      	DEC $1E
C2/DC97:	80 F5      	BRA $DC8E      ; -11
C2/DC99:	18         	CLC
C2/DC9A:	65 22      	ADC $22
C2/DC9C:	85 24      	STA $24
C2/DC9E:	C2 20      	REP #$20       ; 16-bit A
C2/DCA0:	A5 1E      	LDA $1E
C2/DCA2:	18         	CLC
C2/DCA3:	65 10      	ADC $10
C2/DCA5:	C9 09 00   	CMP #$0009     ; 9
C2/DCA8:	90 05      	BCC $DCAF      ; +5
C2/DCAA:	C9 F8 00   	CMP #$00F8     ; 248
C2/DCAD:	90 02      	BCC $DCB1      ; +2
C2/DCAF:	A5 14      	LDA $14
C2/DCB1:	85 12      	STA $12
C2/DCB3:	7B         	TDC
C2/DCB4:	E2 20      	SEP #$20       ; 8-bit A
C2/DCB6:	A5 12      	LDA $12
C2/DCB8:	D9 1F 96   	CMP $961F,Y
C2/DCBB:	D0 01      	BNE $DCBE      ; +1
C2/DCBD:	3A         	DEC
C2/DCBE:	99 20 96   	STA $9620,Y
C2/DCC1:	C8         	INY
C2/DCC2:	C8         	INY
C2/DCC3:	C6 25      	DEC $25
C2/DCC5:	D0 C5      	BNE $DC8C      ; -59
C2/DCC7:	60         	RTS

C2/DCC8:	7B         	TDC            ; A = 0
C2/DCC9:	AA         	TAX            ; X = 0
C2/DCCA:	8E 50 61   	STX $6150
C2/DCCD:	8E 52 61   	STX $6152
C2/DCD0:	AD 4C 61   	LDA $614C
C2/DCD3:	CD 4E 61   	CMP $614E
C2/DCD6:	F0 1E      	BEQ $DCF6      ; +30
C2/DCD8:	90 0F      	BCC $DCE9      ; +15
C2/DCDA:	CE 50 61   	DEC $6150
C2/DCDD:	AD 4C 61   	LDA $614C
C2/DCE0:	38         	SEC
C2/DCE1:	ED 4E 61   	SBC $614E
C2/DCE4:	8D 52 61   	STA $6152
C2/DCE7:	80 0D      	BRA $DCF6      ; +13
C2/DCE9:	EE 50 61   	INC $6150
C2/DCEC:	AD 4E 61   	LDA $614E
C2/DCEF:	38         	SEC
C2/DCF0:	ED 4C 61   	SBC $614C
C2/DCF3:	8D 52 61   	STA $6152
C2/DCF6:	AD 4D 61   	LDA $614D
C2/DCF9:	CD 4F 61   	CMP $614F
C2/DCFC:	F0 1E      	BEQ $DD1C      ; +30
C2/DCFE:	90 0F      	BCC $DD0F      ; +15
C2/DD00:	CE 51 61   	DEC $6151
C2/DD03:	AD 4D 61   	LDA $614D
C2/DD06:	38         	SEC
C2/DD07:	ED 4F 61   	SBC $614F
C2/DD0A:	8D 53 61   	STA $6153
C2/DD0D:	80 0D      	BRA $DD1C      ; +13
C2/DD0F:	EE 51 61   	INC $6151
C2/DD12:	AD 4F 61   	LDA $614F
C2/DD15:	38         	SEC
C2/DD16:	ED 4D 61   	SBC $614D
C2/DD19:	8D 53 61   	STA $6153
C2/DD1C:	6B         	RTL

C2/DD1D:	AA         	TAX
C2/DD1E:	BF 6D FE C2	LDA $C2FE6D,X
C2/DD22:	10 1A      	BPL $DD3E      ; +26
C2/DD24:	49 FF      	EOR #$FF
C2/DD26:	8F 02 42 00	STA $004202
C2/DD2A:	A5 24      	LDA $24
C2/DD2C:	8F 03 42 00	STA $004203
C2/DD30:	A9 FF      	LDA #$FF       ; -1
C2/DD32:	85 67      	STA $67
C2/DD34:	85 67      	STA $67
C2/DD36:	AF 17 42 00	LDA $004217
C2/DD3A:	49 FF      	EOR #$FF
C2/DD3C:	1A         	INC
C2/DD3D:	60         	RTS

C2/DD3E:	8F 02 42 00	STA $004202
C2/DD42:	A5 24      	LDA $24
C2/DD44:	8F 03 42 00	STA $004203
C2/DD48:	A9 00      	LDA #$00       ; 0
C2/DD4A:	85 67      	STA $67
C2/DD4C:	85 67      	STA $67
C2/DD4E:	AF 17 42 00	LDA $004217
C2/DD52:	60         	RTS

; Animation script command 80 70.
C2/DD53:	C2 20      	REP #$20       ; 16-bit A
C2/DD55:	7B         	TDC            ; A = 0
C2/DD56:	AA         	TAX            ; X = 0
C2/DD57:	E2 10      	SEP #$10       ; 8-bit X & Y
C2/DD59:	AD 24 7B   	LDA $7B24
C2/DD5C:	38         	SEC
C2/DD5D:	ED 2B 7B   	SBC $7B2B
C2/DD60:	9D F7 4A   	STA $4AF7,X
C2/DD63:	E8 E8 E8 E8	INX #4
C2/DD67:	E0 80      	CPX #$80
C2/DD69:	D0 F5      	BNE $DD60      ; -11
C2/DD6B:	7B         	TDC
C2/DD6C:	E2 20      	SEP #$20       ; 8-bit A
C2/DD6E:	C2 10      	REP #$10       ; 16-bit X & Y
C2/DD70:	6B         	RTL

; Animation script command 80 6E.
C2/DD71:	7B         	TDC            ; A = 0
C2/DD72:	AA         	TAX            ; X = 0
C2/DD73:	64 22      	STZ $22
C2/DD75:	BD B0 63   	LDA $63B0,X
C2/DD78:	18         	CLC
C2/DD79:	65 23      	ADC $23
C2/DD7B:	9D B0 63   	STA $63B0,X
C2/DD7E:	A5 22      	LDA $22
C2/DD80:	18         	CLC
C2/DD81:	65 26      	ADC $26
C2/DD83:	85 22      	STA $22
C2/DD85:	E8 E8 E8 E8	INX #4
C2/DD89:	D0 EA      	BNE $DD75      ; -22
C2/DD8B:	6B         	RTL

; 16-bit data called from C1/5377.
C2/DD8C:	0070
C2/DD8E:	4071
C2/DD90:	0076
C2/DD92:	0073
C2/DD94:	0074
C2/DD96:	0075
C2/DD98:	0077
C2/DD9A:	0068
C2/DD9C:	0069

; 32-bit data called from C1/53AC.
C2/DD9E:	0C08158D
C2/DDA2:	12082D8D
C2/DDA6:	0A08178D
C2/DDAA:	1E08158D
C2/DDAE:	1E08158D
C2/DDB2:	09083F8D
C2/DDB6:	1E05158D
C2/DDBA:	1508158D
C2/DDBE:	1E04158D
C2/DDC2:	0704138D
C2/DDC6:	0C05138D
C2/DDCA:	1E04C1A9
C2/DDCE:	1204CDA9
C2/DDD2:	1307178D
C2/DDD6:	0C08178D

; 64-bit data?! This is called from a few places in a function located at C1/5165.
C2/DDDA:	754E514D08000000
C2/DDE2:	754F514D08000000
C2/DDEA:	D551614D08000000
C2/DDF2:	D553614D05000000
C2/DDFA:	7554614D06000000
C2/DE02:	754F514D05000000
C2/DE0A:	954F714D05000000
C2/DE12:	C54FA14D05000000
C2/DE1A:	F54FD14D05000000
C2/DE22:	754F514D06000000
C2/DE2A:	9550714D08000000

; Menu window top position (pixels), height (tiles)
; called from $C1/50FB
C2/DE32:	5C020800 ; 00
C2/DE36:	5C020800 ; 01
C2/DE3A:	6C020800 ; 02
C2/DE3E:	6C020800 ; 03
C2/DE42:	6C020800 ; 04
C2/DE46:	7C020500 ; 05
C2/DE4A:	6C020800 ; 06
C2/DE4E:	7C020500 ; 07
C2/DE52:	7C020400 ; 08
C2/DE56:	7C020400 ; 09
C2/DE5A:	5C020400 ; 0A
C2/DE5E:	8C020400 ; 0B
C2/DE62:	BC020400 ; 0C
C2/DE66:	EC020400 ; 0D
C2/DE6A:	5C020400 ; 0E
C2/DE6E:	8C020400 ; 0F
C2/DE72:	BC020400 ; 10
C2/DE76:	EC020400 ; 11
C2/DE7A:	6C020500 ; 12
C2/DE7E:	6C020500 ; 13
C2/DE82:	6C020800 ; 14
C2/DE86:	6C020800 ; 15
C2/DE8A:	5C020700 ; 16
C2/DE8E:	5C020400 ; 17
C2/DE92:	5C020400 ; 18
C2/DE96:	7C020800 ; 19
C2/DE9A:	7C020800 ; 1A - Return to item menu after healing targeting menu
C2/DE9E:	7C020800 ; 1B - Return to magic menu after healing targeting menu

; Menu window horizontal scroll, vertical scroll (pixels)
C2/DEA2:	00006800 ; 00
C2/DEA6:	0000B800 ; 01
C2/DEAA:	0001E400 ; 02
C2/DEAE:	00002401 ; 03 - Opening item, rage, tools menus
C2/DEB2:	00016400 ; 04 - Open lore menu
C2/DEB6:	0001A000 ; 05
C2/DEBA:	0000B800 ; 06
C2/DEBE:	00002401 ; 07 - Same as item menu [?]
C2/DEC2:	00012001 ; 08
C2/DEC6:	00016400 ; 09
C2/DECA:	F8FF68FF ; 0A
C2/DECE:	F8FF5CFF ; 0B
C2/DED2:	F8FF50FF ; 0C
C2/DED6:	F8FF44FF ; 0D
C2/DEDA:	00000000 ; 0E
C2/DEDE:	00000000 ; 0F
C2/DEE2:	00000000 ; 10
C2/DEE6:	00000000 ; 11
C2/DEEA:	F0FFA4FF ; 12
C2/DEEE:	00000000 ; 13
C2/DEF2:	00002401 ; 14 - Same as item menu [?]
C2/DEF6:	00006800 ; 15
C2/DEFA:	0000B800 ; 16
C2/DEFE:	F0FF68FF ; 17
C2/DF02:	00000000 ; 18
C2/DF06:	00006000 ; 19
C2/DF0A:	00002401 ; 1A - Return to item menu after healing targeting menu
C2/DF0E:	00016400 ; 1B - Return to magic menu after healing targeting menu

; This 32-bit data is used at C1/4E7E. The rightmost byte in each line is unused. Appears to be location data for drawing battle menus.

; First word is a pointer to where the menu buffer should be [?]
; Third byte is the length of the buffer [?]
C2/DF12:	D55A0C00
C2/DF16:	955B0700
C2/DF1A:	055C0400
C2/DF1E:	455C0600
C2/DF22:	59582000
C2/DF26:	618D2000
C2/DF2A:	4D5E2000
C2/DF2E:	A55C0700
C2/DF32:	3F5D0700
C2/DF36:	855D0700
C2/DF3A:	A55C0700
C2/DF3E:	C15C0700
C2/DF42:	DD5C0700
C2/DF46:	F95C0700
C2/DF4A:	055C0400
C2/DF4E:	155C0400
C2/DF52:	255C0400
C2/DF56:	355C0400
C2/DF5A:	455C0600
C2/DF5E:	5D5C0600
C2/DF62:	755C0600
C2/DF66:	8D5C0600
C2/DF6A:	455C0600
C2/DF6E:	5D5C0600
C2/DF72:	755C0600
C2/DF76:	8D5C0600
C2/DF7A:	455C0600
C2/DF7E:	5D5C0600
C2/DF82:	755C0600
C2/DF86:	8D5C0600
C2/DF8A:	BD5D0C00
C2/DF8E:	59582000
C2/DF92:	59582000
C2/DF96:	CD5E0A00
C2/DF9A:	578D2000

; 64-bit data used at C1/470B.
; These are instructions for transferring data
; Bytes 0-1: Source RAM address
; Bytes 2-3: Destination RAM address
; Bytes 4-5: Block length
; Bytes 6-7: How many blocks to move
C2/DF9E:	D55A595818000800 ; $00 - enemy names
C2/DFA6:	955B71580E000800 ; $01 - character names
C2/DFAE:	055C7F5808000800 ; $02 - current HP
C2/DFB6:	455C87580C000800 ; $03 - ATB or max HP (backup, unused) [?]
C2/DFBE:	315D158D0E000500 ; $04 -
C2/DFC6:	315D958D0E000500 ; $05 -
C2/DFCE:	315D158E0E000500 ; $06 -
C2/DFD6:	315D958E0E000500 ; $07 -
C2/DFDE:	775D218D0E000500 ; $08 -
C2/DFE6:	775DA18D0E000500 ; $09 -
C2/DFEE:	775D218E0E000500 ; $0A -
C2/DFF6:	775DA18E0E000500 ; $0B -
C2/DFFE:	055C7D8D08000800 ; $0C -
C2/E006:	455C858D0C000800 ; $0D -
C2/E00E:	BD5D578D18000600 ; $0E -
C2/E016:	315D178D0E000500 ; $0F -
C2/E01E:	775D2F8D0E000500 ; $10 -
C2/E026:	CD5E578D14000800 ; $11 -
C2/E02E:	955B6F8D0E000800 ; $12 -

; Magic menu drawing script.
C2/E036:	0503    	; Draw 3 spaces
C2/E038:	0421    	; Change tile palette to #$21
C2/E03A:	0F00    	; Draw spell name
C2/E03C:	FFFF    	; Draw 2 spaces
C2/E03E:	0421    	; Change tile palette to #$21
C2/E040:	0F00    	; Draw spell name
C2/E042:	050A    	; Draw 10 spaces
C2/E044:	00      	; End script

; Lore menu drawing script.
C2/E045:	FFFFFF  	; Draw 3 spaces - why not 05 03?!
C2/E048:	0421    	; Change tile palette to #$21
C2/E04A:	1900    	; Draw Lore name
C2/E04C:	00      	; End script

; Magitek menu drawing script.
C2/E04D:	0504    	; Draw 4 spaces
C2/E04F:	0421    	; Change tile palette to #$21
C2/E051:	0600    	; Draw Magitek attack name
C2/E053:	0503    	; Draw 3 spaces
C2/E055:	0421    	; Change tile palette to #$21
C2/E057:	0600    	; Draw Magitek attack name
C2/E059:	00      	; End script

; Dance menu drawing script.
C2/E05A:	0504    	; Draw 4 spaces
C2/E05C:	0421    	; Change tile palette to #$21
C2/E05E:	1700    	; Draw Dance name
C2/E060:	0502    	; Draw 2 spaces
C2/E062:	0421    	; Change tile palette to #$21
C2/E064:	1700    	; Draw Dance name
C2/E066:	00      	; End script

; Rage menu drawing script.
C2/E067:	0504    	; Draw 4 spaces
C2/E069:	0421    	; Change tile palette to #$21
C2/E06B:	1800    	; Draw enemy name
C2/E06D:	0502    	; Draw 2 spaces
C2/E06F:	0421    	; Change tile palette to #$21
C2/E071:	1800    	; Draw enemy name
C2/E073:	00      	; End script

; Item menu drawing script.
C2/E074:	0504    	; Draw 4 spaces
C2/E076:	0421    	; Change tile palette to #$21
C2/E078:	0E00    	; Draw Item name
C2/E07A:	C1      	; Draw ':'
C2/E07B:	0200    	; Draw quantity
C2/E07D:	FFFF    	; Draw 2 spaces
C2/E07F:	1200    	; Draw Item type
C2/E081:	FF      	; Draw a space, for some reason
C2/E082:	00      	; End script

; Esper menu drawing script.
C2/E083:	FFFF    	; Draw 2 spaces
C2/E085:	84ACA99E	; Draw "Espe"
C2/E089:	ABFFFF  	; Draw "r  "
C2/E08C:	0421    	; Change tile palette to #$21
C2/E08E:	1A00    	; Draw Esper name
C2/E090:	0504    	; Draw 4 spaces
C2/E092:	032C    	; Draw 'M', except that's the wrong value
C2/E094:	032F    	; Draw 'P', except that's the wrong value
C2/E096:	FF      	; Draw ' '
C2/E097:	1600    	; Display MP cost
C2/E099:	00      	; End script

; Menu drawing pointers used at C1/4E63.
C2/E09A:	C9E1
C2/E09C:	D9E1
C2/E09E:	E9E1
C2/E0A0:	F5E1
C2/E0A2:	48E2
C2/E0A4:	68E2
C2/E0A6:	72E1
C2/E0A8:	85E1
C2/E0AA:	65E1
C2/E0AC:	6BE1
C2/E0AE:	A1E1
C2/E0B0:	A8E1
C2/E0B2:	AFE1
C2/E0B4:	B6E1
C2/E0B6:	25E1
C2/E0B8:	28E1
C2/E0BA:	2BE1
C2/E0BC:	2EE1
C2/E0BE:	31E1
C2/E0C0:	34E1
C2/E0C2:	37E1
C2/E0C4:	3AE1
C2/E0C6:	3DE1
C2/E0C8:	42E1
C2/E0CA:	47E1
C2/E0CC:	4CE1
C2/E0CE:	51E1
C2/E0D0:	56E1
C2/E0D2:	5BE1
C2/E0D4:	60E1
C2/E0D6:	ECE0
C2/E0D8:	01E2
C2/E0DA:	28E2
C2/E0DC:	BDE1
C2/E0DE:	E0E0

; Menu drawing scripts. Maximum length is 64 bytes, apparently.
C2/E0E0:	0512    	; Draw 18 spaces
C2/E0E2:	01      	; New line
C2/E0E3:	0512    	; Draw 18 spaces
C2/E0E5:	01      	; New line
C2/E0E6:	0512    	; Draw 18 spaces
C2/E0E8:	01      	; New line
C2/E0E9:	0512    	; Draw 18 spaces
C2/E0EB:	00      	; End script

; SwdTech menu drawing script.
C2/E0EC:	FFFF    	; Draw 2 spaces
C2/E0EE:	0421    	; Change tile palette to #$21
C2/E0F0:	B5      	; Draw '1'
C2/E0F1:	0421    	; Change tile palette to #$21
C2/E0F3:	B6      	; Draw '2'
C2/E0F4:	0421    	; Change tile palette to #$21
C2/E0F6:	B7      	; Draw '3'
C2/E0F7:	0421    	; Change tile palette to #$21
C2/E0F9:	B8      	; Draw '4'
C2/E0FA:	0421    	; Change tile palette to #$21
C2/E0FC:	B9      	; Draw '5'
C2/E0FD:	0421    	; Change tile palette to #$21
C2/E0FF:	BA      	; Draw '6'
C2/E100:	0421    	; Change tile palette to #$21
C2/E102:	BB      	; Draw '7'
C2/E103:	0421    	; Change tile palette to #$21
C2/E105:	BC      	; Draw '8'
C2/E106:	FFFF    	; Draw 2 spaces
C2/E108:	01      	; New line
C2/E109:	0435    	; Change tile palette to #$35
C2/E10B:	FF      	; Draw ' '
C2/E10C:	03F9    	; Draw left end of timer
C2/E10E:	03F0    	; Draw empty section of timer
C2/E110:	03F0    	; Draw empty section of timer
C2/E112:	03F0    	; Draw empty section of timer
C2/E114:	03F0    	; Draw empty section of timer
C2/E116:	03F0    	; Draw empty section of timer
C2/E118:	03F0    	; Draw empty section of timer
C2/E11A:	03F0    	; Draw empty section of timer
C2/E11C:	03F0    	; Draw empty section of timer
C2/E11E:	03FA    	; Draw right end of timer
C2/E120:	FF      	; Draw ' '
C2/E121:	01      	; New line
C2/E122:	050C    	; Draw 12 spaces
C2/E124:	00      	; End script

C2/E125:	0701    	; Draw party member 1's current HP
C2/E127:	00      	; End script

C2/E128:	0801    	; Draw party member 2's current HP
C2/E12A:	00      	; End script

C2/E12B:	0901    	; Draw party member 3's current HP
C2/E12D:	00      	; End script

C2/E12E:	0A01    	; Draw party member 4's current HP
C2/E130:	00      	; End script

C2/E131:	0702    	; Draw party member 1's ATB gauge or max HP
C2/E133:	00      	; End script

C2/E134:	0802    	; Draw party member 2's ATB gauge or max HP
C2/E136:	00      	; End script

C2/E137:	0902    	; Draw party member 3's ATB gauge or max HP
C2/E139:	00      	; End script

C2/E13A:	0A02    	; Draw party member 4's ATB gauge or max HP
C2/E13C:	00      	; End script

C2/E13D:	0439    	; Change tile palette to #$39
C2/E13F:	0705    	; Draw party member 1's Morph gauge
C2/E141:	00      	; End script

C2/E142:	0439    	; Change tile palette to #$39
C2/E144:	0805    	; Draw party member 2's Morph gauge
C2/E146:	00      	; End script

C2/E147:	0439    	; Change tile palette to #$39
C2/E149:	0905    	; Draw party member 3's Morph gauge
C2/E14B:	00      	; End script

C2/E14C:	0439    	; Change tile palette to #$39
C2/E14E:	0A05    	; Draw party member 4's Morph gauge
C2/E150:	00      	; End script

; There's a Condemned gauge?! How come I've never seen it?
C2/E151:	043D    	; Change tile palette to #$39
C2/E153:	0706    	; Draw party member 1's Condemned gauge
C2/E155:	00      	; End script

C2/E156:	043D    	; Change tile palette to #$39
C2/E158:	0806    	; Draw party member 2's Condemned gauge
C2/E15A:	00      	; End script

C2/E15B:	043D    	; Change tile palette to #$39
C2/E15D:	0906    	; Draw party member 3's Condemned gauge
C2/E15F:	00      	; End script

C2/E160:	043D    	; Change tile palette to #$39
C2/E162:	0A06    	; Draw party member 4's Condemned gauge
C2/E164:	00      	; End script

C2/E165:	FFFF    	; Draw 2 spaces
C2/E167:	91A8B0  	; Draw "Row"
C2/E16A:	00      	; End script

C2/E16B:	FFFF    	; Draw 2 spaces
C2/E16D:	839E9FC5	; Draw "Def."
C2/E171:	00      	; End script

C2/E172:	0503    	; Draw 3 spaces
C2/E174:	91C487  	; Draw "R-H"
C2/E177:	9AA79D  	; Draw "and"
C2/E17A:	0509    	; Draw 9 spaces
C2/E17C:	8BC487  	; Draw "L-H"
C2/E17F:	9AA79D  	; Draw "and"
C2/E182:	0507    	; Draw 7 spaces
C2/E184:	00      	; End script

; When are these used?!
C2/E185:	0703    	; Draw party member 1's current MP
C2/E187:	0315    	; Draw ' '
C2/E189:	0704    	; Draw party member 1's max MP
C2/E18B:	01      	; New line
C2/E18C:	0803    	; Draw party member 2's current MP
C2/E18E:	0315    	; Draw ' '
C2/E190:	0804    	; Draw party member 2's max MP
C2/E192:	01      	; New line
C2/E193:	0903    	; Draw party member 3's current MP
C2/E195:	0315    	; Draw ' '
C2/E197:	0904    	; Draw party member 3's max MP
C2/E199:	01      	; New line
C2/E19A:	0A03    	; Draw party member 4's current MP
C2/E19C:	0315    	; Draw ' '
C2/E19E:	0A04    	; Draw party member 4's max MP
C2/E1A0:	00      	; End script

C2/E1A1:	0703    	; Draw party member 1's current MP
C2/E1A3:	0315    	; Draw ' '
C2/E1A5:	0704    	; Draw party member 1's max MP
C2/E1A7:	00      	; End script

C2/E1A8:	0803    	; Draw party member 2's current MP
C2/E1AA:	0315    	; Draw ' '
C2/E1AC:	0804    	; Draw party member 2's max MP
C2/E1AE:	00      	; End script

C2/E1AF:	0903    	; Draw party member 3's current MP
C2/E1B1:	0315    	; Draw ' '
C2/E1B3:	0904    	; Draw party member 3's max MP
C2/E1B5:	00      	; End script

C2/E1B6:	0A03    	; Draw party member 4's current MP
C2/E1B8:	0315    	; Draw ' '
C2/E1BA:	0A04    	; Draw party member 4's max MP
C2/E1BC:	00      	; End script

C2/E1BD:	101F    	; Draw blank status
C2/E1BF:	01      	; New line
C2/E1C0:	101F    	; Draw blank status
C2/E1C2:	01      	; New line
C2/E1C3:	101F    	; Draw blank status
C2/E1C5:	01      	; New line
C2/E1C6:	101F    	; Draw blank status
C2/E1C8:	00      	; End script

C2/E1C9:	0B00    	; Draw enemy name #1
C2/E1CB:	FF      	; Draw ' '
C2/E1CC:	01      	; New line
C2/E1CD:	0B01    	; Draw enemy name #2
C2/E1CF:	FF      	; Draw ' '
C2/E1D0:	01      	; New line
C2/E1D1:	0B02    	; Draw enemy name #3
C2/E1D3:	FF      	; Draw ' '
C2/E1D4:	01      	; New line
C2/E1D5:	0B03    	; Draw enemy name #4
C2/E1D7:	FF      	; Draw ' '
C2/E1D8:	00      	; End script

C2/E1D9:	0700    	; Draw party member 1's name
C2/E1DB:	FF      	; Draw ' '
C2/E1DC:	01      	; New line
C2/E1DD:	0800    	; Draw party member 2's name
C2/E1DF:	FF      	; Draw ' '
C2/E1E0:	01      	; New line
C2/E1E1:	0900    	; Draw party member 3's name
C2/E1E3:	FF      	; Draw ' '
C2/E1E4:	01      	; New line
C2/E1E5:	0A00    	; Draw party member 4's name
C2/E1E7:	FF      	; Draw ' '
C2/E1E8:	00      	; End script

C2/E1E9:	0701    	; Draw party member 1's current HP
C2/E1EB:	01      	; New line
C2/E1EC:	0801    	; Draw party member 2's current HP
C2/E1EE:	01      	; New line
C2/E1EF:	0901    	; Draw party member 3's current HP
C2/E1F1:	01      	; New line
C2/E1F2:	0A01    	; Draw party member 4's current HP
C2/E1F4:	00      	; End script

C2/E1F5:	0702    	; Draw party member 1's ATB gauge or max HP
C2/E1F7:	01      	; New line
C2/E1F8:	0802    	; Draw party member 2's ATB gauge or max HP
C2/E1FA:	01      	; New line
C2/E1FB:	0902    	; Draw party member 3's ATB gauge or max HP
C2/E1FD:	01      	; New line
C2/E1FE:	0A02    	; Draw party member 4's ATB gauge or max HP
C2/E200:	00      	; End script

; This script draws the battle command names in the "Short" selection window. What's weird is that it looks like it's just drawing "Fight" four times. My guess is that the command 0D parameters get overwritten in the loaded script in RAM.
C2/E201:	0506    	; Draw 6 spaces
C2/E203:	0421    	; Change tile palette to #$21
C2/E205:	0D00    	; Draw command name
C2/E207:	0505    	; Draw 5 spaces
C2/E209:	01      	; New line
C2/E20A:	FFFF    	; Draw 2 spaces
C2/E20C:	0421    	; Change tile palette to #$21
C2/E20E:	0D00    	; Draw command name
C2/E210:	161616  	; NOP x3...
C2/E213:	FFFF    	; Draw 2 spaces
C2/E215:	0421    	; Change tile palette to #$21
C2/E217:	0D00    	; Draw command name
C2/E219:	FF      	; Draw ' '
C2/E21A:	01      	; New line
C2/E21B:	16      	; NOP
C2/E21C:	0506    	; Draw 6 spaces
C2/E21E:	0421    	; Change tile palette to #$21
C2/E220:	0D00    	; Draw command name
C2/E222:	0505    	; Draw 5 spaces
C2/E224:	01      	; New line
C2/E225:	0513    	; Draw 19 spaces
C2/E227:	00      	; End script

; Display four spell names? Could this be the Control menu?
C2/E228:	FF      	; Draw ' '
C2/E229:	0421    	; Change tile palette to #$21
C2/E22B:	1100    	; Draw spell name followed by 3 spaces
C2/E22D:	FF      	; Draw ' '
C2/E22E:	16      	; NOP
C2/E22F:	01      	; New line
C2/E230:	FF      	; Draw ' '
C2/E231:	0421    	; Change tile palette to #$21
C2/E233:	1100    	; Draw spell name followed by 3 spaces
C2/E235:	FF      	; Draw ' '
C2/E236:	16      	; NOP
C2/E237:	01      	; New line
C2/E238:	FF      	; Draw ' '
C2/E239:	0421    	; Change tile palette to #$21
C2/E23B:	1100    	; Draw spell name followed by 3 spaces
C2/E23D:	FF      	; Draw ' '
C2/E23E:	16      	; NOP
C2/E23F:	01      	; New line
C2/E240:	FF      	; Draw ' '
C2/E241:	0421    	; Change tile palette to #$21
C2/E243:	1100    	; Draw spell name followed by 3 spaces
C2/E245:	FF      	; Draw ' '
C2/E246:	16      	; NOP
C2/E247:	00      	; End script

C2/E248:	FFFF    	; Draw 2 spaces
C2/E24A:	0421    	; Change tile palette to #$21
C2/E24C:	0D00    	; Draw command name
C2/E24E:	FF      	; Draw ' '
C2/E24F:	01      	; New line
C2/E250:	FFFF    	; Draw 2 spaces
C2/E252:	0421    	; Change tile palette to #$21
C2/E254:	0D00    	; Draw command name
C2/E256:	FF      	; Draw ' '
C2/E257:	01      	; New line
C2/E258:	FFFF    	; Draw 2 spaces
C2/E25A:	0421    	; Change tile palette to #$21
C2/E25C:	0D00    	; Draw command name
C2/E25E:	FF      	; Draw ' '
C2/E25F:	01      	; New line
C2/E260:	FFFF    	; Draw 2 spaces
C2/E262:	0421    	; Change tile palette to #$21
C2/E264:	0D00    	; Draw command name
C2/E266:	FF      	; Draw ' '
C2/E267:	00      	; End script

C2/E268:	FFFF    	; Draw 2 spaces
C2/E26A:	0421    	; Change tile palette to #$21
C2/E26C:	1B00    	; NOP...
C2/E26E:	FF      	; Draw ' '
C2/E26F:	01      	; New line
C2/E270:	FFFF    	; Draw 2 spaces
C2/E272:	0421    	; Change tile palette to #$21
C2/E274:	1B00    	; NOP...
C2/E276:	FF      	; Draw ' '
C2/E277:	01      	; New line
C2/E278:	FFFF    	; Draw 2 spaces
C2/E27A:	0421    	; Change tile palette to #$21
C2/E27C:	1B00    	; NOP...
C2/E27E:	FF      	; Draw ' '
C2/E27F:	01      	; New line
C2/E280:	FFFF    	; Draw 2 spaces
C2/E282:	0421    	; Change tile palette to #$21
C2/E284:	1B00    	; NOP...
C2/E286:	FF      	; Draw ' '
C2/E287:	00      	; End script

; Data (called from C2/AF4F) (Animation script command 80 85: Chadarnook Exit)
C2/E288:	0000
C2/E28A:	AD31
C2/E28C:	0A19
C2/E28E:	2B1D
C2/E290:	6B29
C2/E292:	2921
C2/E294:	081D
C2/E296:	E71C
C2/E298:	E718
C2/E29A:	A518
C2/E29C:	2308
C2/E29E:	640C
C2/E2A0:	4A29
C2/E2A2:	C618
C2/E2A4:	A90C
C2/E2A6:	6608
C2/E2A8:	0038
C2/E2AA:	F84A
C2/E2AC:	963A
C2/E2AE:	342A
C2/E2B0:	D21D
C2/E2B2:	2E11
C2/E2B4:	A90C
C2/E2B6:	6608
C2/E2B8:	2308
C2/E2BA:	D425
C2/E2BC:	ED14
C2/E2BE:	A810
C2/E2C0:	6508
C2/E2C2:	4304
C2/E2C4:	4629
C2/E2C6:	0721
C2/E2C8:	0038
C2/E2CA:	D309
C2/E2CC:	B20C
C2/E2CE:	CB11
C2/E2D0:	701D
C2/E2D2:	EC14
C2/E2D4:	A810
C2/E2D6:	840C
C2/E2D8:	2308
C2/E2DA:	0E42
C2/E2DC:	6A29
C2/E2DE:	701D
C2/E2E0:	7352
C2/E2E2:	D309
C2/E2E4:	B20C
C2/E2E6:	CB11

; Data, called from C2/AF39 (Animation script command 80 85: Chadarnook Exit)
C2/E2E8:	0000
C2/E2EA:	840C
C2/E2EC:	440C
C2/E2EE:	640C
C2/E2F0:	8410
C2/E2F2:	430C
C2/E2F4:	620C
C2/E2F6:	420C
C2/E2F8:	420C
C2/E2FA:	430C
C2/E2FC:	2308
C2/E2FE:	2308
C2/E300:	630C
C2/E302:	430C
C2/E304:	2308
C2/E306:	2308
C2/E308:	0038
C2/E30A:	2E11
C2/E30C:	A90C
C2/E30E:	A718
C2/E310:	8514
C2/E312:	4414
C2/E314:	4314
C2/E316:	2310
C2/E318:	2308
C2/E31A:	2308
C2/E31C:	4610
C2/E31E:	4508
C2/E320:	2408
C2/E322:	2308
C2/E324:	D47F
C2/E326:	2308
C2/E328:	0038
C2/E32A:	3052
C2/E32C:	1449
C2/E32E:	EB3D
C2/E330:	640C
C2/E332:	4508
C2/E334:	2408
C2/E336:	2308
C2/E338:	2308
C2/E33A:	640C
C2/E33C:	440C
C2/E33E:	B065
C2/E340:	6510
C2/E342:	6308
C2/E344:	4408
C2/E346:	620C

; Battle cursor state sequences
; All start with (01), to wait for menu load,
; then process cursor queue
C2/E348:	01050000 ; 00
C2/E34C:	01323908 ; 01
C2/E350:	010A0000 ; 02 - Item menu
C2/E354:	010C0000 ; 03
C2/E358:	010E0000 ; 04 - Magic menu
C2/E35C:	01100000 ; 05
C2/E360:	01160000 ; 06 - Esper menu
C2/E364:	011B0000 ; 07 - Lore menu
C2/E368:	010A0000 ; 08
C2/E36C:	011E0000 ; 09
C2/E370:	01210000 ; 0A
C2/E374:	01240000 ; 0B
C2/E378:	01270000 ; 0C
C2/E37C:	012A0000 ; 0D
C2/E380:	012D0000 ; 0E
C2/E384:	01300000 ; 0F
C2/E388:	01370000 ; 10
C2/E38C:	01000000 ; 11
C2/E390:	01410000 ; 12

; Other data sets called from various places.
C2/E394:	C0
C2/E395:	C4
C2/E396:	C8
C2/E397:	CC

C2/E398:	60
C2/E399:	64
C2/E39A:	68
C2/E39B:	6C

C2/E39C:	80
C2/E39D:	84
C2/E39E:	88
C2/E39F:	8C

C2/E3A0:	A0
C2/E3A1:	A4

C2/E3A2:	FB
C2/E3A3:	FA
C2/E3A4:	F9
C2/E3A5:	F8
C2/E3A6:	F8
C2/E3A7:	F9
C2/E3A8:	FA
C2/E3A9:	FB

; Data needed for status-related outline color changes.
C2/E3AA:	00
C2/E3AB:	08
C2/E3AC:	10
C2/E3AD:	18

; Data needed for status-related skin color changes.
C2/E3AE:	DB7ED34D
C2/E3B2:	F53A1032
C2/E3B6:	3F011F00

; Also seems to be part of the outline color function.
C2/E3BA:	606A
C2/E3BC:	1F03
C2/E3BE:	640B
C2/E3C0:	1A00

C2/E3C2:	FF7F
C2/E3C4:	FF7F
C2/E3C6:	1A00
C2/E3C8:	1F7C

; Seems to have something to do with the animations over characters' heads with certain statuses, e.g. Poison bubbles.
C2/E3CA:	0000
C2/E3CC:	0000
C2/E3CE:	0000
C2/E3D0:	0200
C2/E3D2:	0000
C2/E3D4:	1000
C2/E3D6:	2000
C2/E3D8:	0000

; Some more status-related 32-bit data.
C2/E3DA:	00F8200A
C2/E3DE:	00F8220A
C2/E3E2:	FFFA2408
C2/E3E6:	00F8260C
C2/E3EA:	F8F82808
C2/E3EE:	F0F82A08
C2/E3F2:	00102C0C
C2/E3F6:	00FD200A
C2/E3FA:	00FD220A
C2/E3FE:	FFFF2408
C2/E402:	00FD260C
C2/E406:	F8FD2808
C2/E40A:	F0FD2A08
C2/E40E:	00102C0C

; VRAM data for each party member.
C2/E412:	0080
C2/E414:	0060
C2/E416:	0040
C2/E418:	0020

C2/E41A:	00A0
C2/E41C:	80A0
C2/E41E:	00A1
C2/E420:	80A1

; Data - indexed by ??? ranging from 0-3 (x2), code in bank C1
C2/E422:	0000
C2/E424:	0020
C2/E426:	0040
C2/E428:	0060

C2/E42A:	00A0
C2/E42C:	0000
C2/E42E:	00A0
C2/E430:	0000
C2/E432:	00A0
C2/E434:	0000
C2/E436:	00A0
C2/E438:	0000
C2/E43A:	00A0
C2/E43C:	0000

; Data - indexed by encounter type, code in Bank C1
C2/E43E:	00	; Front
C2/E43F:	00
C2/E440:	00
C2/E441:	00

C2/E442:	40	; Back
C2/E443:	40
C2/E444:	40
C2/E445:	40

C2/E446:	40	; Pincer
C2/E447:	00
C2/E448:	40
C2/E449:	00

C2/E44A:	00 ; Side
C2/E44B:	00
C2/E44C:	40
C2/E44D:	40

; Data - indexed by encounter type, code in Bank C1
; (deals with what characters are flipped around?  obviously none are on a Front attack,
; All are on a Back, the last 2 characters end up on the left side -- i.e. facing right --
; On a Side, and the 1st and 3rd face right when Pincered)
C2/E44E:	00	; Front
C2/E44F:	00
C2/E450:	00
C2/E451:	00

C2/E452:	01	; Back
C2/E453:	01
C2/E454:	01
C2/E455:	01

C2/E456:	01	; Pincer
C2/E457:	00
C2/E458:	01
C2/E459:	00

C2/E45A:	00	; Side
C2/E45B:	00
C2/E45C:	01
C2/E45D:	01

C2/E45E:	08
C2/E45F:	0A
C2/E460:	0C
C2/E461:	0E

; Something related to Dance animations. Indexed by backgrounds.
C2/E462:	00
C2/E463:	00
C2/E464:	00
C2/E465:	00
C2/E466:	00
C2/E467:	00
C2/E468:	00
C2/E469:	01
C2/E46A:	00
C2/E46B:	00
C2/E46C:	00
C2/E46D:	00
C2/E46E:	00
C2/E46F:	01
C2/E470:	00
C2/E471:	01
C2/E472:	00
C2/E473:	00
C2/E474:	00
C2/E475:	00
C2/E476:	00
C2/E477:	00
C2/E478:	00
C2/E479:	00
C2/E47A:	00
C2/E47B:	00
C2/E47C:	00
C2/E47D:	00
C2/E47E:	00
C2/E47F:	00
C2/E480:	00
C2/E481:	01
C2/E482:	01
C2/E483:	01
C2/E484:	00
C2/E485:	00
C2/E486:	00
C2/E487:	01
C2/E488:	00
C2/E489:	00
C2/E48A:	00
C2/E48B:	01
C2/E48C:	00
C2/E48D:	00
C2/E48E:	01
C2/E48F:	00
C2/E490:	00
C2/E491:	00
C2/E492:	00
C2/E493:	00
C2/E494:	01
C2/E495:	01
C2/E496:	01
C2/E497:	01
C2/E498:	01
C2/E499:	01

C2/E49A:	0B
C2/E49B:	0B
C2/E49C:	09
C2/E49D:	0B
C2/E49E:	0B
C2/E49F:	0B
C2/E4A0:	0B
C2/E4A1:	0B
C2/E4A2:	0B
C2/E4A3:	0B
C2/E4A4:	0B
C2/E4A5:	0B
C2/E4A6:	0B
C2/E4A7:	0B
C2/E4A8:	0B
C2/E4A9:	0B
C2/E4AA:	0B
C2/E4AB:	0B
C2/E4AC:	0B
C2/E4AD:	0B
C2/E4AE:	0B
C2/E4AF:	0B
C2/E4B0:	0B
C2/E4B1:	0B
C2/E4B2:	0B
C2/E4B3:	09
C2/E4B4:	09
C2/E4B5:	0B
C2/E4B6:	0B
C2/E4B7:	00
C2/E4B8:	0B
C2/E4B9:	0B
C2/E4BA:	0B
C2/E4BB:	0B
C2/E4BC:	0B
C2/E4BD:	0B
C2/E4BE:	0B
C2/E4BF:	0B
C2/E4C0:	0B
C2/E4C1:	0B
C2/E4C2:	0B

C2/E4C3:	003C
C2/E4C5:	0038
C2/E4C7:	0034
C2/E4C9:	0030

C2/E4CB:	000C
C2/E4CD:	0008
C2/E4CF:	0004
C2/E4D1:	0000

C2/E4D3:	3FC6
C2/E4D5:	3FBE
C2/E4D7:	3FB6
C2/E4D9:	3FAE

C2/E4DB:	00DC
C2/E4DD:	00D4
C2/E4DF:	00CC
C2/E4E1:	00C4

C2/E4E3:	7E
C2/E4E4:	7E
C2/E4E5:	7E
C2/E4E6:	7E
C2/E4E7:	7F
C2/E4E8:	7F
C2/E4E9:	7F
C2/E4EA:	7F

; Pointers for Hide/Kill Enemy animations
C2/E4EB:	3FE5 ; $00 ($E53F) RTS
C2/E4ED:	46E5 ; $01 ($E546) Smoke
C2/E4EF:	52E5 ; $02 ($E552) Up
C2/E4F1:	5EE5 ; $03 Left
C2/E4F3:	6AE5 ; $04 Little Splash
C2/E4F5:	76E5 ; $05 ($E576) Up [dup]
C2/E4F7:	82E5 ; $06 Big Splash
C2/E4F9:	C7E5 ; $07 Left [dup]
C2/E4FB:	8EE5 ; $08
C2/E4FD:	9AE5 ; $09
C2/E4FF:	A6E5 ; $0A ($E5A6) Melt
C2/E501:	B2E5 ; $0B
C2/E503:	B8E5 ; $0C ($E5B8) Regular Boss Death
C2/E505:	3FE5 ; $0D ($E53F) RTS [Flutter]
C2/E507:	39E5 ; $0E ($E539) Chadarnook
C2/E509:	3FE5 ; $0F ($E53F) RTS
C2/E50B:	3FE5 ; $10 ($E53F) RTS
C2/E50D:	3FE5 ; $11 ($E53F) RTS [Kefka]

; Pointers for Unhide/Revive Enemy animations
C2/E50F:	3FE5 ; $00 ($E53F) RTS
C2/E511:	40E5 ; $01 ($E540) Smoke
C2/E513:	4CE5 ; $02 Down
C2/E515:	58E5 ; $03 Right
C2/E517:	64E5 ; $04 Little Splash
C2/E519:	70E5 ; $05 Down [dup]
C2/E51B:	7CE5 ; $06 Big Splash
C2/E51D:	C1E5 ; $07 Right [dup]
C2/E51F:	88E5 ; $08
C2/E521:	94E5 ; $09
C2/E523:	A0E5 ; $0A ($E5A0) Melt
C2/E525:	ACE5 ; $0B
C2/E527:	3FE5 ; $0C ($E53F) RTS [Regular Boss Death]
C2/E529:	3FE5 ; $0D ($E53F) RTS [Flutter]
C2/E52B:	33E5 ; $0E ($E533) Chadarnook
C2/E52D:	CDE5 ; $0F ($E5CD) [Unused?]
C2/E52F:	3FE5 ; $10 ($E53F) RTS
C2/E531:	3FE5 ; $11 ($E53F) RTS [Kefka]

C2/E533:	00049A1501FF
C2/E539:	00038C1501FF
C2/E53F:	FF
C2/E540:	0004B01301FF
C2/E546:	0003541501FF
C2/E54C:	0004CC1301FF
C2/E552:	0003BE1301FF
C2/E558:	0004E81301FF
C2/E55E:	0003DA1301FF
C2/E564:	0004041401FF
C2/E56A:	0003F61301FF
C2/E570:	0004201401FF
C2/E576:	0003121401FF
C2/E57C:	00043C1401FF
C2/E582:	00032E1401FF
C2/E588:	0004581401FF
C2/E58E:	00034A1401FF
C2/E594:	0004741401FF
C2/E59A:	0003661401FF
C2/E5A0:	0004901401FF
C2/E5A6:	0003821401FF
C2/E5AC:	0004AC1401FF
C2/E5B2:	00039E1401FF
C2/E5B8:	0003621501FF
C2/E5BE:	00E0FF
C2/E5C1:	0004B61501FF
C2/E5C7:	0003A81501FF
C2/E5CD:	0004C41501FF

; Pointers for Animation Script subcommands (enemy script op $FA)
C2/E5D3:	13E6 ; $00 - Enemy flashes red
C2/E5D5:	19E6 ; $01 - Enemy steps back
C2/E5D7:	1FE6 ; $02 - Enemy steps forward
C2/E5D9:	25E6 ; $03 - Enemy steps back faster
C2/E5DB:	2BE6 ; $04 - Enemy steps forward faster
C2/E5DD:	07E6 ; $05 - Characters run to right
C2/E5DF:	0DE6 ; $06 - Characters run to left
C2/E5E1:	31E6 ; $07 - Enemy steps back 3
C2/E5E3:	37E6 ; $08 - Enemy steps forward 3
C2/E5E5:	13E6 ; $09 - Play sound (handled separately)
C2/E5E7:	01E6 ; $0A - Kefka head
C2/E5E9:	FBE5 ; $0B - Enemy flashes yellow
C2/E5EB:	F5E5 ; $0C - Enemy flashes yellow briefly
C2/E5ED:	EFE5 ; $0D - Boss death animation

C2/E5EF:	00040A1601FF - Boss death animation
C2/E5F5:	0004EE1501FF - Enemy flashes yellow briefly
C2/E5FB:	0004E01501FF - Enemy flashes yellow
C2/E601:	0004D21501FF - Kefka head
C2/E607:	0005461501FE - Characters run to the right
C2/E60D:	0005381501FE - Characters run to the left
C2/E613:	0004FC0E01FF - Enemy flashes red
C2/E619:	0004EE0E01FF - Enemy steps back
C2/E61F:	0004E00E01FF - Enemy steps forward
C2/E625:	0004F21401FF - Enemy steps back faster
C2/E62B:	0004E41401FF - Enemy steps forward faster
C2/E631:	00047E1501FF - Enemy steps back 3
C2/E637:	0004701501FF - Enemy steps forward 3

; Run enemy AI "Animation" op

C2/E63D:	A0 02 00   	LDY #$0002     ; 2
C2/E640:	B1 76      	LDA ($76),Y    ; 2nd command arg [?]
C2/E642:	8D FC E9   	STA $E9FC      ; save it
C2/E645:	88         	DEY            ; y=1
C2/E646:	B1 76      	LDA ($76),Y    ; 1st command arg (sub command)
C2/E648:	C9 09      	CMP #$09       ; is it "Play Sound"
C2/E64A:	D0 0D      	BNE $E659      ; branch if not ^
C2/E64C:	C8         	INY            ; y=2
C2/E64D:	B1 76      	LDA ($76),Y    ; 2nd command arg (pan value)
C2/E64F:	85 10      	STA $10        ; save it
C2/E651:	C8         	INY            ; y=3
C2/E652:	B1 76      	LDA ($76),Y    ; 3rd command arg (sound effect ID)
C2/E654:	22 EB 17 C1	JSL $C117EB    ; Why not JML?
C2/E658:	6B         	RTL

C2/E659:	C2 20      	REP #$20       ; 16-bit A
C2/E65B:	0A         	ASL            ; subcommand x2
C2/E65C:	AA         	TAX            ; index it
C2/E65D:	BF D3 E5 C2	LDA $C2E5D3,X  ; point to subcommand animation script
C2/E661:	85 8F      	STA $8F        ; save pointer
C2/E663:	7B         	TDC            ; zero A/B
C2/E664:	E2 20      	SEP #$20       ; 8-bit A
C2/E666:	80 49      	BRA $E6B1      ; branch

C2/E668:	20 54 EA   	JSR $EA54      ; wait until PPU is ready for animations?
C2/E66B:	A0 01 00   	LDY #$0001     ; second argument
C2/E66E:	B1 76      	LDA ($76),Y    ; animation ID
C2/E670:	C9 0D      	CMP #$0D       ; "Flutter" death
C2/E672:	D0 06      	BNE $E67A      ; branch if not ^
C2/E674:	20 06 E8   	JSR $E806      ; initialize/update hidden/visible enemies
C2/E677:	4C 8E E8   	JMP $E88E      ; process flutter death animation

C2/E67A:	C9 11      	CMP #$11       ; "Kefka" death
C2/E67C:	D0 13      	BNE $E691      ; branch if not ^
C2/E67E:	20 06 E8   	JSR $E806      ; initialize/update hidden/visible enemies
C2/E681:	22 D1 91 C1	JSL $C191D1    ;
C2/E685:	A9 FF      	LDA #$FF       ; all monsters
C2/E687:	8D 91 61   	STA $6191      ; set "staying visible" monsters
C2/E68A:	AD 2F 2F   	LDA $2F2F      ; visible monsters
C2/E68D:	8D 1E 20   	STA $201E      ; set ^
C2/E690:	6B         	RTL

; Most Hide/Unhide animations handling

C2/E691:	48         	PHA            ; save animation ID
C2/E692:	20 06 E8   	JSR $E806      ; initialize/update hidden/visible enemies
C2/E695:	68         	PLA            ; animation ID
C2/E696:	C2 20      	REP #$20       ; 16-bit A
C2/E698:	0A         	ASL            ; x2
C2/E699:	AA         	TAX            ; index it
C2/E69A:	AD FB E9   	LDA $E9FB      ; enemies to hide/kill
C2/E69D:	29 FF 00   	AND #$00FF     ; clear unwanted data
C2/E6A0:	F0 06      	BEQ $E6A8      ; branch if none to hide
C2/E6A2:	BF EB E4 C2	LDA $C2E4EB,X  ; hide/kill animation script pointers
C2/E6A6:	80 04      	BRA $E6AC      ; branch 
C2/E6A8:	BF 0F E5 C2	LDA $C2E50F,X  ; unhide/revive animation script pointers

C2/E6AC:	85 8F      	STA $8F        ; save animation script pointer
C2/E6AE:	7B         	TDC            ; zero A/B
C2/E6AF:	E2 20      	SEP #$20       ; 8-bit A

; Other script animations enter here
C2/E6B1:	A9 C2      	LDA #$C2       ; bank
C2/E6B3:	85 91      	STA $91        ; save animation script bank

C2/E6B5:	A7 8F      	LDA [$8F]      ; script command
C2/E6B7:	C9 FF      	CMP #$FF       ; "end-of-script" [?]
C2/E6B9:	F0 10      	BEQ $E6CB      ; branch if ^
C2/E6BB:	C9 FE      	CMP #$FE       ; "alt-end-of-script" [?]
C2/E6BD:	F0 11      	BEQ $E6D0      ; branch if ^
C2/E6BF:	0A         	ASL            ; x2
C2/E6C0:	AA         	TAX            ; index it
C2/E6C1:	FC D7 E6   	JSR ($E6D7,X)  ; execute script command
C2/E6C4:	A4 8F      	LDY $8F        ; script pointer
C2/E6C6:	C8         	INY            ; increment pointer
C2/E6C7:	84 8F      	STY $8F        ; update script pointer
C2/E6C9:	80 EA      	BRA $E6B5      ; loop

C2/E6CB:	A9 FF      	LDA #$FF       ; all enemies
C2/E6CD:	8D 91 61   	STA $6191      ; set visible enemies

C2/E6D0:	AD 2F 2F   	LDA $2F2F      ; visible (alive) enemies
C2/E6D3:	8D 1E 20   	STA $201E      ; set ^ BUG HERE
C2/E6D6:	6B         	RTL

; Pointers to Enemy animation script commands
C2/E6D7:	FCE7  ; $00 $E7FC - Clear previous animation data [?]
C2/E6D9:	01E8  ; $01 $E801 - Execute the animation we just set up
C2/E6DB:	A7E7  ; $02 $E7A7
C2/E6DD:	F4E6  ; $03 $E6F4
C2/E6DF:	33E7  ; $04 $E733 - Enemy animation
C2/E6E1:	72E7  ; $05 $E772 - Character animation

; Get index of first bit set in A (or zero)
C2/E6E3:	A6 00      	LDX $00        ; zero X
C2/E6E5:	4A         	LSR            ; bit in A
C2/E6E6:	B0 08      	BCS $E6F0      ; branch if set
C2/E6E8:	E8         	INX            ; next bit
C2/E6E9:	E0 08 00   	CPX #$0008     ; check all 8 bits
C2/E6EC:	D0 F7      	BNE $E6E5      ; loop till done
C2/E6EE:	7B         	TDC            ; zero A
C2/E6EF:	60         	RTS

C2/E6F0:	8A         	TXA            ; get which bit number
C2/E6F1:	29 07      	AND #$07       ; modulo 8
C2/E6F3:	60         	RTS

C2/E6F4:	22 21 FE C1	JSL $C1FE21    ; clear current battle script data
C2/E6F8:	A0 01 00   	LDY #$0001     ; first argument
C2/E6FB:	C2 20      	REP #$20       ; 16-bit A
C2/E6FD:	B7 8F      	LDA [$8F],Y    ; word [?]
C2/E6FF:	85 1E      	STA $1E        ; save pointer to animation
C2/E701:	E6 8F      	INC $8F        ; increment pointer
C2/E703:	E6 8F      	INC $8F        ; increment pointer
C2/E705:	7B         	TDC            ; zero A/B
C2/E706:	E2 20      	SEP #$20       ; 8-bit A
C2/E708:	AD FB E9   	LDA $E9FB      ; enemies to hide/kill
C2/E70B:	20 E3 E6   	JSR $E6E3      ; index of first/only enemy bit
C2/E70E:	18         	CLC            ; clear carry
C2/E70F:	69 04      	ADC #$04       ; move into "enemy" slot id range
C2/E711:	8D 6F 2C   	STA $2C6F      ; save ^
C2/E714:	AD FB E9   	LDA $E9FB      ; enemies to hide/kill
C2/E717:	8D 71 2C   	STA $2C71      ; save ^
C2/E71A:	8D 73 2C   	STA $2C73      ; save ^
C2/E71D:	8D 3E 61   	STA $613E      ; save ^
C2/E720:	9C 3D 61   	STZ $613D      ; clear character byte
C2/E723:	9C 70 2C   	STZ $2C70      ; clear character byte
C2/E726:	9C 72 2C   	STZ $2C72      ; clear character byte
C2/E729:	A9 C0      	LDA #$C0       ; "Monster Attacker"/"No Character Targets"
C2/E72B:	8D 6E 2C   	STA $2C6E      ; set animation flags ^
C2/E72E:	22 80 B8 C1	JSL $C1B880    ; setup animation at pointer $1E
C2/E732:	60         	RTS

; Prep enemy animation

C2/E733:	22 21 FE C1	JSL $C1FE21    ; clear current battle script data
C2/E737:	A0 01 00   	LDY #$0001     ; 1
C2/E73A:	C2 20      	REP #$20       ; 16-bit A
C2/E73C:	B7 8F      	LDA [$8F],Y    ; animation script arg (some pointer)
C2/E73E:	85 1E      	STA $1E        ; save it
C2/E740:	E6 8F      	INC $8F        ; next script index
C2/E742:	E6 8F      	INC $8F        ; next script index
C2/E744:	7B         	TDC            ; zero A/B
C2/E745:	E2 20      	SEP #$20       ; 8-bit A
C2/E747:	AD FC E9   	LDA $E9FC      ; original ai script arg 2 (op $FA)
C2/E74A:	20 E3 E6   	JSR $E6E3      ; get slot for enemy bit
C2/E74D:	18         	CLC            ; clear carry
C2/E74E:	69 04      	ADC #$04       ; 4 (enemy entity slot)
C2/E750:	8D 6F 2C   	STA $2C6F
C2/E753:	AD FC E9   	LDA $E9FC
C2/E756:	8D 71 2C   	STA $2C71
C2/E759:	8D 73 2C   	STA $2C73
C2/E75C:	8D 3E 61   	STA $613E
C2/E75F:	9C 3D 61   	STZ $613D
C2/E762:	9C 70 2C   	STZ $2C70
C2/E765:	9C 72 2C   	STZ $2C72
C2/E768:	A9 C0      	LDA #$C0       ; -64
C2/E76A:	8D 6E 2C   	STA $2C6E
C2/E76D:	22 80 B8 C1	JSL $C1B880
C2/E771:	60         	RTS

; Prep character animation (run left or run right)

C2/E772:	22 21 FE C1	JSL $C1FE21
C2/E776:	A0 01 00   	LDY #$0001     ; 1
C2/E779:	C2 20      	REP #$20       ; 16-bit A
C2/E77B:	B7 8F      	LDA [$8F],Y
C2/E77D:	85 1E      	STA $1E
C2/E77F:	E6 8F      	INC $8F
C2/E781:	E6 8F      	INC $8F
C2/E783:	7B         	TDC
C2/E784:	E2 20      	SEP #$20       ; 8-bit A
C2/E786:	9C 6F 2C   	STZ $2C6F
C2/E789:	A9 0F      	LDA #$0F       ; 15
C2/E78B:	8D 70 2C   	STA $2C70
C2/E78E:	8D 72 2C   	STA $2C72
C2/E791:	8D 3D 61   	STA $613D
C2/E794:	9C 3E 61   	STZ $613E
C2/E797:	9C 71 2C   	STZ $2C71
C2/E79A:	9C 73 2C   	STZ $2C73
C2/E79D:	A9 00      	LDA #$00       ; Could've used TDC
C2/E79F:	8D 6E 2C   	STA $2C6E
C2/E7A2:	22 80 B8 C1	JSL $C1B880
C2/E7A6:	60         	RTS

C2/E7A7:	AD FB E9   	LDA $E9FB
C2/E7AA:	8D 71 2C   	STA $2C71
C2/E7AD:	8D 73 2C   	STA $2C73
C2/E7B0:	8D 3E 61   	STA $613E
C2/E7B3:	9C 3D 61   	STZ $613D
C2/E7B6:	9C 70 2C   	STZ $2C70
C2/E7B9:	9C 72 2C   	STZ $2C72
C2/E7BC:	20 E3 E6   	JSR $E6E3
C2/E7BF:	48         	PHA
C2/E7C0:	18         	CLC
C2/E7C1:	69 04      	ADC #$04       ; 4
C2/E7C3:	85 10      	STA $10
C2/E7C5:	09 80      	ORA #$80
C2/E7C7:	8D 6F 2C   	STA $2C6F
C2/E7CA:	8D 3F 61   	STA $613F
C2/E7CD:	A9 C0      	LDA #$C0
C2/E7CF:	8D 6E 2C   	STA $2C6E
C2/E7D2:	68         	PLA
C2/E7D3:	C2 20      	REP #$20       ; 16-bit A
C2/E7D5:	0A         	ASL
C2/E7D6:	0A         	ASL
C2/E7D7:	0A         	ASL
C2/E7D8:	0A         	ASL
C2/E7D9:	0A         	ASL
C2/E7DA:	0A         	ASL
C2/E7DB:	0A         	ASL
C2/E7DC:	AA         	TAX
C2/E7DD:	A9 01 01   	LDA #$0101
C2/E7E0:	85 22      	STA $22
C2/E7E2:	E6 8F      	INC $8F
C2/E7E4:	A7 8F      	LDA [$8F]
C2/E7E6:	85 24      	STA $24
C2/E7E8:	E6 8F      	INC $8F
C2/E7EA:	7B         	TDC
C2/E7EB:	E2 20      	SEP #$20       ; 8-bit A
C2/E7ED:	A5 10      	LDA $10
C2/E7EF:	09 80      	ORA #$80
C2/E7F1:	85 10      	STA $10        ; Could've used TSB...
C2/E7F3:	A9 C2      	LDA #$C2       ; -62
C2/E7F5:	85 26      	STA $26
C2/E7F7:	22 C0 B1 C1	JSL $C1B1C0
C2/E7FB:	60         	RTS

C2/E7FC:	22 43 FF C1	JSL $C1FF43    ; wipe/clean previous animation data [?]
C2/E800:	60         	RTS

C2/E801:	22 51 FF C1	JSL $C1FF51    ; execute previously setup animation
C2/E805:	60         	RTS

; TODO: Should 201E be set for "hide/kill" animations

C2/E806:	AD 1E 20   	LDA $201E      ; visible enemies
C2/E809:	8D FA E9   	STA $E9FA      ; save ^
C2/E80C:	A0 02 00   	LDY #$0002     ; third argument
C2/E80F:	B1 76      	LDA ($76),Y    ; enemies to hide/kill
C2/E811:	8D FB E9   	STA $E9FB      ; save ^
C2/E814:	49 FF      	EOR #$FF       ; enemies *not* to hide/kill
C2/E816:	85 10      	STA $10        ; save ^
C2/E818:	C8         	INY            ; fourth argument
C2/E819:	B1 76      	LDA ($76),Y    ; enemies to unhide/revive
C2/E81B:	8D FC E9   	STA $E9FC      ; save ^
C2/E81E:	AD 1E 20   	LDA $201E      ; visible enemies
C2/E821:	25 10      	AND $10        ; visible enemies staying visible
C2/E823:	0D FC E9   	ORA $E9FC      ; combine with enemies to unhide
C2/E826:	8D FD E9   	STA $E9FD      ; save ^
C2/E829:	AD FB E9   	LDA $E9FB      ; enemies to hide/kill
C2/E82C:	D0 1D      	BNE $E84B      ; exit if hiding/killing

C2/E82E:	AD FA E9   	LDA $E9FA      ; visible enemies
C2/E831:	49 FF      	EOR #$FF       ; hidden enemies
C2/E833:	85 10      	STA $10        ; save ^
C2/E835:	AD FC E9   	LDA $E9FC      ; enemies to unhide/revive
C2/E838:	25 10      	AND $10        ; remove any already visible
C2/E83A:	8D FC E9   	STA $E9FC      ; save valid unhide/revive targets
C2/E83D:	49 FF      	EOR #$FF       ; monsters not being unhidden
C2/E83F:	8D 91 61   	STA $6191      ; save ^
C2/E842:	AD FD E9   	LDA $E9FD      ; monsters visible after this animation
C2/E845:	8D 1E 20   	STA $201E      ; set visible enemies
C2/E848:	8D AB 61   	STA $61AB      ; save to buffer [?]
C2/E84B:	60         	RTS

; Data of some sort.
C2/E84C:	0C0B
C2/E84E:	0A09
C2/E850:	0807
C2/E852:	0607
C2/E854:	0403
C2/E856:	0202
C2/E858:	0202
C2/E85A:	0202
C2/E85C:	0202
C2/E85E:	0202
C2/E860:	0202
C2/E862:	0202
C2/E864:	0202
C2/E866:	0202
C2/E868:	0202
C2/E86A:	0202

C2/E86C:	0202
C2/E86E:	0202
C2/E870:	0202
C2/E872:	0202
C2/E874:	0202
C2/E876:	0202
C2/E878:	0202
C2/E87A:	0202
C2/E87C:	0202
C2/E87E:	0202
C2/E880:	0202
C2/E882:	0202
C2/E884:	0304
C2/E886:	0506
C2/E888:	0708
C2/E88A:	090A
C2/E88C:	0B0C

; Flutter Death Handling

C2/E88E:	9C B3 EC   	STZ $ECB3      ; start at animation segment zero
C2/E891:	A9 FF      	LDA #$FF       ; all monsters
C2/E893:	8D 91 61   	STA $6191      ; set "staying visible" enemies
C2/E896:	AD FA E9   	LDA $E9FA      ; reappearing enemies
C2/E899:	8D 1E 20   	STA $201E      ; save ^
C2/E89C:	AD B3 EC   	LDA $ECB3      ; animation segment
C2/E89F:	AA         	TAX            ; index it
C2/E8A0:	BF 4C E8 C2	LDA $C2E84C,X  ; length of time to wait
C2/E8A4:	22 B2 9B C1	JSL $C19BB2    ; wait for {X} frames
C2/E8A8:	AD FC E9   	LDA $E9FC      ; enemies to start unhiding
C2/E8AB:	8D 1E 20   	STA $201E      ; set only new unhiding to reappear [?]
C2/E8AE:	AD B3 EC   	LDA $ECB3      ; animation segment
C2/E8B1:	AA         	TAX            ; index it
C2/E8B2:	BF 6C E8 C2	LDA $C2E86C,X  ; length of time to wait
C2/E8B6:	22 B2 9B C1	JSL $C19BB2    ; wait for {X} frames
C2/E8BA:	EE B3 EC   	INC $ECB3      ; next segment
C2/E8BD:	AD B3 EC   	LDA $ECB3      ; animation segment
C2/E8C0:	C9 20      	CMP #$20       ; 32nd segment
C2/E8C2:	D0 D2      	BNE $E896      ; loop if not

C2/E8C4:	A9 FF      	LDA #$FF       ; all monsters
C2/E8C6:	8D 91 61   	STA $6191      ; set "staying visible" enemies
C2/E8C9:	AD 2F 2F   	LDA $2F2F      ; visible monsters
C2/E8CC:	8D 1E 20   	STA $201E      ; set ^
C2/E8CF:	6B         	RTL

C2/E8D0:	29 7F      	AND #$7F
C2/E8D2:	0A         	ASL
C2/E8D3:	AA         	TAX
C2/E8D4:	FC D8 E8   	JSR ($E8D8,X)
C2/E8D7:	6B         	RTL

; Pointers
C2/E8D8:	36F8
C2/E8DA:	20F8
C2/E8DC:	2BF8
C2/E8DE:	EFF7
C2/E8F0:	36F4
C2/E8E2:	12F8
C2/E8E4:	05F3
C2/E8E6:	20F8
C2/E8E8:	BFF2
C2/E8EA:	9CF4
C2/E8EC:	89F4
C2/E8EE:	09F8
C2/E8F0:	6BF4
C2/E8F2:	D6E9
C2/E8F4:	C7F7
C2/E8F6:	41F7
C2/E8F8:	09F8
C2/E8FA:	EDF6
C2/E8FC:	CAF4
C2/E8FE:	A1F7
C2/E900:	30F6
C2/E902:	8DF5
C2/E904:	63F7
C2/E906:	D5F6
C2/E908:	A4F6
C2/E90A:	7DF7
C2/E90C:	18F4
C2/E90E:	39F8
C2/E910:	3EF6
C2/E912:	CAF8
C2/E914:	92F3
C2/E916:	5DF3
C2/E918:	B5F3
C2/E91A:	0DF6
C2/E91C:	C1F5
C2/E91E:	A1F5
C2/E920:	B9F2
C2/E922:	C4F6
C2/E924:	3CF8
C2/E926:	47F8
C2/E928:	5BF6
C2/E92A:	51F3
C2/E92C:	E9F3
C2/E92E:	95F7
C2/E930:	D9F3
C2/E932:	9EF5
C2/E934:	F8F5
C2/E936:	D2F5
C2/E938:	A4F5
C2/E93A:	FBF3
C2/E93C:	99F2
C2/E93E:	89F2
C2/E940:	7BF2
C2/E942:	5DF2
C2/E944:	41F2
C2/E946:	31F2
C2/E948:	21F2
C2/E94A:	11F2
C2/E94C:	FAF1
C2/E94E:	95F1
C2/E950:	6BF1
C2/E952:	4DF1
C2/E954:	29F1
C2/E956:	19F1
C2/E958:	09F1
C2/E95A:	F9F0
C2/E95C:	DDF0
C2/E95E:	C1F0
C2/E960:	8EF0
C2/E962:	70F0
C2/E964:	20F0
C2/E966:	0FF0
C2/E968:	FEEF
C2/E96A:	E3EF
C2/E96C:	D2EF
C2/E96E:	7BEF
C2/E970:	67EF
C2/E972:	59EF
C2/E974:	4BEF
C2/E976:	48EF
C2/E978:	1FEF
C2/E97A:	1CEF
C2/E97C:	0AEF
C2/E97E:	F6EE
C2/E980:	DEEE
C2/E982:	BDEE
C2/E984:	ACEE
C2/E986:	A7EE
C2/E988:	99EE
C2/E98A:	30EE
C2/E98C:	8DEE
C2/E98E:	76EE
C2/E990:	0CEE
C2/E992:	FDED
C2/E994:	F5ED
C2/E996:	ACED
C2/E998:	A3ED
C2/E99A:	8EED
C2/E99C:	6EED
C2/E99E:	F6EC
C2/E9A0:	62ED
C2/E9A2:	52EC
C2/E9A4:	4BEC
C2/E9A6:	43EC
C2/E9A8:	36EC
C2/E9AA:	29EC
C2/E9AC:	1CEC
C2/E9AE:	FEEB
C2/E9B0:	EEEB
C2/E9B2:	E1EB
C2/E9B4:	C2EB
C2/E9B6:	BCEB
C2/E9B8:	97EB
C2/E9BA:	91EB
C2/E9BC:	2CEB
C2/E9BE:	87EB
C2/E9C0:	4FEB
C2/E9C2:	35EB
C2/E9C4:	1DEB
C2/E9C6:	CBEA
C2/E9C8:	BDEA
C2/E9CA:	A7EA
C2/E9CC:	88EA
C2/E9CE:	71EA
C2/E9D0:	65EA
C2/E9D2:	43EA
C2/E9D4:	D7E9

C2/E9D6:	60         	RTS            ; Unnecessary...

C2/E9D7:	EE AC 60   	INC $60AC
C2/E9DA:	7B         	TDC            ; A = 0
C2/E9DB:	AA         	TAX            ; X = 0
C2/E9DC:	A8         	TAY            ; Y = 0
C2/E9DD:	BD C6 2E   	LDA $2EC6,X
C2/E9E0:	C9 0D      	CMP #$0D       ; 13
C2/E9E2:	F0 0C      	BEQ $E9F0      ; +12
C2/E9E4:	C8         	INY
C2/E9E5:	8A         	TXA
C2/E9E6:	18         	CLC
C2/E9E7:	69 20      	ADC #$20       ; 32
C2/E9E9:	AA         	TAX
C2/E9EA:	E0 80 00   	CPX #$0080     ; 128
C2/E9ED:	D0 EE      	BNE $E9DD      ; -18
C2/E9EF:	60         	RTS

C2/E9F0:	84 10      	STY $10
C2/E9F2:	98         	TYA
C2/E9F3:	0A         	ASL
C2/E9F4:	A8         	TAY
C2/E9F5:	C2 20      	REP #$20       ; 16-bit A
C2/E9F7:	B9 33 80   	LDA $8033,Y
C2/E9FA:	38         	SEC
C2/E9FB:	E9 08 00   	SBC #$0008     ; 8
C2/E9FE:	85 14      	STA $14
C2/EA00:	B9 3B 80   	LDA $803B,Y
C2/EA03:	38         	SEC
C2/EA04:	E9 08 00   	SBC #$0008     ; 8
C2/EA07:	85 16      	STA $16
C2/EA09:	7B         	TDC            ; A = 0
C2/EA0A:	E2 20      	SEP #$20       ; 8-bit A
C2/EA0C:	7B         	TDC            ; What?! What the hell do you need another one for?!
C2/EA0D:	AA         	TAX            ; X = 0
C2/EA0E:	BD 38 6A   	LDA $6A38,X    ; Caster's ID in battle sprite listing...
C2/EA11:	9D 39 6A   	STA $6A39,X    ; ...is now target's ID
C2/EA14:	A5 10      	LDA $10
C2/EA16:	9D 38 6A   	STA $6A38,X
C2/EA19:	C2 20      	REP #$20       ; 16-bit A
C2/EA1B:	BD 7E 6F   	LDA $6F7E,X
C2/EA1E:	9D 82 6F   	STA $6F82,X    ; Original X position of spell animation
C2/EA21:	BD 80 6F   	LDA $6F80,X
C2/EA24:	9D 84 6F   	STA $6F84,X    ; Original Y position of spell animation
C2/EA27:	A5 14      	LDA $14
C2/EA29:	9D 7E 6F   	STA $6F7E,X
C2/EA2C:	A5 16      	LDA $16
C2/EA2E:	9D 80 6F   	STA $6F80,X
C2/EA31:	8A         	TXA
C2/EA32:	18         	CLC
C2/EA33:	69 80 00   	ADC #$0080     ; 128
C2/EA36:	AA         	TAX
C2/EA37:	7B         	TDC
C2/EA38:	E2 20      	SEP #$20       ; 8-bit A
C2/EA3A:	E0 00 05   	CPX #$0500     ; Loop 10 times
C2/EA3D:	D0 CF      	BNE $EA0E      ; -49
C2/EA3F:	EE EE E9   	INC $E9EE
C2/EA42:	60         	RTS

C2/EA43:	A9 05      	LDA #$05       ; 5
C2/EA45:	85 26      	STA $26
C2/EA47:	A9 02      	LDA #$02       ; LSR?
C2/EA49:	20 F8 F4   	JSR $F4F8
C2/EA4C:	A9 03      	LDA #$03       ; 3
C2/EA4E:	20 E6 F6   	JSR $F6E6
C2/EA51:	4C EB F9   	JMP $F9EB

C2/EA54:	AF 3F 21 00	LDA $00213F
C2/EA58:	AF 37 21 00	LDA $002137
C2/EA5C:	AF 3D 21 00	LDA $00213D
C2/EA60:	C9 A0      	CMP #$A0       ; 160
C2/EA62:	90 F0      	BCC $EA54      ; -16
C2/EA64:	60         	RTS

C2/EA65:	20 CA F8   	JSR $F8CA
C2/EA68:	AD 6F 89   	LDA $896F
C2/EA6B:	09 08      	ORA #$08
C2/EA6D:	8D 6F 89   	STA $896F
C2/EA70:	60         	RTS

C2/EA71:	20 54 EA   	JSR $EA54
C2/EA74:	AD 8D 89   	LDA $898D
C2/EA77:	29 FE      	AND #$FE
C2/EA79:	8D 8D 89   	STA $898D
C2/EA7C:	20 CA F8   	JSR $F8CA
C2/EA7F:	AD 6F 89   	LDA $896F
C2/EA82:	09 08      	ORA #$08
C2/EA84:	8D 6F 89   	STA $896F
C2/EA87:	60         	RTS

C2/EA88:	20 E9 F3   	JSR $F3E9
C2/EA8B:	A9 04      	LDA #$04       ; 4
C2/EA8D:	85 26      	STA $26
C2/EA8F:	A9 07      	LDA #$07       ; 7
C2/EA91:	20 F8 F4   	JSR $F4F8
C2/EA94:	A9 08      	LDA #$08       ; 8
C2/EA96:	20 E6 F6   	JSR $F6E6
C2/EA99:	EE AD 60   	INC $60AD
C2/EA9C:	60         	RTS

; Pointers (referencing monster palettes?)
C2/EA9D:	8201
C2/EA9F:	9101
C2/EAA1:	8701
C2/EAA3:	9301
C2/EAA5:	8401

C2/EAA7:	AD E7 E9   	LDA $E9E7      ; Animation sound effect
C2/EAAA:	0A         	ASL
C2/EAAB:	AA         	TAX
C2/EAAC:	C2 20      	REP #$20       ; 16-bit A
C2/EAAE:	BF 9D EA C2	LDA $C2EA9D,X
C2/EAB2:	AA         	TAX
C2/EAB3:	7B         	TDC            ; A = 0
C2/EAB4:	E2 20      	SEP #$20       ; 8-bit A
C2/EAB6:	22 52 24 C1	JSL $C12452
C2/EABA:	4C 70 FA   	JMP $FA70

C2/EABD:	A9 03      	LDA #$03       ; 3
C2/EABF:	85 26      	STA $26
C2/EAC1:	A9 03      	LDA #$03       ; This is needless
C2/EAC3:	20 F8 F4   	JSR $F4F8
C2/EAC6:	A9 04      	LDA #$04       ; 4
C2/EAC8:	4C E6 F6   	JMP $F6E6

C2/EACB:	9C 67 7B   	STZ $7B67
C2/EACE:	22 86 C3 C1	JSL $C1C386
C2/EAD2:	22 26 02 C1	JSL $C10226
C2/EAD6:	22 7E B0 C1	JSL $C1B07E
C2/EADA:	22 9E 9A C1	JSL $C19A9E
C2/EADE:	48         	PHA
C2/EADF:	AD 8D 89   	LDA $898D
C2/EAE2:	48         	PHA
C2/EAE3:	29 FE      	AND #$FE
C2/EAE5:	8D 8D 89   	STA $898D
C2/EAE8:	AD 6F 89   	LDA $896F
C2/EAEB:	29 E7      	AND #$E7
C2/EAED:	09 50      	ORA #$50
C2/EAEF:	8D 6F 89   	STA $896F
C2/EAF2:	22 55 1E C1	JSL $C11E55
C2/EAF6:	68         	PLA
C2/EAF7:	8D 8D 89   	STA $898D
C2/EAFA:	68         	PLA
C2/EAFB:	29 03      	AND #$03
C2/EAFD:	0A         	ASL
C2/EAFE:	0A         	ASL
C2/EAFF:	0A         	ASL
C2/EB00:	0A         	ASL
C2/EB01:	0A         	ASL
C2/EB02:	AA         	TAX
C2/EB03:	7B         	TDC            ; A = 0
C2/EB04:	A8         	TAY            ; Y = 0
C2/EB05:	BD 80 7F   	LDA $7F80,X
C2/EB08:	99 60 7E   	STA $7E60,Y
C2/EB0B:	C8         	INY
C2/EB0C:	E8         	INX
C2/EB0D:	C0 20 00   	CPY #$0020     ; 32
C2/EB10:	D0 F3      	BNE $EB05
C2/EB12:	AD 7D 62   	LDA $627D
C2/EB15:	29 7F      	AND #$7F
C2/EB17:	8D 7D 62   	STA $627D
C2/EB1A:	4C 0F FA   	JMP $FA0F

C2/EB1D:	20 4F FA   	JSR $FA4F
C2/EB20:	A9 3C      	LDA #$3C       ; 60
C2/EB22:	8F 23 21 00	STA $002123
C2/EB26:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/EB29:	4C 1B FA   	JMP $FA1B

C2/EB2C:	20 C1 F5   	JSR $F5C1
C2/EB2F:	9C AC 60   	STZ $60AC
C2/EB32:	4C 99 F2   	JMP $F299

C2/EB35:	20 2D F0   	JSR $F02D
C2/EB38:	A2 3F BE   	LDX #$BE3F     ; -16,833
C2/EB3B:	A0 00 08   	LDY #$0800     ; 2,048
C2/EB3E:	20 61 EC   	JSR $EC61
C2/EB41:	A9 03      	LDA #$03       ; 3
C2/EB43:	85 26      	STA $26
C2/EB45:	A9 02      	LDA #$02       ; DEC acceptable
C2/EB47:	20 F8 F4   	JSR $F4F8
C2/EB4A:	A9 03      	LDA #$03       ; 3
C2/EB4C:	4C E6 F6   	JMP $F6E6

C2/EB4F:	20 2D F0   	JSR $F02D
C2/EB52:	A2 8F 01   	LDX #$018F     ; 399
C2/EB55:	DA         	PHX
C2/EB56:	22 0A 24 C1	JSL $C1240A
C2/EB5A:	20 70 FA   	JSR $FA70
C2/EB5D:	22 C6 9E C1	JSL $C19EC6
C2/EB61:	FA         	PLX
C2/EB62:	22 80 24 C1	JSL $C12480
C2/EB66:	20 87 FA   	JSR $FA87
C2/EB69:	A2 9C 01   	LDX #$019C     ; 412
C2/EB6C:	22 80 24 C1	JSL $C12480
C2/EB70:	20 87 FA   	JSR $FA87
C2/EB73:	20 CA F1   	JSR $F1CA
C2/EB76:	20 4F FA   	JSR $FA4F
C2/EB79:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/EB7C:	A9 CC      	LDA #$CC       ; -52
C2/EB7E:	8F 24 21 00	STA $002124
C2/EB82:	A9 01      	LDA #$01       ; 1
C2/EB84:	4C E6 F6   	JMP $F6E6

C2/EB87:	20 47 F8   	JSR $F847
C2/EB8A:	7B         	TDC            ; A = 0
C2/EB8B:	EE AC 60   	INC $60AC
C2/EB8E:	4C 11 F0   	JMP $F011

C2/EB91:	20 EB F9   	JSR $F9EB
C2/EB94:	4C FE EE   	JMP $EEFE

C2/EB97:	20 C1 F5   	JSR $F5C1
C2/EB9A:	20 CA F8   	JSR $F8CA
C2/EB9D:	9C AC 60   	STZ $60AC
C2/EBA0:	22 A1 AA C1	JSL $C1AAA1
C2/EBA4:	A5 12      	LDA $12
C2/EBA6:	20 13      	BMI $EBBB      ; +19
C2/EBA8:	29 03      	AND #$03
C2/EBAA:	0A         	ASL
C2/EBAB:	0A         	ASL
C2/EBAC:	0A         	ASL
C2/EBAD:	0A         	ASL
C2/EBAE:	0A         	ASL
C2/EBAF:	AA         	TAX
C2/EBB0:	BD C1 2E   	LDA $2EC1,X
C2/EBB3:	10 06      	BPL $EBBB      ; +6
C2/EBB5:	9C 2E 6F   	STZ $6F2E
C2/EBB8:	9C 3E 6F   	STZ $6F3E
C2/EBBB:	60         	RTS

C2/EBBC:	20 0F F0   	JSR $F00F
C2/EBBF:	4C CA F8   	JMP $F8CA
C2/EBC2:	A2 9B 01   	LDX #$019B     ; 411
C2/EBC5:	22 80 24 C1	JSL $C12480
C2/EBC9:	7B         	TDC            ; A = 0
C2/EBCA:	AA         	TAX            ; X = 0
C2/EBCB:	BF 00 63 ED	LDA $ED6300,X  ; Battle/menu character sprite palette
C2/EBCF:	9D 60 7F   	STA $7F60,X
C2/EBD2:	9D 60 7D   	STA $7D60,X
C2/EBD5:	E8         	INX
C2/EBD6:	E0 20 00   	CPX #$0020     ; 32
C2/EBD9:	D0 F0      	BNE $EBCB      ; -16
C2/EBDB:	20 8B F9   	JSR $F98B
C2/EBDE:	4C 09 F8   	JMP $F809

C2/EBE1:	A2 94 01   	LDX #$0194     ; 404
C2/EBE4:	22 52 24 C1	JSL $C12452
C2/EBE8:	20 70 FA   	JSR $FA70
C2/EBEB:	4C EF F7   	JMP $F7EF
C2/EBEE:	A2 8A 01   	LDX #$018A     ; 394
C2/EBF1:	22 80 24 C1	JSL $C12480
C2/EBF5:	20 87 FA   	JSR $FA87
C2/EBF8:	20 C7 F9   	JSR $F9C7
C2/EBFB:	4C 09 F8   	JMP $F809

C2/EBFE:	20 2D F0   	JSR $F02D
C2/EC01:	A2 8C 01   	LDX #$018C     ; 396
C2/EC04:	DA         	PHX
C2/EC05:	22 00 24 C1	JSL $C12400
C2/EC09:	20 70 FA   	JSR $FA70
C2/EC0C:	22 C6 9E C1	JSL $C19EC6
C2/EC10:	FA         	PLX
C2/EC11:	22 80 24 C1	JSL $C12480
C2/EC15:	20 87 FA   	JSR $FA87
C2/EC18:	EE B0 62   	INC $62B0
C2/EC1B:	60         	RTS

C2/EC1C:	A2 90 01   	LDX #$0190     ; 400
C2/EC1F:	22 52 24 C1	JSL $C12452
C2/EC23:	20 70 FA   	JSR $FA70
C2/EC26:	4C 09 F8   	JMP $F809

C2/EC29:	A2 96 01   	LDX #$0196     ; 406
C2/EC2C:	22 52 24 C1	JSL $C12452
C2/EC30:	20 70 FA   	JSR $FA70
C2/EC33:	4C 90 F5   	JMP $F590

C2/EC36:	A2 88 01   	LDX #$0188     ; 392
C2/EC39:	22 52 24 C1	JSL $C12452
C2/EC3D:	20 70 FA   	JSR $FA70
C2/EC40:	4C 3E F6   	JMP $F63E

C2/EC43:	A9 08      	LDA #$08       ; 8
C2/EC45:	20 11 F0   	JSR $F011
C2/EC48:	4C D3 F9   	JMP $F9D3

C2/EC4B:	20 CA F8   	JSR $F8CA
C2/EC4E:	EE AC 60   	INC $60AC
C2/EC51:	60         	RTS

C2/EC52:	20 4F FA   	JSR $FA4F
C2/EC55:	A9 06      	LDA #$06       ; 6
C2/EC57:	8D 1B 96   	STA $961B      ; Set clip plane to a wide oval
C2/EC5A:	A9 CC      	LDA #$CC       ; -52
C2/EC5C:	8F 24 21 00	STA $002124
C2/EC60:	60         	RTS

C2/EC61:	DA         	PHX
C2/EC62:	5A         	PHY
C2/EC63:	A9 D8      	LDA #$D8       ; -40
C2/EC65:	85 F5      	STA $F5
C2/EC67:	A2 00 D0   	LDX #$D000     ; -12,288
C2/EC6A:	86 F3      	STX $F3
C2/EC6C:	A9 7E      	LDA #$7E       ; 126
C2/EC6E:	85 F8      	STA $F8
C2/EC70:	A2 3F AE   	LDX #$AE3F     ; -20,929
C2/EC73:	86 F6      	STX $F6
C2/EC75:	22 6D FF C2	JSL $C2FF6D
C2/EC79:	7A         	PLY
C2/EC7A:	FA         	PLX
C2/EC7B:	5A         	PHY
C2/EC7C:	9C F0 E9   	STZ $E9F0
C2/EC7F:	CE F0 E9   	DEC $E9F0
C2/EC82:	AD 8D 89   	LDA $898D
C2/EC85:	29 12      	AND #$12
C2/EC87:	8D 8D 89   	STA $898D
C2/EC8A:	A9 3F      	LDA #$3F       ; 63
C2/EC8C:	85 14      	STA $14
C2/EC8E:	A9 7E      	LDA #$7E       ; ASL acceptable
C2/EC90:	22 27 C0 C2	JSL $C2C027
C2/EC94:	DA         	PHX
C2/EC95:	5A         	PHY
C2/EC96:	A9 D8      	LDA #$D8
C2/EC98:	85 F5      	STA $F5
C2/EC9A:	A2 F2 DA   	LDX #$DAF2
C2/EC9D:	86 F3      	STX $F3
C2/EC9F:	A9 7E      	LDA #$7E
C2/ECA1:	85 F8      	STA $F8
C2/ECA3:	A2 3F AE   	LDX #$AE3F
C2/ECA6:	86 F6      	STX $F6
C2/ECA8:	22 6D FF C2	JSL $C2FF6D
C2/ECAC:	7A         	PLY
C2/ECAD:	FA         	PLX
C2/ECAE:	FA         	PLX
C2/ECAF:	8B         	PHB
C2/ECB0:	A9 7F      	LDA #$7F
C2/ECB2:	48         	PHA
C2/ECB3:	AB         	PLB            ; Data bank register now points to bank $7F
C2/ECB4:	A0 00 C4   	LDY #$C400
C2/ECB7:	84 10      	STY $10
C2/ECB9:	A9 20      	LDA #$20
C2/ECBB:	85 12      	STA $12
C2/ECBD:	7B         	TDC            ; A = 0
C2/ECBE:	A8         	TAY            ; Y = 0
C2/ECBF:	BF 3F AE 7E	LDA $7EAE3F,X
C2/ECC3:	91 10      	STA ($10),Y
C2/ECC5:	E8         	INX
C2/ECC6:	C8         	INY
C2/ECC7:	C8         	INY
C2/ECC8:	C0 40 00   	CPY #$0040     ; 64
C2/ECCB:	D0 F2      	BNE $ECBF      ; -14
C2/ECCD:	C2 20      	REP #$20       ; 16-bit A
C2/ECCF:	A5 10      	LDA $10
C2/ECD1:	18         	CLC
C2/ECD2:	69 00 01   	ADC #$0100     ; 256
C2/ECD5:	85 10      	STA $10
C2/ECD7:	7B         	TDC
C2/ECD8:	E2 20      	SEP #$20       ; 8-bit A
C2/ECDA:	C6 12      	DEC $12
C2/ECDC:	D0 DF      	BNE $ECBD      ; -33
C2/ECDE:	AB         	PLB
C2/ECDF:	A2 00 20   	LDX #$2000
C2/ECE2:	86 10      	STX $10
C2/ECE4:	A2 00 C4   	LDX #$C400
C2/ECE7:	A0 00 00   	LDY #$0000
C2/ECEA:	A9 7F      	LDA #$7F
C2/ECEC:	22 89 19 C1	JSL $C11989
C2/ECF0:	EE EE E9   	INC $E9EE
C2/ECF3:	4C 09 F8   	JMP $F809

C2/ECF6:	20 2D F0   	JSR $F02D
C2/ECF9:	A2 3F B6   	LDX #$B63F
C2/ECFC:	A0 00 00   	LDY #$0000
C2/ECFF:	20 61 EC   	JSR $EC61
C2/ED02:	C2 20      	REP #$20       ; 16-bit A
C2/ED04:	7B         	TDC            ; A = 0
C2/ED05:	AA         	TAX            ; X = 0
C2/ED06:	7B         	TDC            ; A = 0 already, but this is needed later
C2/ED07:	A8         	TAY            ; Y = 0
C2/ED08:	B9 4E 6F   	LDA $6F4E,Y
C2/ED0B:	9D 2E 6A   	STA $6A2E,X
C2/ED0E:	9D 3E 6A   	STA $6A3E,X
C2/ED11:	B9 9E 74   	LDA $749E,Y
C2/ED14:	9D 7E 6F   	STA $6F7E,X
C2/ED17:	9D 8E 6F   	STA $6F8E,X
C2/ED1A:	B9 EE 79   	LDA $79EE,Y
C2/ED1D:	9D CE 74   	STA $74CE,X    ; Animation X-offset
C2/ED20:	9D DE 74   	STA $74DE,X
C2/ED23:	E8         	INX
C2/ED24:	E8         	INX
C2/ED25:	C8         	INY
C2/ED26:	C8         	INY
C2/ED27:	C0 10 00   	CPY #$0010
C2/ED2A:	D0 DC      	BNE $ED08      ; -36
C2/ED2C:	8A         	TXA
C2/ED2D:	18         	CLC
C2/ED2E:	69 70 00   	ADC #$0070
C2/ED31:	AA         	TAX
C2/ED32:	E0 00 03   	CPX #$0300
C2/ED35:	D0 CF      	BNE $ED06      ; -49
C2/ED37:	7B         	TDC
C2/ED38:	E2 20      	SEP #$20       ; 8-bit A
C2/ED3A:	7B         	TDC            ; Inexcusable this time
C2/ED3B:	AA         	TAX            ; X = 0
C2/ED3C:	64 10      	STZ $10
C2/ED3E:	A5 10      	LDA $10
C2/ED40:	18         	CLC
C2/ED41:	69 06      	ADC #$06       ; 6
C2/ED43:	9D 35 6A   	STA $6A35,X
C2/ED46:	18         	CLC
C2/ED47:	69 06      	ADC #$06       ; 6
C2/ED49:	9D 45 6A   	STA $6A45,X
C2/ED4C:	85 10      	STA $10
C2/ED4E:	FE 36 6A   	INC $6A36,X
C2/ED51:	C2 20      	REP #$20       ; 16-bit A
C2/ED53:	8A         	TXA
C2/ED54:	18         	CLC
C2/ED55:	69 80 00   	ADC #$0080
C2/ED58:	AA         	TAX
C2/ED59:	7B         	TDC
C2/ED5A:	E2 20      	SEP #$20       ; 8-bit A
C2/ED5C:	E0 00 03   	CPX #$0300
C2/ED5F:	D0 DD      	BNE $ED3E      ; -35
C2/ED61:	60         	RTS

C2/ED62:	20 2D F0   	JSR $F02D
C2/ED65:	A2 3F AE   	LDX #$AE3F
C2/ED68:	A0 00 04   	LDY #$0400
C2/ED6B:	4C 61 EC   	JMP $EC61

C2/ED6E:	22 86 C3 C1	JSL $C1C386
C2/ED72:	9C 67 7B   	STZ $7B67
C2/ED75:	22 26 02 C1	JSL $C10226
C2/ED79:	22 F1 C3 C1	JSL $C1C3F1
C2/ED7D:	AD 6F 89   	LDA $896F
C2/ED80:	29 EF      	AND #$EF       ; TRB would've worked...
C2/ED82:	8D 6F 89   	STA $896F
C2/ED85:	22 9E 9A C1	JSL $C19A9E
C2/ED89:	A5 10      	LDA $10
C2/ED8B:	4C 22 F3   	JMP $F322

C2/ED8E:	20 67 F9   	JSR $F967
C2/ED91:	20 4F FA   	JSR $FA4F
C2/ED94:	A9 3C      	LDA #$3C
C2/ED96:	8F 23 21 00	STA $002123
C2/ED9A:	A9 CC      	LDA #$CC
C2/ED9C:	8F 24 41 00	STA $002124
C2/EDA0:	4C 09 F8   	JMP $F809

C2/EDA3:	20 4F FA   	JSR $FA4F
C2/EDA6:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/EDA9:	4C 09 F8   	JMP $F809

C2/EDAC:	7B         	TDC            ; A = 0
C2/EDAD:	AA         	TAX            ; X = 0
C2/EDAE:	A9 08      	LDA #$08
C2/EDB0:	85 10      	STA $10
C2/EDB2:	BF 11 C4 7F	LDA $7FC411,X
C2/EDB6:	29 E3      	AND #$E3       ; Clear bits 2-4
C2/EDB8:	09 10      	ORA #$10       ; Set bit 4
C2/EDBA:	9F 11 C4 7F	STA $7FC411,X
C2/EDBE:	BF A1 C4 7F	LDA $7FC4A1,X
C2/EDC2:	29 E3      	AND #$E3
C2/EDC4:	09 10      	ORA #$10
C2/EDC6:	9F A1 C4 7F	STA $7FC4A1,X
C2/EDCA:	E8         	INX
C2/EDCB:	E8         	INX
C2/EDCC:	C6 10      	DEC $10
C2/EDCE:	D0 E2      	BNE $EDB2      ; -30
C2/EDD0:	C2 20      	REP #$20       ; 16-bit A
C2/EDD2:	8A         	TXA
C2/EDD3:	18         	CLC
C2/EDD4:	69 10 00   	ADC #$0010
C2/EDD7:	AA         	TAX
C2/EDD8:	7B         	TDC
C2/EDD9:	E2 20      	SEP #$20       ; 8-bit A
C2/EDDB:	E0 A0 00   	CPX #$00A0
C2/EDDE:	D0 CE      	BNE $EDAE      ; -50
C2/EDE0:	20 CA F1   	JSR $F1CA
C2/EDE3:	A9 08      	LDA #$08
C2/EDE5:	8D 55 6F   	STA $6F55
C2/EDE8:	A9 10      	LDA #$10       ; ASL acceptable
C2/EDEA:	8D 65 6F   	STA $6F65
C2/EDED:	A9 18      	LDA #$18
C2/EDEF:	8D 75 6F   	STA $6F75
C2/EDF2:	4C C7 F9   	JMP $F9C7

C2/EDF5:	20 1B FA   	JSR $FA1B
C2/EDF8:	A9 04      	LDA #$04
C2/EDFA:	4C DA F6   	JMP $F6DA

C2/EDFD:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/EE00:	20 4F FA   	JSR $FA4F
C2/EE03:	A9 CC      	LDA #$CC
C2/EE05:	8F 24 21 00	STA $002124
C2/EE09:	4C C7 F9   	JMP $F9C7

C2/EE0C:	20 4F FA   	JSR $FA4F
C2/EE0F:	A9 3C      	LDA #$3C
C2/EE11:	8F 23 21 00	STA $002123
C2/EE15:	A2 20 01   	LDX #$0120
C2/EE18:	20 78 F1   	JSR $F178
C2/EE1B:	20 CA F1   	JSR $F1CA
C2/EE1E:	A9 08      	LDA #$08
C2/EE20:	8D 55 6F   	STA $6F55
C2/EE23:	A9 10      	LDA #$10       ; ASL acceptable
C2/EE25:	8D 65 6F   	STA $6F65
C2/EE28:	A9 18      	LDA #$18
C2/EE2A:	8D 75 6F   	STA $6F75
C2/EE2D:	4C 1B FA   	JMP $FA1B

; This function appears to make your party members face the same direction when one group of enemies are left in a pincer attack.
C2/EE30:	20 98 F0   	JSR $F098
C2/EE33:	AD 1F 20   	LDA $201F      ; Encounter type
C2/EE36:	C9 02      	CMP #$02       ; Pincer attack?
C2/EE38:	D0 2E      	BNE $EE68      ; Branch if not
C2/EE3A:	AD 1E 20   	LDA $201E      ; Drawn enemies
C2/EE3D:	2D AB 61   	AND $61AB      ; Visible enemies
C2/EE40:	2D AC 2E   	AND $2EAC      ; Something to do with right side or left side because Pincer attack means enemies on both
C2/EE43:	F0 03      	BEQ $EE48      ; If any bits left...
C2/EE45:	7B         	TDC            ; ...animation faces left
C2/EE46:	80 02      	BRA $EE4A      ; Otherwise...
C2/EE48:	A9 01      	LDA #$01       ; ...animation faces right
C2/EE4A:	8D 87 6F   	STA $6F87      ; Animation direction
C2/EE4D:	8D 07 70   	STA $7007      ; Set for entire party
C2/EE50:	8D 87 70   	STA $7087
C2/EE53:	8D 07 71   	STA $7107
C2/EE56:	6A         	ROR
C2/EE57:	6A         	ROR
C2/EE58:	6A         	ROR
C2/EE59:	29 40      	AND #$40       ; Bit 6, originally bit 1
C2/EE5B:	8D BE 61   	STA $61BE      ; Character face direction
C2/EE5E:	8D DE 61   	STA $61DE      ; Set for entire party
C2/EE61:	8D FE 61   	STA $61FE
C2/EE64:	8D 1E 62   	STA $621E
C2/EE67:	60         	RTS

; This function makes the attack animations for party members 3 and 4 face right in a side attack.
C2/EE68:	AD 1F 20   	LDA $201F      ; Encounter type
C2/EE6B:	C9 03      	CMP #$03       ; Side attack?
C2/EE6D:	D0 06      	BNE $EE75      ; Exit if not
C2/EE6F:	EE 87 70   	INC $7087      ; Party member 3's attacks face right
C2/EE72:	EE 07 71   	INC $7107      ; Same for member 4
C2/EE75:	60         	RTS

C2/EE76:	20 CA F1   	JSR $F1CA
C2/EE79:	A9 03      	LDA #$03
C2/EE7B:	20 E6 F6   	JSR $F6E6
C2/EE7E:	20 4F FA   	JSR $FA4F
C2/EE81:	A9 3C      	LDA #$3C
C2/EE83:	8F 23 21 00	STA $002123
C2/EE87:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/EE8A:	4C 1B FA   	JMP $FA1B

C2/EE8D:	20 C7 F7   	JSR $F7C7
C2/EE90:	20 1B FA   	JSR $FA1B
C2/EE93:	A9 08      	LDA #$08
C2/EE95:	8D 1B 96   	STA $961B      ; Set clip plane to wavy out
C2/EE98:	60         	RTS

C2/EE99:	20 CA F8   	JSR $F8CA
C2/EE9C:	AD 6F 89   	LDA $896F
C2/EE9F:	09 08      	ORA #$08       ; TSB would've worked...
C2/EEA1:	8D 6F 89   	STA $896F
C2/EEA4:	4C 33 FA   	JMP $FA33

C2/EEA7:	A9 10      	LDA #$10
C2/EEA9:	4C 11 F0   	JMP $F011

C2/EEAC:	A9 07      	LDA #$07
C2/EEAE:	85 26      	STA $26
C2/EEB0:	A9 02      	LDA #$02
C2/EEB2:	20 F8 F4   	JSR $F4F8
C2/EEB5:	A9 03      	LDA #$03       ; INC acceptable
C2/EEB7:	20 E6 F6   	JSR $F6E6
C2/EEBA:	4C 1B FA   	JMP $FA1B

C2/EEBD:	20 CA F8   	JSR $F8CA
C2/EEC0:	20 4F FA   	JSR $FA4F
C2/EEC3:	A9 CC      	LDA #$CC
C2/EEC5:	8F 24 21 00	STA $002124
C2/EEC9:	A9 03      	LDA #$03
C2/EECB:	8D 1B 96   	STA $961B      ; Set clip plane to a pillar
C2/EECE:	AD 6F 89   	LDA $896F
C2/EED1:	09 08      	ORA #$08       ; TSB would've worked...
C2/EED3:	8D 6F 89   	STA $896F
C2/EED6:	A9 02      	LDA #$02
C2/EED8:	20 FE EE   	JSR $EEFE      ; Why not JSR $EEFC?
C2/EEDB:	4C 33 FA   	JMP $FA33

C2/EEDE:	20 73 F9   	JSR $F973
C2/EEE1:	20 4F FA   	JSR $FA4F
C2/EEE4:	A9 CC      	LDA #$CC
C2/EEE6:	8F 24 21 00	STA $002124
C2/EEEA:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/EEED:	AD 6F 89   	LDA $896F
C2/EEF0:	29 EF      	AND #$EF       ; TRB would've worked...
C2/EEF2:	8D 6F 89   	STA $896F
C2/EEF5:	60         	RTS

C2/EEF6:	20 D3 F9   	JSR $F9D3
C2/EEF9:	EE AC 60   	INC $60AC
C2/EEFC:	A9 02      	LDA #$02
C2/EEFE:	85 26      	STA $26
C2/EF00:	A9 05      	LDA #$05
C2/EF02:	20 F8 F4   	JSR $F4F8
C2/EF05:	A9 06      	LDA #$06       ; INC acceptable
C2/EF07:	4C E6 F6   	JMP $F6E6

C2/EF0A:	20 1B FA   	JSR $FA1B
C2/EF0D:	20 4F FA   	JSR $FA4F
C2/EF10:	A9 3C      	LDA #$3C
C2/EF12:	8F 23 21 00	STA $002123
C2/EF16:	A9 01      	LDA #$01
C2/EF18:	8D 1B 96   	STA $961B      ; Set clip plane to a circle
C2/EF1B:	60         	RTS

C2/EF1C:	4C C7 F9   	JMP $F9C7      ; Sigh...

C2/EF1F:	20 8B F9   	JSR $F98B
C2/EF22:	7B         	TDC
C2/EF23:	AA         	TAX
C2/EF24:	BF 01 C4 7F	LDA $7FC401,X
C2/EF28:	29 DF      	AND #$DF
C2/EF2A:	9F 01 C4 7F	STA $7FC401,X
C2/EF2E:	E8         	INX
C2/EF2F:	E8         	INX
C2/EF30:	E0 40 00   	CPX #$0040
C2/EF33:	D0 EF      	BNE $EF24      ; -17
C2/EF35:	22 86 C3 C1	JSL $C1C386
C2/EF39:	20 4F FA   	JSR $FA4F
C2/EF3C:	A9 3C      	LDA #$3C
C2/EF3E:	8F 23 21 00	STA $002123
C2/EF42:	A9 06      	LDA #$06
C2/EF44:	8D 1B 96   	STA $961B      ; Set clip plane to a wide oval
C2/EF47:	60         	RTS

C2/EF48:	4C EB F9   	JMP $F9EB

C2/EF4B:	EE 99 00   	INC $0099      ; Not INC $99?
C2/EF4E:	EE AD 60   	INC $60AD
C2/EF51:	20 C7 F9   	JSR $F9C7
C2/EF54:	A9 08      	LDA #$08
C2/EF56:	4C 5B EF   	JMP $EF5B      ; BRA would've worked...

C2/EF59:	A9 10      	LDA #$10
C2/EF5B:	85 26      	STA $26
C2/EF5D:	A9 02      	LDA #$02
C2/EF5F:	20 F8 F4   	JSR $F4F8
C2/EF62:	A9 03      	LDA #$03
C2/EF64:	4C E6 F6   	JMP $F6E6

C2/EF67:	20 63 F7   	JSR $F763
C2/EF6A:	A9 06      	LDA #$06
C2/EF6C:	85 26      	STA $26
C2/EF6E:	A9 07      	LDA #$07       ; INC acceptable
C2/EF70:	20 F8 F4   	JSR $F4F8
C2/EF73:	A9 08      	LDA #$08
C2/EF75:	20 E6 F6   	JSR $F6E6
C2/EF78:	4C 27 FA   	JMP $FA27

C2/EF7B:	20 D2 EF   	JSR $EFD2
C2/EF7E:	22 9E 9A C1	JSL $C19A9E
C2/EF82:	7B         	TDC            ; A = 0
C2/EF83:	AA         	TAX            ; X = 0
C2/EF84:	A5 10      	LDA $10
C2/EF86:	0A         	ASL
C2/EF87:	0A         	ASL
C2/EF88:	85 12      	STA $12
C2/EF8A:	BF 00 C4 7F	LDA $7FC400,X
C2/EF8E:	C9 EE      	CMP #$EE
C2/EF90:	F0 1F      	BEQ $EFB1      ; +31
C2/EF92:	18         	CLC
C2/EF93:	65 12      	ADC $12
C2/EF95:	9F 00 C4 7F	STA $7FC400,X
C2/EF99:	9F 00 C6 7F	STA $7FC600,X
C2/EF9D:	BF 01 C4 7F	LDA $7FC401,X
C2/EFA1:	09 02      	ORA #$02
C2/EFA3:	9F 01 C4 7F	STA $7FC401,X
C2/EFA7:	BF 01 C6 7F	LDA $7FC601,X
C2/EFAB:	09 02      	ORA #$02
C2/EFAD:	9F 01 C6 7F	STA $7FC601,X
C2/EFB1:	E8         	INX
C2/EFB2:	E8         	INX
C2/EFB3:	E0 40 00   	CPX #$0040
C2/EFB6:	D0 D2      	BNE $EF8A      ; -46
C2/EFB8:	A5 10      	LDA $10
C2/EFBA:	0A         	ASL
C2/EFBB:	0A         	ASL
C2/EFBC:	0A         	ASL
C2/EFBD:	0A         	ASL
C2/EFBE:	0A         	ASL
C2/EFBF:	AA         	TAX
C2/EFC0:	7B         	TDC            ; A = 0
C2/EFC1:	A8         	TAY            ; Y = 0
C2/EFC2:	BD 80 7F   	LDA $7F80,X    ; Copy from RAM palette...
C2/EFC5:	99 60 7E   	STA $7E60,Y    ; ...to RAM palette 3
C2/EFC8:	E8         	INX
C2/EFC9:	C8         	INY
C2/EFCA:	C0 20 00   	CPY #$0020
C2/EFCD:	D0 F3      	BNE $EFC2      ; -13
C2/EFCF:	4C D3 F9   	JMP $F9D3

C2/EFD2:	20 EB F9   	JSR $F9EB
C2/EFD5:	A9 01      	LDA #$01
C2/EFD7:	85 26      	STA $26
C2/EFD9:	A9 07      	LDA #$07
C2/EFDB:	20 F8 F4   	JSR $F4F8
C2/EFDE:	A9 08      	LDA #$08       ; INC acceptable
C2/EFE0:	4C E6 F6   	JMP $F6E6

C2/EFE3:	20 8B F9   	JSR $F98B
C2/EFE6:	7B         	TDC            ; A = 0
C2/EFE7:	AA         	TAX            ; X = 0
C2/EFE8:	BF 01 C4 7F	LDA $7FC401,X
C2/EFEC:	29 DF      	AND #$DF
C2/EFEE:	9F 01 C4 7F	STA $7FC401,X
C2/EFF2:	E8         	INX
C2/EFF3:	E8         	INX
C2/EFF4:	E0 20 00   	CPX #$0020
C2/EFF7:	D0 EF      	BNE $EFE8      ; -17
C2/EFF9:	22 86 C3 C1	JSL $C1C386
C2/EFFD:	60         	RTS

C2/EFFE:	A9 10      	LDA #$10
C2/F000:	20 6F F6   	JSR $F66F
C2/F003:	22 86 C3 C1	JSL $C1C386
C2/F007:	A2 60 00   	LDX #$0060
C2/F00A:	22 A7 C3 C1	JSL $C1C3A7
C2/F00E:	60         	RTS

C2/F00F:	A9 03      	LDA #$03
C2/F011:	85 26      	STA $26
C2/F013:	A9 03      	LDA #$03       ; NOT unnecessary!
C2/F015:	20 F8 F4   	JSR $F4F8
C2/F018:	A9 04      	LDA #$04       ; INC acceptable
C2/F01A:	20 E6 F6   	JSR $F6E6
C2/F01D:	4C EB F9   	JMP $F9EB

C2/F020:	A2 98 01   	LDX #$0198
C2/F023:	22 52 24 C1	JSL $C12452
C2/F027:	20 70 FA   	JSR $FA70
C2/F02A:	4C 09 F8   	JMP $F809

C2/F02D:	8B         	PHB
C2/F02E:	A9 7F      	LDA #$7F
C2/F030:	48         	PHA
C2/F031:	AB         	PLB            ; Data bank register now points to bank $7F
C2/F032:	7B         	TDC            ; A = 0
C2/F033:	AA         	TAX            ; X = 0
C2/F034:	C2 20      	REP #$20       ; 16-bit A
C2/F036:	A9 3F 00   	LDA #$003F
C2/F039:	9D 00 C4   	STA $C400,X
C2/F03C:	9D 00 CC   	STA $CC00,X
C2/F03F:	9D 00 D4   	STA $D400,X
C2/F042:	9D 00 DC   	STA $DC00,X
C2/F045:	E8         	INX
C2/F046:	E8         	INX
C2/F047:	E0 00 08   	CPX #$0800
C2/F04A:	D0 ED      	BNE $F039      ; -19
C2/F04C:	7B         	TDC            ; Don't really think this is necessary, it's used to clear the high byte before switching to 8-bit A, but it's already clear
C2/F04D:	E2 20      	SEP #$20       ; 8-bit A
C2/F04F:	AB         	PLB
C2/F050:	AD 8D 89   	LDA $898D
C2/F053:	29 FE      	AND #$FE       ; TRB would've worked...
C2/F055:	8D 8D 89   	STA $898D
C2/F058:	A2 00 01   	LDX #$0100
C2/F05B:	8E C4 E9   	STX $E9C4
C2/F05E:	8E CA E9   	STX $E9CA
C2/F061:	7B         	TDC            ; A = 0
C2/F062:	AA         	TAX            ; X = 0
C2/F063:	8E C6 E9   	STX $E9C6
C2/F066:	8E C8 E9   	STX $E9C8
C2/F069:	8E CC E9   	STX $E9CC
C2/F06C:	8E CE E9   	STX $E9CE
C2/F06F:	60         	RTS

C2/F070:	20 2D F0   	JSR $F02D
C2/F073:	A2 8B 01   	LDX #$018B
C2/F076:	DA         	PHX
C2/F077:	22 00 24 C1	JSL $C12400
C2/F07B:	20 70 FA   	JSR $FA70
C2/F07E:	22 C6 9E C1	JSL $C19EC6
C2/F082:	FA         	PLX
C2/F083:	22 80 24 C1	JSL $C12480
C2/F087:	20 87 FA   	JSR $FA87
C2/F08A:	EE B0 62   	INC $62B0
C2/F08D:	60         	RTS

C2/F08E:	A2 89 01   	LDX #$0189
C2/F091:	22 52 24 C1	JSL $C12452
C2/F095:	20 70 FA   	JSR $FA70
C2/F098:	7B         	TDC            ; A = 0
C2/F099:	A8         	TAY            ; Y = 0
C2/F09A:	AA         	TAX            ; X = 0
C2/F09B:	BD 39 6A   	LDA $6A39,X    ; Caster ID = target ID
C2/F09E:	9D 38 6A   	STA $6A38,X
C2/F0A1:	C2 20      	REP #$20       ; 16-bit A
C2/F0A3:	BD 82 6F   	LDA $6F82,X    ; Animation X-origin
C2/F0A6:	9D 7E 6F   	STA $6F7E,X
C2/F0A9:	BD 84 6F   	LDA $6F84,X    ; Animation Y-origin
C2/F0AC:	9D 80 6F   	STA $6F80,X
C2/F0AF:	8A         	TXA
C2/F0B0:	18         	CLC
C2/F0B1:	69 80 00   	ADC #$0080
C2/F0B4:	AA         	TAX
C2/F0B5:	7B         	TDC
C2/F0B6:	E2 20      	SEP #$20
C2/F0B8:	C8         	INY
C2/F0B9:	E0 00 02   	CPX #$0200
C2/F0BC:	D0 DD      	BNE $F09B      ; -35
C2/F0BE:	4C 09 F8   	JMP $F809

C2/F0C1:	A2 86 01   	LDX #$0186
C2/F0C4:	22 80 24 C1	JSL $C12480
C2/F0C8:	20 87 FA   	JSR $FA87
C2/F0CB:	20 1B FA   	JSR $FA1B
C2/F0CE:	20 4F FA   	JSR $FA4F
C2/F0D1:	A9 CC      	LDA #$CC
C2/F0D3:	8F 24 21 00	STA $002124
C2/F0D7:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F0DA:	4C 09 F8   	JMP $F809

C2/F0DD:	A9 02      	LDA #$02
C2/F0DF:	20 6F F6   	JSR $F66F
C2/F0E2:	A2 8D 01   	LDX #$018D
C2/F0E5:	22 52 24 C1	JSL $C12452
C2/F0E9:	20 70 FA   	JSR $FA70
C2/F0EC:	20 4F FA   	JSR $FA4F      ; Well, this part doesn't seem familiar at all...
C2/F0EF:	A9 CC      	LDA #$CC
C2/F0F1:	8F 24 21 00	STA $002124
C2/F0F5:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F0F8:	60         	RTS

C2/F0F9:	A2 99 01   	LDX #$0199
C2/F0FC:	22 80 24 C1	JSL $C12480
C2/F100:	20 87 FA   	JSR $FA87
C2/F103:	20 1B FA   	JSR $FA1B
C2/F106:	4C 09 F8   	JMP $F809

C2/F109:	A2 95 01   	LDX #$0195
C2/F10C:	22 52 24 C1	JSL $C12452
C2/F110:	20 70 FA   	JSR $FA70
C2/F113:	20 3E F6   	JSR $F63E
C2/F116:	4C 33 FA   	JMP $FA33

C2/F119:	A2 9A 01   	LDX #$019A
C2/F11C:	22 80 24 C1	JSL $C12480
C2/F120:	20 87 FA   	JSR $FA87
C2/F123:	20 A3 F9   	JSR $F9A3
C2/F126:	4C 09 F8   	JMP $F809

C2/F129:	A2 97 01   	LDX #$0197
C2/F12C:	22 80 24 C1	JSL $C12480
C2/F130:	20 87 FA   	JSR $FA87
C2/F133:	20 97 F9   	JSR $F997
C2/F136:	20 4F FA   	JSR $FA4F
C2/F139:	A9 3C      	LDA #$3C
C2/F13B:	8F 23 21 00	STA $002123
C2/F13F:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F142:	AD 6F 89   	LDA $896F
C2/F145:	29 F7      	AND #$F7       ; TRB would've worked...
C2/F147:	8D 6F 89   	STA $896F
C2/F14A:	4C 09 F8   	JMP $F809

C2/F14D:	A2 91 01   	LDX #$0191
C2/F150:	22 80 24 C1	JSL $C12480
C2/F154:	20 87 FA   	JSR $FA87
C2/F157:	20 27 FA   	JSR $FA27
C2/F15A:	20 4F FA   	JSR $FA4F
C2/F15D:	A9 3C      	LDA #$3C
C2/F15F:	8F 23 21 00	STA $002123
C2/F163:	A9 04      	LDA #$04
C2/F165:	8D 1B 96   	STA $961B      ; Set clip plane to a tall oval
C2/F168:	4C 09 F8   	JMP $F809

C2/F16B:	A2 93 01   	LDX #$0193
C2/F16E:	22 80 24 C1	JSL $C12480
C2/F172:	20 87 FA   	JSR $FA87
C2/F175:	4C 09 F8   	JMP $F809

C2/F178:	86 10      	STX $10
C2/F17A:	7B         	TDC            ; A = 0
C2/F17B:	AA         	TAX            ; X = 0
C2/F17C:	C2 20      	REP #$20       ; 16-bit A
C2/F17E:	7B         	TDC            ; Why do you need this again?!
C2/F17F:	AA         	TAX            ; ...
C2/F180:	A9 08 F7   	LDA #$F708
C2/F183:	9D 21 9A   	STA $9A21,X
C2/F186:	E8         	INX
C2/F187:	E8         	INX
C2/F188:	E8         	INX
C2/F189:	E8         	INX
C2/F18A:	E4 10      	CPX $10
C2/F18C:	D0 F5      	BNE $F183      ; -11
C2/F18E:	7B         	TDC            ; A = 0
C2/F18F:	E2 20      	SEP #$20
C2/F191:	EE 97 61   	INC $6197
C2/F194:	60         	RTS

C2/F195:	A2 8E 01   	LDX #$018E
C2/F198:	22 52 24 C1	JSL $C12452
C2/F19C:	20 70 FA   	JSR $FA70
C2/F19F:	20 0F FA   	JSR $FA0F
C2/F1A2:	22 86 C3 C1	JSL $C1C386
C2/F1A6:	A2 81 00   	LDX #$0081
C2/F1A9:	22 A7 C3 C1	JSL $C1C3A7
C2/F1AD:	20 4F FA   	JSR $FA4F
C2/F1B0:	A9 3C      	LDA #$3C
C2/F1B2:	8F 23 21 00	STA $002123
C2/F1B6:	A2 00 02   	LDX #$0200
C2/F1B9:	20 78 F1   	JSR $F178
C2/F1BC:	20 CA F1   	JSR $F1CA
C2/F1BF:	AD 6F 89   	LDA $896F
C2/F1C2:	29 F7      	AND #$F7       ; TRB would've worked...
C2/F1C4:	8D 6F 89   	STA $896F
C2/F1C7:	4C 09 F8   	JMP $F809

C2/F1CA:	9C 56 6F   	STZ $6F56
C2/F1CD:	A2 20 05   	LDX #$0520
C2/F1D0:	BD 2E 6A   	LDA $6A2E,X
C2/F1D3:	9D 3E 6A   	STA $6A3E,X
C2/F1D6:	9D 4E 6A   	STA $6A4E,X
C2/F1D9:	BD 7E 6F   	LDA $6F7E,X
C2/F1DC:	9D 8E 6F   	STA $6F8E,X
C2/F1DF:	9D 9E 6F   	STA $6F9E,X
C2/F1E2:	BD CE 74   	LDA $74CE,X    ; Animation X-offset
C2/F1E5:	9D DE 74   	STA $74DE,X
C2/F1E8:	9D EE 74   	STA $74EE,X
C2/F1EB:	E8         	INX
C2/F1EC:	E0 30 05   	CPX #$0530
C2/F1EF:	D0 DF      	BNE $F1D0      ; -33
C2/F1F1:	EE 66 6F   	INC $6F66
C2/F1F4:	A9 02      	LDA #$02
C2/F1F6:	8D 76 6F   	STA $6F76
C2/F1F9:	60         	RTS

C2/F1FA:	9C AD 62   	STZ $62AD
C2/F1FD:	9C AE 62   	STZ $62AE
C2/F200:	20 6D F6   	JSR $F66D
C2/F203:	A2 83 01   	LDX #$0183
C2/F206:	22 52 24 C1	JSL $C12452
C2/F20A:	20 70 FA   	JSR $FA70
C2/F20D:	20 03 FA   	JSR $FA03      ; Why not JMP?
C2/F210:	60         	RTS

C2/F211:	A2 82 01   	LDX #$0182
C2/F214:	22 80 24 C1	JSL $C12480
C2/F218:	20 87 FA   	JSR $FA87
C2/F21B:	20 C7 F9   	JSR $F9C7
C2/F21E:	4C 09 F8   	JMP $F809

C2/F221:	A2 80 01   	LDX #$0180
C2/F224:	22 80 24 C1	JSL $C12480
C2/F228:	20 87 FA   	JSR $FA87
C2/F22B:	20 EB F9   	JSR $F9EB
C2/F22E:	4C 09 F8   	JMP $F809

C2/F231:	A2 92 01   	LDX #$0192
C2/F234:	22 52 24 C1	JSL $C12452
C2/F238:	20 70 FA   	JSR $FA70
C2/F23B:	20 EB F9   	JSR $F9EB
C2/F23E:	4C 09 F8   	JMP $F809

C2/F241:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F244:	20 4F FA   	JSR $FA4F
C2/F247:	A9 CC      	LDA #$CC
C2/F249:	8F 24 21 00	STA $002124
C2/F24D:	A2 87 01   	LDX #$0187
C2/F250:	22 80 24 C1	JSL $C12480
C2/F254:	20 87 FA   	JSR $FA87
C2/F257:	20 1B FA   	JSR $FA1B
C2/F25A:	4C 09 F8   	JMP $F809

C2/F25D:	A9 06      	LDA #$06
C2/F25F:	8D 1B 96   	STA $961B      ; Set clip plane to a wide oval
C2/F262:	20 4F FA   	JSR $FA4F
C2/F265:	A9 3C      	LDA #$3C
C2/F267:	8F 23 21 00	STA $002123
C2/F26B:	A2 84 01   	LDX #$0184
C2/F26E:	22 80 24 C1	JSL $C12480
C2/F272:	20 87 FA   	JSR $FA87
C2/F275:	20 A3 F9   	JSR $F9A3
C2/F278:	4C 09 F8   	JMP $F809

C2/F27B:	A2 85 01   	LDX #$0185
C2/F27E:	22 80 24 C1	JSL $C12480
C2/F282:	20 87 FA   	JSR $FA87
C2/F285:	EE B0 62   	INC $62B0
C2/F288:	60         	RTS

C2/F289:	A2 81 01   	LDX #$0181
C2/F28C:	22 80 24 C1	JSL $C12480
C2/F290:	20 87 FA   	JSR $FA87
C2/F293:	20 27 FA   	JSR $FA27
C2/F296:	4C 09 F8   	JMP $F809

C2/F299:	20 AF F9   	JSR $F9AF
C2/F29C:	20 4F FA   	JSR $FA4F
C2/F29F:	A9 3C      	LDA #$3C
C2/F2A1:	8F 23 21 00	STA $002123
C2/F2A5:	A9 CC      	LDA #$CC
C2/F2A7:	8F 24 21 00	STA $002124
C2/F2AB:	A9 07      	LDA #$07
C2/F2AD:	8D 1B 96   	STA $961B      ; Set clip plane to dome
C2/F2B0:	AD 6F 89   	LDA $896F
C2/F2B3:	29 F7      	AND #$F7       ; TRB would've worked...
C2/F2B5:	8D 6F 89   	STA $896F
C2/F2B8:	60         	RTS

C2/F2B9:	20 30 F6   	JSR $F630
C2/F2BC:	4C CA F8   	JMP $F8CA

C2/F2BF:	20 CA F8   	JSR $F8CA
C2/F2C2:	A2 02 84   	LDX #$8402
C2/F2C5:	86 10      	STX $10
C2/F2C7:	A9 13      	LDA #$13
C2/F2C9:	22 00 B0 C1	JSL $C1B000
C2/F2CD:	20 4F FA   	JSR $FA4F
C2/F2D0:	A9 CC      	LDA #$CC
C2/F2D2:	8F 24 21 00	STA $002124
C2/F2D6:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F2D9:	22 7E B0 C1	JSL $C1B07E
C2/F2DD:	AD 6F 89   	LDA $896F
C2/F2E0:	09 48      	ORA #$48       ; TSB would've worked...
C2/F2E2:	8D 6F 89   	STA $896F
C2/F2E5:	7B         	TDC            ; A = 0
C2/F2E6:	AA         	TAX            ; X = 0
C2/F2E7:	8E F5 4A   	STX $4AF5      ; Battle info window text X-offset
C2/F2EA:	8E F7 4A   	STX $4AF7      ; " " " " Y-offset
C2/F2ED:	EE AD 60   	INC $60AD
C2/F2F0:	60         	RTS

C2/F2F1:	22 9E 9A C1	JSL $C19A9E
C2/F2F5:	A5 10      	LDA $10
C2/F2F7:	30 0B      	BMI $F304      ; Branch if entity is an enemy
C2/F2F9:	0A         	ASL
C2/F2FA:	0A         	ASL
C2/F2FB:	0A         	ASL
C2/F2FC:	0A         	ASL
C2/F2FD:	0A         	ASL
C2/F2FE:	A8         	TAY
C2/F2FF:	A9 30      	LDA #$30
C2/F301:	99 BD 61   	STA $61BD,Y    ; Draw character in correct orientation
C2/F304:	60         	RTS

C2/F305:	22 86 C3 C1	JSL $C1C386
C2/F309:	9C 67 7B   	STZ $7B67
C2/F30C:	22 26 02 C1	JSL $C10226
C2/F310:	22 F1 C3 C1	JSL $C1C3F1
C2/F314:	AD 6F 89   	LDA $896F
C2/F317:	29 EF      	AND #$EF       ; Seriously, what do you have against TRB and TSB?!
C2/F319:	8D 6F 89   	STA $896F
C2/F31C:	22 A1 AA C1	JSL $C1AAA1
C2/F320:	A5 12      	LDA $12
C2/F322:	29 7F      	AND #$7F
C2/F324:	38         	SEC
C2/F325:	E9 04      	SBC #$04
C2/F327:	20 9E FA   	JSR $FA9E
C2/F32A:	48         	PHA
C2/F32B:	22 5F 1E C1	JSL $C11E5F
C2/F32F:	20 F1 F2   	JSR $F2F1
C2/F332:	22 22 1F C1	JSL $C11F22
C2/F336:	22 26 02 C1	JSL $C10226
C2/F33A:	68         	PLA
C2/F33B:	49 FF      	EOR #$FF
C2/F33D:	8D AB 60   	STA $60AB
C2/F340:	AD 7D 62   	LDA $627D
C2/F343:	29 7F      	AND #$7F       ; TRB... TRB...
C2/F345:	8D 7D 62   	STA $627D
C2/F348:	A9 02      	LDA #$02
C2/F34A:	8D 0E 7B   	STA $7B0E
C2/F34D:	8D 0F 7B   	STA $7B0F
C2/F350:	60         	RTS

C2/F351:	20 5D F3   	JSR $F35D
C2/F354:	A9 06      	LDA #$06
C2/F356:	8D 1B 96   	STA $961B      ; Set clip plane to a wide oval
C2/F359:	9C AC 60   	STZ $60AC
C2/F35C:	60         	RTS

C2/F35D:	EE AC 60   	INC $60AC
C2/F360:	20 EB F9   	JSR $F9EB
C2/F363:	20 4F FA   	JSR $FA4F
C2/F366:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F369:	A9 3C      	LDA #$3C
C2/F36B:	8F 23 21 00	STA $002123
C2/F36F:	22 A1 AA C1	JSL $C1AAA1
C2/F373:	A5 12      	LDA $12
C2/F375:	10 0D      	BPL $F384      ; Branch if entity is not an enemy
C2/F377:	29 0F      	AND #$0F
C2/F379:	38         	SEC
C2/F37A:	E9 04      	SBC #$04
C2/F37C:	0A         	ASL A
C2/F37D:	A8         	TAY
C2/F37E:	A9 31      	LDA #$31
C2/F380:	99 DC 80   	STA $80DC,Y    ; Draw enemy in correct orientation
C2/F383:	60         	RTS

C2/F384:	29 03      	AND #$03
C2/F386:	0A         	ASL
C2/F387:	0A         	ASL
C2/F388:	0A         	ASL
C2/F389:	0A         	ASL
C2/F38A:	0A         	ASL
C2/F38B:	A8         	TAY
C2/F38C:	A9 30      	LDA #$30
C2/F38E:	99 BD 61   	STA $61BD,Y    ; Draw character in correct orientation
C2/F391:	60         	RTS

C2/F392:	A9 08      	LDA #$08
C2/F394:	85 26      	STA $26
C2/F396:	A9 05      	LDA #$05
C2/F398:	20 F8 F4   	JSR $F4F8
C2/F39B:	A9 06      	LDA #$06       ; INC acceptable
C2/F39D:	20 E6 F6   	JSR $F6E6
C2/F3A0:	20 1B FA   	JSR $FA1B
C2/F3A3:	20 4F FA   	JSR $FA4F
C2/F3A6:	A9 3C      	LDA #$3C
C2/F3A8:	8F 23 21 00	STA $002123
C2/F3AC:	A9 04      	LDA #$04
C2/F3AE:	8D 1B 96   	STA $961B      ; Set clip plane to a tall oval
C2/F3B1:	EE AC 60   	INC $60AC
C2/F3B4:	60         	RTS

C2/F3B5:	A9 08      	LDA #$08
C2/F3B7:	85 26      	STA $26
C2/F3B9:	A9 05      	LDA #$05
C2/F3BB:	20 F8 F4   	JSR $F4F8
C2/F3BE:	A9 06      	LDA #$06       ; INC acceptable
C2/F3C0:	20 E6 F6   	JSR $F6E6
C2/F3C3:	20 03 FA   	JSR $FA03
C2/F3C6:	20 4F FA   	JSR $FA4F
C2/F3C9:	A9 3C      	LDA #$3C
C2/F3CB:	8F 23 21 00	STA $002123
C2/F3CF:	A9 CC      	LDA #$CC
C2/F3D1:	8F 24 21 00	STA $002124
C2/F3D5:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F3D8:	60         	RTS

C2/F3D9:	20 1B FA   	JSR $FA1B
C2/F3DC:	A9 CC      	LDA #$CC
C2/F3DE:	8F 24 21 00	STA $002124
C2/F3E2:	20 4F FA   	JSR $FA4F
C2/F3E5:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F3E8:	60         	RTS

C2/F3E9:	20 DF F9   	JSR $F9DF
C2/F3EC:	20 4F FA   	JSR $FA4F
C2/F3EF:	A9 CC      	LDA #$CC
C2/F3F1:	8F 24 21 00	STA $002124
C2/F3F5:	A9 02      	LDA #$02
C2/F3F7:	8D 1B 96   	STA $961B      ; Set clip plane to wavy
C2/F3FA:	60         	RTS

C2/F3FB:	A9 00      	LDA #$00       ; Not TDC?
C2/F3FD:	85 26      	STA $26
C2/F3FF:	A9 02      	LDA #$02
C2/F401:	20 F8 F4   	JSR $F4F8
C2/F404:	A9 03      	LDA #$03       ; INC acceptable
C2/F406:	20 E6 F6   	JSR $F6E6
C2/F409:	AD 6F 89   	LDA $896F
C2/F40C:	29 F7      	AND #$F7       ; I keep telling you about TRB and TSB, but apparently you just won't listen to me...
C2/F40E:	8D 6F 89   	STA $896F
C2/F411:	20 BB F9   	JSR $F9BB
C2/F414:	EE AC 60   	INC $60AC
C2/F417:	60         	RTS

C2/F418:	A9 08      	LDA #$08
C2/F41A:	85 26      	STA $26
C2/F41C:	A9 05      	LDA #$05
C2/F41E:	20 F8 F4   	JSR $F4F8
C2/F421:	A9 06      	LDA #$06       ; INC acceptable
C2/F423:	20 E6 F6   	JSR $F6E6
C2/F426:	20 33 FA   	JSR $FA33
C2/F429:	20 4F FA   	JSR $FA4F
C2/F42C:	A9 CC      	LDA #$CC
C2/F42E:	8F 24 21 00	STA $002124
C2/F432:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F435:	60         	RTS

C2/F436:	20 33 FA   	JSR $FA33
C2/F439:	20 4F FA   	JSR $FA4F
C2/F43C:	A9 3C      	LDA #$3C
C2/F43E:	8F 23 21 00	STA $002123
C2/F442:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F445:	22 86 C3 C1	JSL $C1C386
C2/F449:	22 9E 9A C1	JSL $C19A9E
C2/F44D:	A5 10      	LDA $10
C2/F44F:	22 ED C3 C1	JSL $C1C3ED
C2/F453:	A5 10      	LDA $10
C2/F455:	29 03      	AND #$03
C2/F457:	0A         	ASL
C2/F458:	0A         	ASL
C2/F459:	0A         	ASL
C2/F45A:	0A         	ASL
C2/F45B:	0A         	ASL
C2/F45C:	A8         	TAY
C2/F45D:	A9 30      	LDA #$30
C2/F45F:	99 BD 61   	STA $61BD,Y
C2/F462:	A9 02      	LDA #$02
C2/F464:	8D 0E 7B   	STA $7B0E
C2/F467:	8D 0F 7B   	STA $7B0F
C2/F46A:	60         	RTS

C2/F46B:	20 33 FA   	JSR $FA33
C2/F46E:	20 4F FA   	JSR $FA4F
C2/F471:	A9 CC      	LDA #$CC
C2/F473:	8F 24 21 00	STA $002124
C2/F477:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F47A:	EE AC 60   	INC $60AC
C2/F47D:	EE AD 60   	INC $60AD
C2/F480:	A9 02      	LDA #$02
C2/F482:	8D 0E 7B   	STA $7B0E
C2/F485:	8D 0F 7B   	STA $7B0F
C2/F488:	60         	RTS

C2/F489:	20 33 FA   	JSR $FA33
C2/F48C:	EE AC 60   	INC $60AC
C2/F48F:	A9 02      	LDA #$02
C2/F491:	8D 0E 7B   	STA $7B0E
C2/F494:	8D 0F 7B   	STA $7B0F
C2/F497:	60         	RTS

C2/F498:	20 9C F4   	JSR $F49C
C2/F49B:	6B         	RTL

C2/F49C:	EE AC 60   	INC $60AC
C2/F49F:	A9 08      	LDA #$08
C2/F4A1:	8D 0E 7B   	STA $7B0E
C2/F4A4:	8D 0F 7B   	STA $7B0F
C2/F4A7:	A2 02 01   	LDX #$0102
C2/F4AA:	86 10      	STX $10
C2/F4AC:	A9 12      	LDA #$12
C2/F4AE:	22 00 B0 C1	JSL $C1B000
C2/F4B2:	60         	RTS

C2/F4B3:	22 9E 9A C1	JSL $C19A9E
C2/F4B7:	A5 10      	LDA $10
C2/F4B9:	C2 20      	REP #$20       ; 16-bit A
C2/F4BB:	0A         	ASL A
C2/F4BC:	AA         	TAX
C2/F4BD:	BF 8B CE C2	LDA $C2CE8B,X
C2/F4C1:	18         	CLC
C2/F4C2:	69 10 00   	ADC #$0010
C2/F4C5:	AA         	TAX
C2/F4C6:	7B         	TDC
C2/F4C7:	E2 20      	SEP #$20       ; 8-bit A
C2/F4C9:	60         	RTS

C2/F4CA:	20 B3 F4   	JSR $F4B3
C2/F4CD:	A9 01      	LDA #$01
C2/F4CF:	9D 35 6A   	STA $6A35,X
C2/F4D2:	9D 45 6A   	STA $6A45,X
C2/F4D5:	9D 55 6A   	STA $6A55,X
C2/F4D8:	A9 00      	LDA #$00       ; Not TDC? Or DEC?
C2/F4DA:	9D D8 74   	STA $74D8,X
C2/F4DD:	A9 55      	LDA #$55
C2/F4DF:	9D E8 74   	STA $74E8,X
C2/F4E2:	A9 AA      	LDA #$AA
C2/F4E4:	9D F8 74   	STA $74F8,X
C2/F4E7:	A2 02 03   	LDX #$0302
C2/F4EA:	86 10      	STX $10
C2/F4EC:	A9 10      	LDA #$10
C2/F4EE:	22 00 B0 C1	JSL $C1B000
C2/F4F2:	A9 04      	LDA #$04
C2/F4F4:	8D 0F 7B   	STA $7B0F
C2/F4F7:	60         	RTS

C2/F4F8:	85 22      	STA $22
C2/F4FA:	A5 26      	LDA $26
C2/F4FC:	85 28      	STA $28
C2/F4FE:	AE 3D 61   	LDX $613D
C2/F501:	86 12      	STX $12
C2/F503:	8A         	TXA
C2/F504:	0A         	ASL
C2/F505:	0A         	ASL
C2/F506:	0A         	ASL
C2/F507:	0A         	ASL
C2/F508:	85 12      	STA $12
C2/F50A:	C2 20      	REP #$20       ; 16-bit A
C2/F50C:	A5 12      	LDA $12
C2/F50E:	4A         	LSR
C2/F50F:	4A         	LSR
C2/F510:	4A         	LSR
C2/F511:	4A         	LSR
C2/F512:	85 12      	STA $12
C2/F514:	AD 80 60   	LDA $6080
C2/F517:	4A         	LSR
C2/F518:	4A         	LSR
C2/F519:	4A         	LSR
C2/F51A:	4A         	LSR
C2/F51B:	8D 80 60   	STA $6080
C2/F51E:	64 24      	STZ $24
C2/F520:	7B         	TDC
C2/F521:	E2 20      	SEP #$20       ; 8-bit A
C2/F523:	AD 80 60   	LDA $6080
C2/F526:	29 01      	AND #$01
C2/F528:	D0 45      	BNE $F56F      ; +69
C2/F52A:	A5 12      	LDA $12
C2/F52C:	29 01      	AND #$01
C2/F52E:	F0 3F      	BEQ $F56F      ; +63
C2/F530:	A5 22      	LDA $22
C2/F532:	85 14      	STA $14
C2/F534:	A6 24      	LDX $24
C2/F536:	A9 01      	LDA #$01
C2/F538:	85 1A      	STA $1A
C2/F53A:	86 1E      	STX $1E
C2/F53C:	A9 10      	LDA #$10
C2/F53E:	85 10      	STA $10
C2/F540:	BD 2E 6A   	LDA $6A2E,X
C2/F543:	9D 3E 6A   	STA $6A3E,X
C2/F546:	BD 7E 6F   	LDA $6F7E,X
C2/F549:	9D 8E 6F   	STA $6F8E,X
C2/F54C:	BD CE 74   	LDA $74CE,X
C2/F54F:	9D DE 74   	STA $74DE,X
C2/F552:	E8         	INX
C2/F553:	C6 10      	DEC $10
C2/F555:	D0 E9      	BNE $F540      ; -23
C2/F557:	DA         	PHX
C2/F558:	A6 1E      	LDX $1E
C2/F55A:	A5 1A      	LDA $1A
C2/F55C:	9D 46 6A   	STA $6A46,X
C2/F55F:	E6 1A      	INC $1A
C2/F561:	BD 35 6A   	LDA $6A35,X
C2/F564:	18         	CLC
C2/F565:	65 26      	ADC $26
C2/F567:	9D 45 6A   	STA $6A45,X
C2/F56A:	FA         	PLX
C2/F56B:	C6 14      	DEC $14
C2/F56D:	D0 CB      	BNE $F53A      ; -53
C2/F56F:	66 13      	ROR $13
C2/F571:	66 12      	ROR $12
C2/F573:	6E 81 60   	ROR $6081
C2/F576:	6E 80 60   	ROR $6080
C2/F579:	C2 20      	REP #$20       ; 16-bit A
C2/F57B:	A5 24      	LDA $24
C2/F57D:	18         	CLC
C2/F57E:	69 80 00   	ADC #$0080
C2/F581:	85 24      	STA $24
C2/F583:	AA         	TAX
C2/F584:	7B         	TDC
C2/F585:	E2 20      	SEP #$20       ; 8-bit A
C2/F587:	E0 00 05   	CPX #$0500
C2/F58A:	D0 97      	BNE $F523      ; -105
C2/F58C:	60         	RTS

C2/F58D:	20 33 FA   	JSR $FA33
C2/F590:	A9 08      	LDA #$08       ; 8
C2/F592:	85 26      	STA $26
C2/F594:	A9 05      	LDA #$05       ; 5
C2/F596:	20 F8 F4   	JSR $F4F8
C2/F599:	A9 06      	LDA #$06       ; 6
C2/F59B:	4C E6 F6   	JMP $F6E6

C2/F59E:	4C 33 FA   	JMP $FA33      ; Is this really needed?

C2/F5A1:	4C 33 FA   	JMP $FA33      ; Is THIS really needed?

C2/F5A4:	A9 00      	LDA #$00       ; 0
C2/F5A6:	85 26      	STA $26
C2/F5A8:	A9 07      	LDA #$07       ; 7
C2/F5AA:	20 F8 F4   	JSR $F4F8
C2/F5AD:	A9 08      	LDA #$08       ; 8
C2/F5AF:	20 E6 F6   	JSR $F6E6
C2/F5B2:	20 4F FA   	JSR $FA4F
C2/F5B5:	A9 3C      	LDA #$3C       ; 60
C2/F5B7:	8F 23 21 00	STA $002123
C2/F5BB:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F5BE:	4C 27 FA   	JMP $FA27

C2/F5C1:	EE AC 60   	INC $60AC
C2/F5C4:	A9 00      	LDA #$00       ; 0
C2/F5C6:	85 26      	STA $26
C2/F5C8:	A9 05      	LDA #$05       ; 5
C2/F5CA:	20 F8 F4   	JSR $F4F8
C2/F5CD:	A9 06      	LDA #$06       ; 6
C2/F5CF:	4C E6 F6   	JMP $F6E6

C2/F5D2:	A0 00 28   	LDY #$2800     ; 10,240
C2/F5D5:	22 09 B1 C1	JSL $C1B109
C2/F5D9:	AD 8D 89   	LDA $898D
C2/F5DC:	29 FE      	AND #$FE
C2/F5DE:	8D 8D 89   	STA $898D
C2/F5E1:	A0 03 00   	LDY #$0003
C2/F5E4:	B1 76      	LDA ($76),Y
C2/F5E6:	0A         	ASL
C2/F5E7:	AA         	TAX
C2/F5E8:	C2 20      	REP #$20       ; 16-bit A
C2/F5EA:	BD 01 20   	LDA $2001,X    ; Enemy sprite ID
C2/F5ED:	AA         	TAX
C2/F5EE:	7B         	TDC
C2/F5EF:	E2 20      	SEP #$20       ; 8-bit A
C2/F5F1:	22 D1 24 C1	JSL $C124D1
C2/F5F5:	4C 09 F8   	JMP $F809

C2/F5F8:	A9 08      	LDA #$08       ; 8
C2/F5FA:	85 26      	STA $26
C2/F5FC:	A9 05      	LDA #$05       ; 5
C2/F5FE:	20 F8 F4   	JSR $F4F8
C2/F601:	A9 06      	LDA #$06       ; 6
C2/F603:	20 E6 F6   	JSR $F6E6
C2/F606:	20 1B FA   	JSR $FA1B
C2/F609:	EE AC 60   	INC $60AC
C2/F60C:	60         	RTS

C2/F60D:	A9 08      	LDA #$08       ; 8
C2/F60F:	85 26      	STA $26
C2/F611:	A9 05      	LDA #$05       ; 5
C2/F613:	20 F8 F4   	JSR $F4F8
C2/F616:	A9 06      	LDA #$06       ; 6
C2/F618:	20 E6 F6   	JSR $F6E6
C2/F61B:	20 27 FA   	JSR $FA27
C2/F61E:	20 4F FA   	JSR $FA4F
C2/F621:	A9 3C      	LDA #$3C       ; 60
C2/F623:	8F 23 21 00	STA $002123
C2/F627:	A9 05      	LDA #$05       ; 5
C2/F629:	8D 1B 96   	STA $961B      ; Set clip plane to wavy in
C2/F62C:	EE AC 60   	INC $60AC
C2/F62F:	60         	RTS

C2/F630:	A9 06      	LDA #$06       ; 6
C2/F632:	85 26      	STA $26
C2/F634:	A9 05      	LDA #$05       ; 5
C2/F636:	20 F8 F4   	JSR $F4F8
C2/F639:	A9 06      	LDA #$06       ; 6
C2/F63B:	4C E6 F6   	JMP $F6E6

C2/F63E:	64 26      	STZ $26
C2/F640:	A9 03      	LDA #$03       ; 3
C2/F642:	20 F8 F4   	JSR $F4F8
C2/F645:	A9 04      	LDA #$04       ; 4
C2/F647:	20 E6 F6   	JSR $F6E6
C2/F64A:	4C 1B FA   	JMP $FA1B

; Data of some kind.
C2/F64D:	00
C2/F64E:	05
C2/F64F:	02
C2/F650:	01
C2/F651:	01
C2/F652:	00
C2/F653:	00

C2/F654:	01
C2/F655:	06
C2/F656:	03
C2/F657:	02
C2/F658:	02
C2/F659:	01
C2/F65A:	01

C2/F65B:	20 03 FA   	JSR $FA03
C2/F65E:	20 4F FA   	JSR $FA4F
C2/F661:	A9 3C      	LDA #$3C       ; 60
C2/F663:	8F 23 21 00	STA $002123
C2/F667:	A9 CC      	LDA #$CC       ; -52
C2/F669:	8D 24 21 00	STA $002124
C2/F66D:	A9 08      	LDA #$08       ; 8
C2/F66F:	85 26      	STA $26
C2/F671:	7B         	TDC            ; A = 0
C2/F672:	AA         	TAX            ; X = 0
C2/F673:	C2 20      	REP #$20       ; 16-bit A
C2/F675:	AD 3D 61   	LDA $613D
C2/F678:	A0 10 00   	LDY #$0010     ; 16
C2/F67B:	0A         	ASL
C2/F67C:	90 01      	BCC $F67F      ; +1
C2/F67E:	E8         	INX            ; Count the number of 1s in $613D and $613E
C2/F67F:	88         	DEY
C2/F680:	D0 F9      	BNE $F67B      ; -7
C2/F682:	E0 06 00   	CPX #$0006     ; 6
C2/F685:	90 03      	BCC $F68A      ; +3
C2/F687:	A2 06 00   	LDX #$0006     ; X <= 6
C2/F68A:	7B         	TDC            ; A = 0
C2/F68B:	E2 20      	SEP #$20
C2/F68D:	A9 06      	LDA #$06       ; 6
C2/F68F:	8D 1B 96   	STA $961B      ; Set clip plane to a wide oval
C2/F692:	BF 4D F6 C2	LDA $C2F64D,X
C2/F696:	F0 05      	BEQ $F69D      ; +5
C2/F698:	DA         	PHX
C2/F699:	20 F8 F4   	JSR $F4F8
C2/F69C:	FA         	PLX
C2/F69D:	BF 54 F6 C2	LDA $C2F654,X
C2/F6A1:	4C E6 F6   	JMP $F6E6      ; BRA acceptable

C2/F6A4:	20 27 FA   	JSR $FA27
C2/F6A7:	20 4F FA   	JSR $FA4F
C2/F6AA:	A9 3C      	LDA #$3C       ; 60
C2/F6AC:	8F 23 21 00	STA $002123
C2/F6B0:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F6B3:	EE AC 60   	INC $60AC
C2/F6B6:	A9 03      	LDA #$03       ; 3
C2/F6B8:	85 26      	STA $26
C2/F6BA:	A9 05      	LDA #$05       ; 5
C2/F6BC:	20 F8 F4   	JSR $F4F8
C2/F6BF:	A9 06      	LDA #$06       ; 6
C2/F6C1:	4C E6 F6   	JMP $F6E6      ; BRA acceptable

C2/F6C4:	20 3F FA   	JSR $FA3F
C2/F6C7:	A9 08      	LDA #$08       ; 8
C2/F6C9:	85 26      	STA $26
C2/F6CB:	A9 02      	LDA #$02       ; 2
C2/F6CD:	20 F8 F4   	JSR $F4F8
C2/F6D0:	A9 03      	LDA #$03       ; 3
C2/F6D2:	4C E6 F6   	JMP $F6E6      ; BRA acceptable

C2/F6D5:	20 1B FA   	JSR $FA1B
C2/F6D8:	A9 28      	LDA #$28       ; 40
C2/F6DA:	85 26      	STA $26
C2/F6DC:	A9 01      	LDA #$01       ; 1
C2/F6DE:	20 F8 F4   	JSR $F4F8
C2/F6E1:	A9 02      	LDA #$02       ; 2
C2/F6E3:	4C E6 F6   	JMP $F6E6      ; Not needed here!

C2/F6E6:	8D 0F 7B   	STA $7B0F      ; Um, why are all of the next few functions lacking JMPs that go here?
C2/F6E9:	8D 0E 7B   	STA $7B0E
C2/F6EC:	60         	RTS

C2/F6ED:	20 B3 F4   	JSR $F4B3
C2/F6F0:	A9 01      	LDA #$01       ; 1
C2/F6F2:	9D 35 6A   	STA $6A35,X
C2/F6F5:	9D 45 6A   	STA $6A45,X
C2/F6F8:	A9 09      	LDA #$09       ; 9
C2/F6FA:	9D 55 6A   	STA $6A55,X
C2/F6FD:	9D 65 6A   	STA $6A65,X
C2/F700:	A9 11      	LDA #$11       ; 11
C2/F702:	9D 75 6A   	STA $6A75,X
C2/F705:	9D 85 6A   	STA $6A85,X
C2/F708:	A9 01      	LDA #$01       ; 1
C2/F70A:	9D AC 6F   	STA $6FAC,X
C2/F70D:	9D BC 6F   	STA $6FBC,X
C2/F710:	A9 02      	LDA #$02       ; INC acceptable
C2/F712:	9D CC 6F   	STA $6FCC,X
C2/F715:	9D DC 6F   	STA $6FDC,X
C2/F718:	A9 80      	LDA #$80       ; -128
C2/F71A:	9D E8 74   	STA $74E8,X
C2/F71D:	9D 08 75   	STA $7508,X
C2/F720:	9D 28 75   	STA $7528,X
C2/F723:	7B         	TDC            ; A = 0
C2/F724:	9D D9 74   	STA $74D9,X
C2/F727:	9D F9 74   	STA $74F9,X
C2/F72A:	9D 19 75   	STA $7519,X
C2/F72D:	A9 FF      	LDA #$FF       ; DEC acceptable
C2/F72F:	9D E9 74   	STA $74E9,X
C2/F732:	9D 09 75   	STA $7509,X
C2/F735:	9D 29 75   	STA $7529,X
C2/F738:	20 41 F7   	JSR $F741
C2/F73B:	A9 07      	LDA #$07       ; 7
C2/F73D:	8D 0F 7B   	STA $7B0F
C2/F740:	60         	RTS

C2/F741:	20 1B FA   	JSR $FA1B
C2/F744:	22 86 C3 C1	JSL $C1C386
C2/F748:	22 9E 9A C1	JSL $C19A9E
C2/F74C:	A5 10      	LDA $10
C2/F74E:	22 ED C3 C1	JSL $C1C3ED
C2/F752:	A9 02      	LDA #$02       ; 2
C2/F754:	8D 0E 7B   	STA $7B0E
C2/F757:	8D 0F 7B   	STA $7B0F
C2/F75A:	AD 6F 89   	LDA $896F
C2/F75D:	29 F7      	AND #$F7
C2/F75F:	8D 6F 89   	STA $896F
C2/F762:	60         	RTS

C2/F763:	20 1B FA   	JSR $FA1B
C2/F766:	20 4F FA   	JSR $FA4F
C2/F769:	A9 3C      	LDA #$3C       ; 60
C2/F76B:	8F 23 21 00	STA $002123
C2/F76F:	A9 03      	LDA #$03       ; 3
C2/F771:	8D 1B 96   	STA $961B      ; Set clip plane to a pillar
C2/F774:	A9 02      	LDA #$02       ; DEC acceptable
C2/F776:	8D 0E 7B   	STA $7B0E
C2/F779:	8D 0F 7B   	STA $7B0F
C2/F77C:	60         	RTS

C2/F77D:	20 F7 F9   	JSR $F9F7
C2/F780:	20 4F FA   	JSR $FA4F
C2/F783:	A9 3C      	LDA #$3C       ; 60
C2/F785:	8F 23 21 00	STA $002123
C2/F789:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F78C:	A9 02      	LDA #$02       ; 2
C2/F78E:	8D 0E 7B   	STA $7B0E
C2/F791:	8D 0F 7B   	STA $7B0F
C2/F794:	60         	RTS

C2/F795:	20 D3 F9   	JSR $F9D3
C2/F798:	A9 02      	LDA #$02       ; 2
C2/F79A:	8D 0E 7B   	STA $7B0E
C2/F79D:	8D 0F 7B   	STA $7B0F
C2/F7A0:	60         	RTS

C2/F7A1:	20 1B FA   	JSR $FA1B
C2/F7A4:	20 4F FA   	JSR $FA4F
C2/F7A7:	A9 3C      	LDA #$3C       ; 60
C2/F7A9:	8F 23 21 00	STA $002123
C2/F7AD:	9C 1B 96   	STZ $961B      ; Reset clip plane shape
C2/F7B0:	22 86 C3 C1	JSL $C1C386
C2/F7B4:	22 9E 9A C1	JSL $C19A9E
C2/F7B8:	A5 10      	LDA $10
C2/F7BA:	22 ED C3 C1	JSL $C1C3ED
C2/F7BE:	A9 02      	LDA #$02       ; 2
C2/F7C0:	8D 0E 7B   	STA $7B0E
C2/F7C3:	8D 0F 7B   	STA $7B0F
C2/F7C6:	60         	RTS

C2/F7C7:	20 27 FA   	JSR $FA27
C2/F7CA:	20 4F FA   	JSR $FA4F
C2/F7CD:	A9 3C      	LDA #$3C       ; 60
C2/F7CF:	8F 23 21 00	STA $002123
C2/F7D3:	22 86 C3 C1	JSL $C1C386
C2/F7D7:	22 9E 9A C1	JSL $C19A9E
C2/F7DB:	A5 10      	LDA $10
C2/F7DD:	22 ED C3 C1	JSL $C1C3ED
C2/F7E1:	A9 02      	LDA #$02       ; 2
C2/F7E3:	8D 1B 96   	STA $961B      ; Set clip plane to wavy. Could've used a BRA...
C2/F7E6:	A9 02      	LDA #$02       ; And even though you didn't, this instruction is needless!
C2/F7E8:	8D 0E 7B   	STA $7B0E
C2/F7EB:	8D 0F 7B   	STA $7B0F
C2/F7EE:	60         	RTS

C2/F7EF:	20 33 FA   	JSR $FA33
C2/F7F2:	20 4F FA   	JSR $FA4F
C2/F7F5:	A9 CC      	LDA #$CC       ; -52
C2/F7F7:	8F 24 21 00	STA $002124
C2/F7FB:	A9 01      	LDA #$01       ; 1
C2/F7FD:	8D 1B 96   	STA $961B      ; Set clip plane to a circle
C2/F800:	A9 02      	LDA #$02       ; 2
C2/F802:	8D 0E 7B   	STA $7B0E
C2/F805:	8D 0F 7B   	STA $7B0F
C2/F808:	60         	RTS

C2/F809:	A9 02      	LDA #$02       ; 2
C2/F80B:	8D 0E 7B   	STA $7B0E
C2/F80E:	8D 0F 7B   	STA $7B0F
C2/F811:	60         	RTS

C2/F812:	EE AA 60   	INC $60AA
C2/F815:	A9 06      	LDA #$06       ; 6
C2/F817:	8D 0E 7B   	STA $7B0E
C2/F81A:	A9 02      	LDA #$02       ; 2
C2/F81C:	8D 0F 7B   	STA $7B0F
C2/F81F:	60         	RTS

C2/F820:	EE AC 60   	INC $60AC
C2/F823:	A9 02      	LDA #$02       ; 2
C2/F825:	8D 0F 7B   	STA $7B0F
C2/F828:	4C 3F FA   	JMP $FA3F

C2/F82B:	A9 06      	LDA #$06       ; 6
C2/F82D:	8D 0E 7B   	STA $7B0E
C2/F830:	8D 0F 7B   	STA $7B0F
C2/F833:	4C 3F FA   	JMP $FA3F

C2/F836:	4C 3F FA   	JMP $FA3F      ; ???

C2/F839:	4C 1B FA   	JMP $FA1B      ; ???

C2/F83C:	AD 6F 89   	LDA $896F
C2/F83F:	29 F7      	AND #$F7
C2/F841:	8D 6F 89   	STA $896F
C2/F844:	4C 0F FA   	JMP $FA0F

C2/F847:	C2 20      	REP #$20       ; 16-bit A
C2/F849:	AD 80 60   	LDA $6080
C2/F84C:	49 FF FF   	EOR #$FFFF
C2/F84F:	85 22      	STA $22        ; Animation script pointer
C2/F851:	AD 7E 60   	LDA $607E
C2/F854:	25 22      	AND $22
C2/F856:	48         	PHA
C2/F857:	7B         	TDC
C2/F858:	E2 20      	SEP #$20       ; 8-bit A
C2/F859:	FA         	PLX
C2/F85B:	D0 01      	BNE $F85E      ; +1
C2/F85D:	60         	RTS

C2/F85E:	9C 67 7B   	STZ $7B67
C2/F861:	22 86 C3 C1	JSL $C1C386
C2/F865:	22 26 02 C1	JSL $C10226
C2/F869:	22 F1 C3 C1	JSL $C1C3F1
C2/F86D:	22 7E B0 C1	JSL $C1B07E
C2/F871:	22 A1 AA C1	JSL $C1AAA1
C2/F875:	A5 12      	LDA $12
C2/F877:	10 16      	BPL $F88F      ; +22
C2/F879:	29 7F      	AND #$7F
C2/F87B:	38         	SEC
C2/F87C:	E9 04      	SBC #$04       ; 4
C2/F87E:	20 9E FA   	JSR $FA9E
C2/F881:	22 5F 1E C1	JSL $C11E5F
C2/F885:	22 22 1F C1	JSL $C11F22
C2/F889:	22 26 02 C1	JSL $C10226
C2/F88D:	80 1F      	BRA $F8AE      ; +31

C2/F88F:	29 03      	AND #$03
C2/F891:	0A         	ASL
C2/F892:	0A         	ASL
C2/F893:	0A         	ASL
C2/F894:	0A         	ASL
C2/F895:	0A         	ASL
C2/F896:	AA         	TAX
C2/F897:	7B         	TDC
C2/F898:	A8         	TAY
C2/F899:	BD 80 7F   	LDA $7F80,X
C2/F89C:	99 60 7E   	STA $7E60,Y
C2/F89F:	C8         	INY
C2/F8A0:	E8         	INX
C2/F8A1:	C0 20 00   	CPY #$0020     ; 32
C2/F8A4:	D0 F3      	BNE $F899      ; -13
C2/F8A6:	AD 6F 89   	LDA $896F
C2/F8A9:	09 10      	ORA #$10
C2/F8AB:	8D 6F 89   	STA $896F
C2/F8AE:	AD 7D 62   	LDA $627D
C2/F8B1:	29 7F      	AND #$7F
C2/F8B3:	8D 7D 62   	STA $627D
C2/F8B6:	20 6F F3   	JSR $F36F
C2/F8B9:	22 26 02 C1	JSL $C10226
C2/F8BD:	AD 6F 89   	LDA $896F
C2/F8C0:	29 F7      	AND #$F7
C2/F8C2:	09 40      	ORA #$40
C2/F8C4:	8D 6F 89   	STA $896F
C2/F8C7:	4C 1B FA   	JMP $FA1B

C2/F8CA:	9C 67 7B   	STZ $7B67
C2/F8CD:	22 86 C3 C1	JSL $C1C386
C2/F8D1:	22 26 02 C1	JSL $C10226
C2/F8D5:	22 7E B0 C1	JSL $C1B07E
C2/F8D9:	22 A1 AA C1	JSL $C1AAA1
C2/F8DD:	A5 12      	LDA $12
C2/F8DF:	10 44      	BPL $F925      ; +68
C2/F8E1:	29 7F      	AND #$7F
C2/F8E3:	38         	SEC
C2/F8E4:	E9 04      	SBC #$04       ; 4
C2/F8E6:	20 9E FA   	JSR $FA9E
C2/F8E9:	48         	PHA
C2/F8EA:	85 14      	STA $14
C2/F8EC:	20 54 EA   	JSR $EA54
C2/F8EF:	AD 8D 89   	LDA $898D
C2/F8F2:	48         	PHA
C2/F8F3:	29 FE      	AND #$FE
C2/F8F5:	8D 8D 89   	STA $898D
C2/F8F8:	A5 14      	LDA $14
C2/F8FA:	22 5F 1E C1	JSL $C11E5F
C2/F8FE:	22 22 1F C1	JSL $C11F22
C2/F902:	22 F1 C3 C1	JSL $C1C3F1
C2/F906:	22 26 02 C1	JSL $C10226
C2/F90A:	20 54 EA   	JSR $EA54
C2/F90D:	AD 6F 89   	LDA $896F
C2/F910:	29 E7      	AND #$E7
C2/F912:	8D 6F 89   	STA $896F
C2/F915:	68         	PLA
C2/F916:	8D 8D 89   	STA $898D
C2/F919:	68         	PLA
C2/F91A:	49 FF      	EOR #$FF
C2/F91C:	8D AB 60   	STA $60AB
C2/F91F:	22 26 02 C1	JSL $C10226
C2/F923:	80 37      	BRA $F95C      ; +55

C2/F925:	48         	PHA
C2/F926:	20 54 EA   	JSR $EA54
C2/F929:	AD 8D 89   	LDA $898D
C2/F92C:	48         	PHA
C2/F92D:	29 FE      	AND #$FE
C2/F92F:	8D 8D 89   	STA $898D
C2/F932:	AD 6F 89   	LDA $896F
C2/F935:	29 E7      	AND #$E7
C2/F937:	09 50      	ORA #$50
C2/F939:	8D 6F 89   	STA $896F
C2/F93C:	22 55 1E C1	JSL $C11E55
C2/F940:	68         	PLA
C2/F941:	8D 8D 89   	STA $898D
C2/F944:	68         	PLA
C2/F945:	29 03      	AND #$03
C2/F947:	0A         	ASL
C2/F948:	0A         	ASL
C2/F949:	0A         	ASL
C2/F94A:	0A         	ASL
C2/F94B:	0A         	ASL
C2/F94C:	AA         	TAX
C2/F94D:	7B         	TDC            ; A = 0
C2/F94E:	A8         	TAY            ; Y = 0
C2/F94F:	BD 80 7F   	LDA $7F80,X
C2/F952:	99 60 7E   	STA $7E60,Y
C2/F955:	C8         	INY
C2/F956:	E8         	INX
C2/F957:	C0 20 00   	CPY #$0020     ; 32
C2/F95A:	D0 F3      	BNE $F94F      ; -13
C2/F95C:	AD 7D 62   	LDA $627D
C2/F95F:	29 7F      	AND #$7F
C2/F961:	8D 7D 62   	STA $627D
C2/F964:	4C 0F FA   	JMP $FA0F

; Not sure what these functions do. They're all similar, though, so I could see a much more efficient way to do this.
C2/F967:	A2 02 04   	LDX #$0402     ; 1,026
C2/F96A:	86 10      	STX $10
C2/F96C:	A9 01      	LDA #$01       ; 1
C2/F96E:	22 00 B0 C1	JSL $C1B000
C2/F972:	60         	RTS

C2/F973:	A2 02 45   	LDX #$4502     ; 17,666
C2/F976:	86 10      	STX $10
C2/F978:	A9 12      	LDA #$12       ; 18
C2/F97A:	22 00 B0 C1	JSL $C1B000
C2/F97E:	60         	RTS

C2/F97F:	A2 02 04   	LDX #$0402     ; 1,026
C2/F982:	86 10      	STX $10
C2/F984:	A9 03      	LDA #$03       ; 3
C2/F986:	22 00 B0 C1	JSL $C1B000
C2/F98A:	60         	RTS

C2/F98B:	A2 02 01   	LDX #$0102     ; 258
C2/F98E:	86 10      	STX $10
C2/F990:	A9 02      	LDA #$02       ; 2
C2/F992:	22 00 B0 C1	JSL $C1B000
C2/F996:	60         	RTS

C2/F997:	A2 02 01   	LDX #$0102     ; 258
C2/F99A:	86 10      	STX $10
C2/F99C:	A9 14      	LDA #$14       ; 20
C2/F99E:	22 00 B0 C1	JSL $C1B000
C2/F9A2:	60         	RTS

C2/F9A3:	A2 02 04   	LDX #$0402     ; 1,026
C2/F9A6:	86 10      	STX $10
C2/F9A8:	A9 12      	LDA #$12       ; 18
C2/F9AA:	22 00 B0 C1	JSL $C1B000
C2/F9AE:	60         	RTS

C2/F9AF:	A2 02 41   	LDX #$4102     ; 16,642
C2/F9B2:	86 10      	STX $10
C2/F9B4:	A9 14      	LDA #$14       ; 20
C2/F9B6:	22 00 B0 C1	JSL $C1B000
C2/F9BA:	60         	RTS

C2/F9BB:	A2 02 02   	LDX #$0202     ; 514
C2/F9BE:	86 10      	STX $10
C2/F9C0:	A9 04      	LDA #$04       ; 4
C2/F9C2:	22 00 B0 C1	JSL $C1B000
C2/F9C6:	60         	RTS

C2/F9C7:	A2 02 05   	LDX #$0502     ; 1,282
C2/F9CA:	86 10      	STX $10
C2/F9CC:	A9 12      	LDA #$12       ; 18
C2/F9CE:	22 00 B0 C1	JSL $C1B000
C2/F9D2:	60         	RTS

C2/F9D3:	A2 02 41   	LDX #$4102     ; 16,642
C2/F9D6:	86 10      	STX $10
C2/F9D8:	A9 12      	LDA #$12       ; 18
C2/F9DA:	22 00 B0 C1	JSL $C1B000
C2/F9DE:	60         	RTS

C2/F9DF:	A2 02 04   	LDX #$0402     ; 1,026
C2/F9E2:	86 10      	STX $10
C2/F9E4:	A9 10      	LDA #$10       ; 16
C2/F9E6:	22 00 B0 C1	JSL $C1B000
C2/F9EA:	60         	RTS

C2/F9EB:	A2 02 02   	LDX #$0202     ; 514
C2/F9EE:	86 10      	STX $10
C2/F9F0:	A9 10      	LDA #$10       ; 16
C2/F9F2:	22 00 B0 C1	JSL $C1B000
C2/F9F6:	60         	RTS

C2/F9F7:	A2 02 41   	LDX #$4102     ; 16,642
C2/F9FA:	86 10      	STX $10
C2/F9FC:	A9 10      	LDA #$10       ; 16
C2/F9FE:	22 00 B0 C1	JSL $C1B000
C2/FA02:	60         	RTS

C2/FA03:	A2 02 04   	LDX #$0402     ; 1,026
C2/FA06:	86 10      	STX $10
C2/FA08:	A9 11      	LDA #$11       ; 17
C2/FA0A:	22 00 B0 C1	JSL $C1B000
C2/FA0E:	60         	RTS

C2/FA0F:	A2 02 01   	LDX #$0102     ; 258
C2/FA12:	86 10      	STX $10
C2/FA14:	A9 04      	LDA #$04       ; 4
C2/FA16:	22 00 B0 C1	JSL $C1B000
C2/FA1A:	60         	RTS

C2/FA1B:	A2 02 01   	LDX #$0102     ; 258
C2/FA1E:	86 10      	STX $10
C2/FA20:	A9 12      	LDA #$12       ; 18
C2/FA22:	22 00 B0 C1	JSL $C1B000
C2/FA26:	60         	RTS

C2/FA27:	A2 02 01   	LDX #$0102     ; 258
C2/FA2A:	86 10      	STX $10
C2/FA2C:	A9 10      	LDA #$10       ; 16
C2/FA2E:	22 00 B0 C1	JSL $C1B000
C2/FA32:	60         	RTS

C2/FA33:	A2 02 04   	LDX #$0402     ; 1,026
C2/FA36:	86 10      	STX $10
C2/FA38:	A9 13      	LDA #$13       ; 19
C2/FA3A:	22 00 B0 C1	JSL $C1B000
C2/FA3E:	60         	RTS

C2/FA3F:	A2 02 03   	LDX #$0302     ; 770
C2/FA42:	86 10      	STX $10
C2/FA44:	A9 10      	LDA #$10       ; 16
C2/FA46:	22 00 B0 C1	JSL $C1B000
C2/FA4A:	60         	RTS

; Called from C1/B0D6.
C2/FA4B:	20 4F FA   	JSR $FA4F
C2/FA4E:	6B         	RTL

; Some sort of resetting/initializing of variables here.
C2/FA4F:	7B         	TDC            ; A = 0
C2/FA50:	AA         	TAX            ; X = 0
C2/FA51:	A8         	TAY            ; Y = 0
C2/FA52:	A9 FF      	LDA #$FF       ; DEC A would work too...
C2/FA54:	9D 21 9A   	STA $9A21,X
C2/FA57:	99 1F 96   	STA $961F,Y
C2/FA5A:	1A         	INC            ; A = 0
C2/FA5B:	9D 22 9A   	STA $9A22,X
C2/FA5E:	99 20 96   	STA $9620,Y
C2/FA61:	C8         	INY
C2/FA62:	C8         	INY
C2/FA63:	E8 E8 E8 E8	INX #4
C2/FA67:	E0 5C 02   	CPX #$025C     ; 604
C2/FA6A:	D0 E6      	BNE $FA52      ; -26
C2/FA6C:	EE 97 61   	INC $6197
C2/FA6F:	60         	RTS

; This function copies a monster palette from ROM to RAM.
C2/FA70:	AE 69 61   	LDX $6169
C2/FA73:	7B         	TDC            ; A = 0
C2/FA74:	A8         	TAY            ; Y = 0
C2/FA75:	BF 20 78 D2	LDA $D27820,X  ; Monster palette
C2/FA79:	99 60 7E   	STA $7E60,Y    ; Store to RAM palette 3
C2/FA7C:	99 60 7C   	STA $7C60,Y    ; Store to temp palette 3
C2/FA7F:	E8         	INX
C2/FA80:	C8         	INY
C2/FA81:	C0 20 00   	CPY #$0020     ; 32
C2/FA84:	D0 EF      	BNE $FA75      ; -17
C2/FA86:	60         	RTS

; This function copies a monster palette from ROM to a different location in RAM.
C2/FA87:	AE 69 61   	LDX $6169
C2/FA8A:	7B         	TDC            ; A = 0
C2/FA8B:	A8         	TAY            ; Y = 0
C2/FA8C:	BF 20 78 D2	LDA $D27820,X  ; Monster palette
C2/FA90:	99 60 7F   	STA $7F60,Y    ; Store to RAM palette B
C2/FA93:	99 60 7D   	STA $7D60,Y    ; Store to temp palette B
C2/FA96:	E8         	INX
C2/FA97:	C8         	INY
C2/FA98:	C0 20 00   	CPY #$0020     ; 32
C2/FA9B:	D0 EF      	BNE $FA8C      ; -17
C2/FA9D:	60         	RTS

C2/FA9E:	AA         	TAX
C2/FA9F:	BF 01 1A C1	LDA $C11A01,X  ; A = 2^X
C2/FAA3:	60         	RTS

; Unused Space (457 bytes)(C2/FAA4 - C2/FC6C)
; The first 7 bytes are NOT available in FF3us v1.1
C2/FAA4:	FFFFFFFF
C2/FAA8:	FFFFFFFF
C2/FAAC:	FFFFFFFF
C2/FAB0:	FFFFFFFF
C2/FAB4:	FFFFFFFF
C2/FAB8:	FFFFFFFF
C2/FABC:	FFFFFFFF
C2/FAC0:	FFFFFFFF
C2/FAC4:	FFFFFFFF
C2/FAC8:	FFFFFFFF
C2/FACC:	FFFFFFFF
C2/FAD0:	FFFFFFFF
C2/FAD4:	FFFFFFFF
C2/FAD8:	FFFFFFFF
C2/FADC:	FFFFFFFF
C2/FAE0:	FFFFFFFF
C2/FAE4:	FFFFFFFF
C2/FAE8:	FFFFFFFF
C2/FAEC:	FFFFFFFF
C2/FAF0:	FFFFFFFF
C2/FAF4:	FFFFFFFF
C2/FAF8:	FFFFFFFF
C2/FAFC:	FFFFFFFF
C2/FB00:	FFFFFFFF
C2/FB04:	FFFFFFFF
C2/FB08:	FFFFFFFF
C2/FB0C:	FFFFFFFF
C2/FB10:	FFFFFFFF
C2/FB14:	FFFFFFFF
C2/FB18:	FFFFFFFF
C2/FB1C:	FFFFFFFF
C2/FB20:	FFFFFFFF
C2/FB24:	FFFFFFFF
C2/FB28:	FFFFFFFF
C2/FB2C:	FFFFFFFF
C2/FB30:	FFFFFFFF
C2/FB34:	FFFFFFFF
C2/FB38:	FFFFFFFF
C2/FB3C:	FFFFFFFF
C2/FB40:	FFFFFFFF
C2/FB44:	FFFFFFFF
C2/FB48:	FFFFFFFF
C2/FB4C:	FFFFFFFF
C2/FB50:	FFFFFFFF
C2/FB54:	FFFFFFFF
C2/FB58:	FFFFFFFF
C2/FB5C:	FFFFFFFF
C2/FB60:	FFFFFFFF
C2/FB64:	FFFFFFFF
C2/FB68:	FFFFFFFF
C2/FB6C:	FFFFFFFF
C2/FB70:	FFFFFFFF
C2/FB74:	FFFFFFFF
C2/FB78:	FFFFFFFF
C2/FB7C:	FFFFFFFF
C2/FB80:	FFFFFFFF
C2/FB84:	FFFFFFFF
C2/FB88:	FFFFFFFF
C2/FB8C:	FFFFFFFF
C2/FB90:	FFFFFFFF
C2/FB94:	FFFFFFFF
C2/FB98:	FFFFFFFF
C2/FB9C:	FFFFFFFF
C2/FBA0:	FFFFFFFF
C2/FBA4:	FFFFFFFF
C2/FBA8:	FFFFFFFF
C2/FBAC:	FFFFFFFF
C2/FBB0:	FFFFFFFF
C2/FBB4:	FFFFFFFF
C2/FBB8:	FFFFFFFF
C2/FBBC:	FFFFFFFF
C2/FBC0:	FFFFFFFF
C2/FBC4:	FFFFFFFF
C2/FBC8:	FFFFFFFF
C2/FBCC:	FFFFFFFF
C2/FBD0:	FFFFFFFF
C2/FBD4:	FFFFFFFF
C2/FBD8:	FFFFFFFF
C2/FBDC:	FFFFFFFF
C2/FBE0:	FFFFFFFF
C2/FBE4:	FFFFFFFF
C2/FBE8:	FFFFFFFF
C2/FBEC:	FFFFFFFF
C2/FBF0:	FFFFFFFF
C2/FBF4:	FFFFFFFF
C2/FBF8:	FFFFFFFF
C2/FBFC:	FFFFFFFF
C2/FC00:	FFFFFFFF
C2/FC04:	FFFFFFFF
C2/FC08:	FFFFFFFF
C2/FC0C:	FFFFFFFF
C2/FC10:	FFFFFFFF
C2/FC14:	FFFFFFFF
C2/FC18:	FFFFFFFF
C2/FC1C:	FFFFFFFF
C2/FC20:	FFFFFFFF
C2/FC24:	FFFFFFFF
C2/FC28:	FFFFFFFF
C2/FC2C:	FFFFFFFF
C2/FC30:	FFFFFFFF
C2/FC34:	FFFFFFFF
C2/FC38:	FFFFFFFF
C2/FC3C:	FFFFFFFF
C2/FC40:	FFFFFFFF
C2/FC44:	FFFFFFFF
C2/FC48:	FFFFFFFF
C2/FC4C:	FFFFFFFF
C2/FC50:	FFFFFFFF
C2/FC54:	FFFFFFFF
C2/FC58:	FFFFFFFF
C2/FC5C:	FFFFFFFF
C2/FC60:	FFFFFFFF
C2/FC64:	FFFFFFFF
C2/FC68:	FFFFFFFF
C2/FC6C:	FF


; Below are tables for gradually increasing or decreasing
; various parameters. During the ending, the data distribution
; affects Mode 7 rotation and governs the back-and-forth or
; up-and-down motion of various birds and airships. In battle,
; it influences the path of most sprites, such as the circular
; motion of boomerangs.

; Sine/Cosine Table (16-bit, signed)(C2/FC6D - C2/FE6C)
; Data retrieved from C1/6C0A and C1/6C6E
; Bell curve - Positive slope
C2/FC6D:	0000    	; 00: +0
C2/FC6F:	2403    	; 01: +804
C2/FC71:	4806    	; 02: +1608
C2/FC73:	6A09    	; 03: +2410
C2/FC75:	8C0C    	; 04: +3212
C2/FC77:	AB0F    	; 05: +4011
C2/FC79:	C812    	; 06: +4808
C2/FC7B:	E215    	; 07: +5602
C2/FC7D:	F918    	; 08: +6393
C2/FC7F:	0B1C    	; 09: +7179
C2/FC81:	1A1F    	; 0A: +7962
C2/FC83:	2322    	; 0B: +8739
C2/FC85:	2825    	; 0C: +9512
C2/FC87:	2628    	; 0D: +10278
C2/FC89:	1F2B    	; 0E: +11039
C2/FC8B:	112E    	; 0F: +11793
C2/FC8D:	FB30    	; 10: +12539
C2/FC8F:	DF33    	; 11: +13279
C2/FC91:	BA36    	; 12: +14010
C2/FC93:	8C39    	; 13: +14732
C2/FC95:	563C    	; 14: +15446
C2/FC97:	173F    	; 15: +16151
C2/FC99:	CE41    	; 16: +16846
C2/FC9B:	7A44    	; 17: +17530
C2/FC9D:	1C47    	; 18: +18204
C2/FC9F:	B349    	; 19: +18867
C2/FCA1:	3F4C    	; 1A: +19519
C2/FCA3:	BF4E    	; 1B: +20159
C2/FCA5:	3351    	; 1C: +20787
C2/FCA7:	9B53    	; 1D: +21403
C2/FCA9:	F555    	; 1E: +22005
C2/FCAB:	4258    	; 1F: +22594
C2/FCAD:	825A    	; 20: +23170
C2/FCAF:	B35C    	; 21: +23731
C2/FCB1:	D75E    	; 22: +24279
C2/FCB3:	EB60    	; 23: +24811
C2/FCB5:	F162    	; 24: +25329
C2/FCB7:	E864    	; 25: +25832
C2/FCB9:	CF66    	; 26: +26319
C2/FCBB:	A668    	; 27: +26790
C2/FCBD:	6D6A    	; 28: +27245
C2/FCBF:	236C    	; 29: +27683
C2/FCC1:	C96D    	; 2A: +28105
C2/FCC3:	5E6F    	; 2B: +28510
C2/FCC5:	E270    	; 2C: +28898
C2/FCC7:	5472    	; 2D: +29268
C2/FCC9:	B573    	; 2E: +29621
C2/FCCB:	0475    	; 2F: +29956
C2/FCCD:	4176    	; 30: +30273
C2/FCCF:	6B77    	; 31: +30571
C2/FCD1:	8478    	; 32: +30852
C2/FCD3:	8979    	; 33: +31113
C2/FCD5:	7C7A    	; 34: +31356
C2/FCD7:	5C7B    	; 35: +31580
C2/FCD9:	297C    	; 36: +31785
C2/FCDB:	E37C    	; 37: +31971
C2/FCDD:	897D    	; 38: +32137
C2/FCDF:	1D7E    	; 39: +32285
C2/FCE1:	9C7E    	; 3A: +32412
C2/FCE3:	097F    	; 3B: +32521
C2/FCE5:	617F    	; 3C: +32609
C2/FCE7:	A67F    	; 3D: +32678
C2/FCE9:	D87F    	; 3E: +32728
C2/FCEB:	F57F    	; 3F: +32757

; Bell curve - Negative slope
C2/FCED:	FF7F    	; 40: +32767
C2/FCEF:	F57F    	; 41: +32757
C2/FCF1:	D87F    	; 42: +32728
C2/FCF3:	A67F    	; 43: +32678
C2/FCF5:	617F    	; 44: +32609
C2/FCF7:	097F    	; 45: +32521
C2/FCF9:	9C7E    	; 46: +32412
C2/FCFB:	1D7E    	; 47: +32285
C2/FCFD:	897D    	; 48: +32137
C2/FCFF:	E37C    	; 49: +31971
C2/FD01:	297C    	; 4A: +31785
C2/FD03:	5C7B    	; 4B: +31580
C2/FD05:	7C7A    	; 4C: +31356
C2/FD07:	8979    	; 4D: +31113
C2/FD09:	8478    	; 4E: +30852
C2/FD0B:	6B77    	; 4F: +30571
C2/FD0D:	4176    	; 50: +30273
C2/FD0F:	0475    	; 51: +29956
C2/FD11:	B573    	; 52: +29621
C2/FD13:	5472    	; 53: +29268
C2/FD15:	E270    	; 54: +28898
C2/FD17:	5E6F    	; 55: +28510
C2/FD19:	C96D    	; 56: +28105
C2/FD1B:	236C    	; 57: +27683
C2/FD1D:	6D6A    	; 58: +27245
C2/FD1F:	A668    	; 59: +26790
C2/FD21:	CF66    	; 5A: +26319
C2/FD23:	E864    	; 5B: +25832
C2/FD25:	F162    	; 5C: +25329
C2/FD27:	EB60    	; 5D: +24811
C2/FD29:	D75E    	; 5E: +24279
C2/FD2B:	B35C    	; 5F: +23731
C2/FD2D:	825A    	; 60: +23170
C2/FD2F:	4258    	; 61: +22594
C2/FD31:	F555    	; 62: +22005
C2/FD33:	9A53    	; 63: +21402
C2/FD35:	3351    	; 64: +20787
C2/FD37:	BF4E    	; 65: +20159
C2/FD39:	3F4C    	; 66: +19519
C2/FD3B:	B349    	; 67: +18867
C2/FD3D:	1C47    	; 68: +18204
C2/FD3F:	7A44    	; 69: +17530
C2/FD41:	CE41    	; 6A: +16846
C2/FD43:	173F    	; 6B: +16151
C2/FD45:	563C    	; 6C: +15446
C2/FD47:	8C39    	; 6D: +14732
C2/FD49:	BA36    	; 6E: +14010
C2/FD4B:	DE33    	; 6F: +13278
C2/FD4D:	FB30    	; 70: +12539
C2/FD4F:	112E    	; 71: +11793
C2/FD51:	1F2B    	; 72: +11039
C2/FD53:	2628    	; 73: +10278
C2/FD55:	2825    	; 74: +9512
C2/FD57:	2322    	; 75: +8739
C2/FD59:	1A1F    	; 76: +7962
C2/FD5B:	0B1C    	; 77: +7179
C2/FD5D:	F818    	; 78: +6392
C2/FD5F:	E215    	; 79: +5602
C2/FD61:	C812    	; 7A: +4808
C2/FD63:	AB0F    	; 7B: +4011
C2/FD65:	8C0C    	; 7C: +3212
C2/FD67:	6A09    	; 7D: +2410
C2/FD69:	4806    	; 7E: +1608
C2/FD6B:	2403    	; 7F: +804

; Well curve - Negative slope
C2/FD6D:	0000    	; 80: -0
C2/FD6F:	DCFC    	; 81: -804
C2/FD71:	B8F9    	; 82: -1608
C2/FD73:	95F6    	; 83: -2411
C2/FD75:	74F3    	; 84: -3212
C2/FD77:	55F0    	; 85: -4011
C2/FD79:	38ED    	; 86: -4808
C2/FD7B:	1EEA    	; 87: -5602
C2/FD7D:	07E7    	; 88: -6393
C2/FD7F:	F5E3    	; 89: -7179
C2/FD81:	E6E0    	; 8A: -7962
C2/FD83:	DCDD    	; 8B: -8740
C2/FD85:	D8DA    	; 8C: -9512
C2/FD87:	D9D7    	; 8D: -10279
C2/FD89:	E1D4    	; 8E: -11039
C2/FD8B:	EFD1    	; 8F: -11793
C2/FD8D:	04CF    	; 90: -12540
C2/FD8F:	21CC    	; 91: -13279
C2/FD91:	46C9    	; 92: -14010
C2/FD93:	73C6    	; 93: -14733
C2/FD95:	AAC3    	; 94: -15446
C2/FD97:	E9C0    	; 95: -16151
C2/FD99:	32BE    	; 96: -16846
C2/FD9B:	86BB    	; 97: -17530
C2/FD9D:	E3B8    	; 98: -18205
C2/FD9F:	4CB6    	; 99: -18868
C2/FDA1:	C1B3    	; 9A: -19519
C2/FDA3:	41B1    	; 9B: -20159
C2/FDA5:	CDAE    	; 9C: -20787
C2/FDA7:	65AC    	; 9D: -21403
C2/FDA9:	0BAA    	; 9E: -22005
C2/FDAB:	BEA7    	; 9F: -22594
C2/FDAD:	7EA5    	; A0: -23170
C2/FDAF:	4CA3    	; A1: -23732
C2/FDB1:	29A1    	; A2: -24279
C2/FDB3:	149F    	; A3: -24812
C2/FDB5:	0F9D    	; A4: -25329
C2/FDB7:	189B    	; A5: -25832
C2/FDB9:	3199    	; A6: -26319
C2/FDBB:	5A97    	; A7: -26790
C2/FDBD:	9395    	; A8: -27245
C2/FDBF:	DD93    	; A9: -27683
C2/FDC1:	3792    	; AA: -28105
C2/FDC3:	A290    	; AB: -28510
C2/FDC5:	1E8F    	; AC: -28898
C2/FDC7:	AC8D    	; AD: -29268
C2/FDC9:	4B8C    	; AE: -29621
C2/FDCB:	FC8A    	; AF: -29956
C2/FDCD:	BF89    	; B0: -30273
C2/FDCF:	9588    	; B1: -30571
C2/FDD1:	7C87    	; B2: -30852
C2/FDD3:	7786    	; B3: -31113
C2/FDD5:	8485    	; B4: -31356
C2/FDD7:	A484    	; B5: -31580
C2/FDD9:	D783    	; B6: -31785
C2/FDDB:	1D83    	; B7: -31971
C2/FDDD:	7782    	; B8: -32137
C2/FDDF:	E381    	; B9: -32285
C2/FDE1:	6481    	; BA: -32412
C2/FDE3:	F780    	; BB: -32521
C2/FDE5:	9F80    	; BC: -32609
C2/FDE7:	5A80    	; BD: -32678
C2/FDE9:	2880    	; BE: -32728
C2/FDEB:	0B80    	; BF: -32757

; Well curve - Positive slope
C2/FDED:	0180    	; C0: -32767
C2/FDEF:	0B80    	; C1: -32757
C2/FDF1:	2880    	; C2: -32728
C2/FDF3:	5A80    	; C3: -32678
C2/FDF5:	9F80    	; C4: -32609
C2/FDF7:	F780    	; C5: -32521
C2/FDF9:	6481    	; C6: -32412
C2/FDFB:	E381    	; C7: -32285
C2/FDFD:	7782    	; C8: -32137
C2/FDFF:	1D83    	; C9: -31971
C2/FE01:	D783    	; CA: -31785
C2/FE03:	A484    	; CB: -31580
C2/FE05:	8485    	; CC: -31356
C2/FE07:	7786    	; CD: -31113
C2/FE09:	7D87    	; CE: -30851
C2/FE0B:	9588    	; CF: -30571
C2/FE0D:	BF89    	; D0: -30273
C2/FE0F:	FC8A    	; D1: -29956
C2/FE11:	4B8C    	; D2: -29621
C2/FE13:	AC8D    	; D3: -29268
C2/FE15:	1E8F    	; D4: -28898
C2/FE17:	A290    	; D5: -28510
C2/FE19:	3792    	; D6: -28105
C2/FE1B:	DD93    	; D7: -27683
C2/FE1D:	9395    	; D8: -27245
C2/FE1F:	5A97    	; D9: -26790
C2/FE21:	3299    	; DA: -26318
C2/FE23:	189B    	; DB: -25832
C2/FE25:	0F9D    	; DC: -25329
C2/FE27:	159F    	; DD: -24811
C2/FE29:	2AA1    	; DE: -24278
C2/FE2B:	4DA3    	; DF: -23731
C2/FE2D:	7EA5    	; E0: -23170
C2/FE2F:	BEA7    	; E1: -22594
C2/FE31:	0BAA    	; E2: -22005
C2/FE33:	66AC    	; E3: -21402
C2/FE35:	CDAE    	; E4: -20787
C2/FE37:	41B1    	; E5: -20159
C2/FE39:	C1B3    	; E6: -19519
C2/FE3B:	4DB6    	; E7: -18867
C2/FE3D:	E4B8    	; E8: -18204
C2/FE3F:	86BB    	; E9: -17530
C2/FE41:	33BE    	; EA: -16845
C2/FE43:	EAC0    	; EB: -16150
C2/FE45:	AAC3    	; EC: -15446
C2/FE47:	74C6    	; ED: -14732
C2/FE49:	47C9    	; EE: -14009
C2/FE4B:	22CC    	; EF: -13278
C2/FE4D:	05CF    	; F0: -12539
C2/FE4F:	F0D1    	; F1: -11792
C2/FE51:	E2D4    	; F2: -11038
C2/FE53:	DAD7    	; F3: -10278
C2/FE55:	D9DA    	; F4: -9511
C2/FE57:	DDDD    	; F5: -8739
C2/FE59:	E7E0    	; F6: -7961
C2/FE5B:	F5E3    	; F7: -7179
C2/FE5D:	08E7    	; F8: -6392
C2/FE5F:	1FEA    	; F9: -5601
C2/FE61:	39ED    	; FA: -4807
C2/FE63:	55F0    	; FB: -4011
C2/FE65:	75F3    	; FC: -3211
C2/FE67:	96F6    	; FD: -2410
C2/FE69:	B9F9    	; FE: -1607
C2/FE6B:	DCFC    	; FF: -804

; Sine/Cosine Table (8-bit, signed) (C2/FE6D - C2/FF6C)
; Called from C1/6B9A.
C2/FE6D:	00
C2/FE6E:	03
C2/FE6F:	06
C2/FE70:	09
C2/FE71:	0C
C2/FE72:	10
C2/FE73:	13
C2/FE74:	16
C2/FE75:	19
C2/FE76:	1C
C2/FE77:	1F
C2/FE78:	22
C2/FE79:	25
C2/FE7A:	28
C2/FE7B:	2B
C2/FE7C:	2E
C2/FE7D:	31
C2/FE7E:	33
C2/FE7F:	36
C2/FE80:	39
C2/FE81:	3C
C2/FE82:	3F
C2/FE83:	41
C2/FE84:	44
C2/FE85:	47
C2/FE86:	49
C2/FE87:	4C
C2/FE88:	4E
C2/FE89:	51
C2/FE8A:	53
C2/FE8B:	55
C2/FE8C:	58
C2/FE8D:	5A
C2/FE8E:	5C
C2/FE8F:	5E
C2/FE90:	60
C2/FE91:	62
C2/FE92:	64
C2/FE93:	66
C2/FE94:	68
C2/FE95:	6A
C2/FE96:	6B
C2/FE97:	6D
C2/FE98:	6F
C2/FE99:	70
C2/FE9A:	71
C2/FE9B:	73
C2/FE9C:	74
C2/FE9D:	75
C2/FE9E:	76
C2/FE9F:	78
C2/FEA0:	79
C2/FEA1:	7A
C2/FEA2:	7A
C2/FEA3:	7B
C2/FEA4:	7C
C2/FEA5:	7D
C2/FEA6:	7D
C2/FEA7:	7E
C2/FEA8:	7E
C2/FEA9:	7E
C2/FEAA:	7F
C2/FEAB:	7F
C2/FEAC:	7F
C2/FEAD:	7F
C2/FEAE:	7F
C2/FEAF:	7F
C2/FEB0:	7F
C2/FEB1:	7E
C2/FEB2:	7E
C2/FEB3:	7E
C2/FEB4:	7D
C2/FEB5:	7D
C2/FEB6:	7C
C2/FEB7:	7B
C2/FEB8:	7A
C2/FEB9:	7A
C2/FEBA:	79
C2/FEBB:	78
C2/FEBC:	76
C2/FEBD:	75
C2/FEBE:	74
C2/FEBF:	73
C2/FEC0:	71
C2/FEC1:	70
C2/FEC2:	6F
C2/FEC3:	6D
C2/FEC4:	6B
C2/FEC5:	6A
C2/FEC6:	68
C2/FEC7:	66
C2/FEC8:	64
C2/FEC9:	62
C2/FECA:	60
C2/FECB:	5E
C2/FECC:	5C
C2/FECD:	5A
C2/FECE:	58
C2/FECF:	55
C2/FED0:	53
C2/FED1:	51
C2/FED2:	4E
C2/FED3:	4C
C2/FED4:	49
C2/FED5:	47
C2/FED6:	44
C2/FED7:	41
C2/FED8:	3F
C2/FED9:	3C
C2/FEDA:	39
C2/FEDB:	36
C2/FEDC:	33
C2/FEDD:	31
C2/FEDE:	2E
C2/FEDF:	2B
C2/FEE0:	28
C2/FEE1:	25
C2/FEE2:	22
C2/FEE3:	1F
C2/FEE4:	1C
C2/FEE5:	19
C2/FEE6:	16
C2/FEE7:	13
C2/FEE8:	10
C2/FEE9:	0C
C2/FEEA:	09
C2/FEEB:	06
C2/FEEC:	03
C2/FEED:	00
C2/FEEE:	FD
C2/FEEF:	FA
C2/FEF0:	F7
C2/FEF1:	F4
C2/FEF2:	F0
C2/FEF3:	ED
C2/FEF4:	EA
C2/FEF5:	E7
C2/FEF6:	E4
C2/FEF7:	E1
C2/FEF8:	DE
C2/FEF9:	DB
C2/FEFA:	D8
C2/FEFB:	D5
C2/FEFC:	D2
C2/FEFD:	CF
C2/FEFE:	CD
C2/FEFF:	CA
C2/FF00:	C7
C2/FF01:	C4
C2/FF02:	C1
C2/FF03:	BF
C2/FF04:	BC
C2/FF05:	B9
C2/FF06:	B7
C2/FF07:	B4
C2/FF08:	B2
C2/FF09:	AF
C2/FF0A:	AD
C2/FF0B:	AB
C2/FF0C:	A8
C2/FF0D:	A6
C2/FF0E:	A4
C2/FF0F:	A2
C2/FF10:	A0
C2/FF11:	9E
C2/FF12:	9C
C2/FF13:	9A
C2/FF14:	98
C2/FF15:	96
C2/FF16:	95
C2/FF17:	93
C2/FF18:	91
C2/FF19:	90
C2/FF1A:	8F
C2/FF1B:	8D
C2/FF1C:	8C
C2/FF1D:	8B
C2/FF1E:	8A
C2/FF1F:	88
C2/FF20:	87
C2/FF21:	86
C2/FF22:	86
C2/FF23:	85
C2/FF24:	84
C2/FF25:	83
C2/FF26:	83
C2/FF27:	82
C2/FF28:	82
C2/FF29:	82
C2/FF2A:	81
C2/FF2B:	81
C2/FF2C:	81
C2/FF2D:	81
C2/FF2E:	81
C2/FF2F:	81
C2/FF30:	81
C2/FF31:	82
C2/FF32:	82
C2/FF33:	82
C2/FF34:	83
C2/FF35:	83
C2/FF36:	84
C2/FF37:	85
C2/FF38:	86
C2/FF39:	86
C2/FF3A:	87
C2/FF3B:	88
C2/FF3C:	8A
C2/FF3D:	8B
C2/FF3E:	8C
C2/FF3F:	8D
C2/FF40:	8F
C2/FF41:	90
C2/FF42:	91
C2/FF43:	93
C2/FF44:	95
C2/FF45:	96
C2/FF46:	98
C2/FF47:	9A
C2/FF48:	9C
C2/FF49:	9E
C2/FF4A:	A0
C2/FF4B:	A2
C2/FF4C:	A4
C2/FF4D:	A6
C2/FF4E:	A8
C2/FF4F:	AB
C2/FF50:	AD
C2/FF51:	AF
C2/FF52:	B2
C2/FF53:	B4
C2/FF54:	B7
C2/FF55:	B9
C2/FF56:	BC
C2/FF57:	BF
C2/FF58:	C1
C2/FF59:	C4
C2/FF5A:	C7
C2/FF5B:	CA
C2/FF5C:	CD
C2/FF5D:	CF
C2/FF5E:	D2
C2/FF5F:	D5
C2/FF60:	D8
C2/FF61:	DB
C2/FF62:	DE
C2/FF63:	E1
C2/FF64:	E4
C2/FF65:	E7
C2/FF66:	EA
C2/FF67:	ED
C2/FF68:	F0
C2/FF69:	F4
C2/FF6A:	F7
C2/FF6B:	FA
C2/FF6C:	FD

; Decompress data

; $00F3 = 24-bit address of input data block.
; $00F6 - Bit 0 of $00F8 = 17-bit address to write to in WRAM.
; Our other output buffer is a temporary one of 800h bytes in length.  It resides
; in Bank 7F, from Offsets F800h to FFFFh.  The initial offset written to is FFDEh,
; wrapping to F800h after FFFFh is passed, going up to FFFFh again and wrapping to
; F800h as needed, etc.)

; Input block format:
; First 2 bytes: 16-bit number of bytes (including control bytes and these 2 bytes to
;                                        read from block.
; Control byte.  For N going from 0 through 7, ascending:
;                Bit N: Type of the (N+1)th value read from the input block after this
;                       control byte
;                       1 = 1 byte to copy to output blocks.
;                       0 = 2 bytes containing a pointer to elsewhere in temporary
;                           output block and a quantity of bytes to copy within
;                           output block.
; Data value from input block (8 in a row, unless there are no values left
;                              to read from block):
; If corresponding control bit was 1, a given value is just 1 plain data byte to
;  copy to output block.
; If corresponding control bit was 0, data value takes 2 bytes and has the format:
;  Byte 1 = Bits 0-7 of a 16-bit pointer to earlier in output block
;  Byte 2, Bits 0-2 = Bits 8-10 of a 16-bit pointer to earlier in temporary output
;                     buffer.
;                     Bits 11-15 of pointer will always be set, so it's
;                     F800h - FFFFh.
;  Byte 2, Bits 3-7 = Add 3 to get Quantity of bytes to copy from one place to
;                     another in our output block.
; Once 8 data values have been read in a row, and provided there are still more
; values to be read from input block, the next value read will be a new Control Byte,
; and the process will repeat.)

C2/FF6D:	8B      	PHB            ; Save DB
C2/FF6E:	0B      	PHD            ; Save DP
C2/FF6F:	A20000  	LDX #$0000     ; Clear X
C2/FF72:	DA      	PHX            ; Put on stack
C2/FF73:	2B      	PLD            ; Set DP to 0
C2/FF74:	C220    	REP #$20       ; 16-bit A
C2/FF76:	A7F3    	LDA [$F3]      ; Source size
C2/FF78:	85FC    	STA $FC        ; Memorize it
C2/FF7A:	A5F6    	LDA $F6        ; Dest address
C2/FF7C:	8F812100	STA $002181    ; Set WRAM LBs
C2/FF80:	E220    	SEP #$20       ; 8-bit A
C2/FF82:	A5F8    	LDA $F8        ; Dest bank
C2/FF84:	2901    	AND #$01       ; 00 or 01
C2/FF86:	8F832100	STA $002183    ; Set WRAM HB
C2/FF8A:	A901    	LDA #$01       ; Strings left: 0
C2/FF8C:	85FE    	STA $FE        ; Init counter
C2/FF8E:	A00200  	LDY #$0002     ; Src index

; Fork: Clear dictionary buffer
C2/FF91:	A97F    	LDA #$7F       ; Bank: 7F
C2/FF93:	48      	PHA            ; Put on stack
C2/FF94:	AB      	PLB            ; Set DB to 7F
C2/FF95:	A200F8  	LDX #$F800     ; Base index
C2/FF98:	7B      	TDC            ; Clear A
C2/FF99:	9D0000  	STA $0000,X    ; Clear $F800+X
C2/FF9C:	E8      	INX            ; Index +1
C2/FF9D:	D0FA    	BNE $FF99      ; If no overflow

; Fork: Load 8 new control flags if none remains
C2/FF9F:	A2DEFF  	LDX #$FFDE     ; Buffer index
C2/FFA2:	C6FE    	DEC $FE        ; Strings left -1
C2/FFA4:	D009    	BNE $FFAF      ; Branch if > 0
C2/FFA6:	A908    	LDA #$08       ; Strings left: 8
C2/FFA8:	85FE    	STA $FE        ; Set counter
C2/FFAA:	B7F3    	LDA [$F3],Y    ; Control flags
C2/FFAC:	85FF    	STA $FF        ; Memorize them
C2/FFAE:	C8      	INY            ; Src index +1

; Fork: Decode source byte
C2/FFAF:	46FF    	LSR $FF        ; Control code?
C2/FFB1:	9011    	BCC $FFC4      ; Branch if so
C2/FFB3:	B7F3    	LDA [$F3],Y    ; Literal byte
C2/FFB5:	8F802100	STA $002180    ; To destination
C2/FFB9:	9D0000  	STA $0000,X    ; To dictionary
C2/FFBC:	E8      	INX            ; Buffer index +1
C2/FFBD:	D037    	BNE $FFF6      ; If no overflow
C2/FFBF:	A200F8  	LDX #$F800     ; Reset index
C2/FFC2:	8032    	BRA $FFF6      ; Load next byte

; Fork: Prepare to load from pseudo-dictionary
C2/FFC4:	B7F3    	LDA [$F3],Y    ; Pointer LB
C2/FFC6:	EB      	XBA            ; Save in B
C2/FFC7:	C8      	INY            ; Src index +1
C2/FFC8:	84F9    	STY $F9        ; Memorize it
C2/FFCA:	B7F3    	LDA [$F3],Y    ; Size x8 -3
C2/FFCC:	4A      	LSR A          ; ÷2
C2/FFCD:	4A      	LSR A          ; ÷4
C2/FFCE:	4A      	LSR A          ; ÷8
C2/FFCF:	18      	CLC            ; Prepare ADC
C2/FFD0:	6903    	ADC #$03       ; +3 bytes
C2/FFD2:	85FB    	STA $FB        ; Set string size
C2/FFD4:	B7F3    	LDA [$F3],Y    ; Pointer HB
C2/FFD6:	09F8    	ORA #$F8       ; Intended value
C2/FFD8:	EB      	XBA            ; Switch with LB
C2/FFD9:	A8      	TAY            ; Index pointer

; Fork: Repeat a previous data string
C2/FFDA:	B90000  	LDA $0000,Y    ; Source byte
C2/FFDD:	8F802100	STA $002180    ; To destination
C2/FFE1:	9D0000  	STA $0000,X    ; To dictionary
C2/FFE4:	E8      	INX            ; Buffer index +1
C2/FFE5:	D003    	BNE $FFEA      ; If no overflow
C2/FFE7:	A200F8  	LDX #$F800     ; Reset index
C2/FFEA:	C8      	INY            ; Src index +1
C2/FFEB:	D003    	BNE $FFF0      ; If no overflow
C2/FFED:	A000F8  	LDY #$F800     ; Reset src index
C2/FFF0:	C6FB    	DEC $FB        ; One less byte
C2/FFF2:	D0E6    	BNE $FFDA      ; Loop till last

; Fork: Handle next source byte
C2/FFF4:	A4F9    	LDY $F9        ; Src index
C2/FFF6:	C8      	INY            ; Src index +1
C2/FFF7:	C4FC    	CPY $FC        ; Done unpacking?
C2/FFF9:	D0A7    	BNE $FFA2      ; Loop if not
C2/FFFB:	7B      	TDC            ; Clear A
C2/FFFC:	EB      	XBA            ; ...
C2/FFFD:	2B      	PLD            ; Restore DP
C2/FFFE:	AB      	PLB            ; Restore DB
C2/FFFF:	6B      	RTL
